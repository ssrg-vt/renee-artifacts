add_vec_signed[N:posnat, M:posnat] : THEORY
BEGIN

IMPORTING signed
IMPORTING to_vec_inc

bv1: VAR bvec[N]

bv2: VAR bvec[M]

add_vec_signed(bv1, bv2) : MACRO bvec[N] = to_vec_inc(N, signed[N](bv1) + signed[M](bv2))

add_overflow_vec_signed(bv1, bv2) : MACRO [bvec[N], bit, bit] =
    LET add_result = signed[N](bv1) + signed[M](bv2) IN
    LET overflow = add_result > maxint[N] OR add_result < minint[N],
        c_out = (mod(floor((unsigned[N](bv1) + unsigned[M](bv2))/exp2(N)), 2) /= 0) IN
    (to_vec_inc(N, add_result), overflow , c_out)

add_vec_vec_range_signed(bv1, bv2) : MACRO int = signed(bv1) + signed(bv2)

END add_vec_signed

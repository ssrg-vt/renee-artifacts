ADDS_ADDSUB_IMM_B11BB997      : THEORY

      BEGIN

      IMPORTING arm_state, addsub_imm

      X_sts : [ below(32) -> bvec[64] ] = init`X  with [(23):= bv(0b0110111010011100010010100000000000000000000000000000000000000000),
							   (12):= bv(0b0110110000001001111100000000000000000000000000000000000000000000)] 

      p1    :  s = init with [`X:= X_sts, `PSTATE`NZCV:= bv(0b0011),`PC`i:= 65536]
      
      adds_addsub_imm_conc_test: Theory = addsub_imm[p1]{{Diag := bv(0b11101001100111011101100010001101) , addr:= 65536}}

      test1: lemma let X_post =  p1`X with [ ( 23 ) := bv(0b0010010011101001111100000000000000000000000000000000000000000000)] in

          let p2     =  p1 with [`X:= X_post, `PSTATE`NZCV:= bv(0b0000) , `PC`i:= 65540] in

          adds_addsub_imm_conc_test.post`X(23) = p2`X(23) and

         adds_addsub_imm_conc_test.post`PSTATE`NZCV = p2`PSTATE`NZCV 

%|- X_sts_TCC*: PROOF
%|- p1_TCC1   : PROOF
%|- adds_addsub_imm_conc_test_TCC*: PROOF (eval-formula) QED

%|- test1_TCC1: PROOF  (eval-formula) QED
%|- test1_TCC2: PROOF (skeep)(eval-formula) QED

%|- test1 : PROOF
%|- (then (assert) (spread (split) ((addsub-imm) (addsub-imm))))
%|- QED

END ADDS_ADDSUB_IMM_B11BB997

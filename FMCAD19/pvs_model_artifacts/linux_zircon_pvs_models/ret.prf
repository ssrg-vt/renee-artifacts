(ret
 (v_TCC1 0
  (v_TCC1-1 nil 3766907022 ("" (eval-formula) nil) nil nil
   (v subtype "0b0" "naturalnumbers.below(exp2.exp2(1))")))
 (v_TCC2 0
  (v_TCC2-1 nil 3766907022 ("" (eval-formula) nil) nil nil
   (v subtype "0b1101011" "naturalnumbers.below(exp2.exp2(7))")))
 (v_TCC3 0
  (v_TCC3-1 nil 3766907022 ("" (eval-formula) nil) nil nil
   (v subtype "0b11111" "naturalnumbers.below(exp2.exp2(5))")))
 (v_TCC4 0
  (v_TCC4-1 nil 3766907022 ("" (eval-formula) nil) nil nil
   (v subtype "0b0" "naturalnumbers.below(exp2.exp2(4))")))
 (v_TCC5 0
  (v_TCC5-1 nil 3766907022 ("" (eval-formula) nil) nil nil
   (v subtype "0b1" "naturalnumbers.below(exp2.exp2(2))")))
 (v_TCC6 0
  (v_TCC6-1 nil 3766907022 ("" (eval-formula) nil) nil nil
   (v subtype "0b0" "naturalnumbers.below(exp2.exp2(5))")))
 (branch_typ_TCC1 0
  (branch_typ_TCC1-1 nil 3766904123 ("" (subtype-tcc) nil nil) nil nil
   (branch_typ subtype "0b0" "naturalnumbers.below(exp2.exp2(2))")))
 (branch_typ_TCC2 0
  (branch_typ_TCC2-1 nil 3766904123 ("" (subtype-tcc) nil nil) nil nil
   (branch_typ subtype "0b10" "naturalnumbers.below(exp2.exp2(2))")))
 (branch_typ_TCC3 0
  (branch_typ_TCC3-1 nil 3766904123 ("" (branch_typ_TCC3) nil nil) nil
   nil
   (branch_typ disjointness
    "COND ret.v`op = bv[2](0b00) -> Basic_ASL_Types.BranchType_JMP, ret.v`op = bv[2](0b10) -> Basic_ASL_Types.BranchType_CALL, ret.v`op = bv[2](0b01) -> Basic_ASL_Types.BranchType_RET, ELSE -> stdcatch[Basic_ASL_Types.BranchType, booleans.boolean].throw(\"UnallocatedEncoding()\", stdexc[booleans.boolean].make_exc(\"UnallocatedEncoding()\", stdlang.fail)) ENDCOND"
    "nil")))
 (sts1_TCC1 0
  (sts1_TCC1-1 nil 3766904123
   ("" (subtype-tcc) (("" (postpone) nil nil)) nil)
   ((UInt const-decl "int" UInt nil)) nil
   (sts1 subtype "UInt.UInt(5, ret.v`Rm)" "nat")))
 (sts1_TCC2 0
  (sts1_TCC2-1 nil 3766904123 ("" (subtype-tcc) nil nil) nil nil
   (sts1 subtype "0b1" "naturalnumbers.below(exp2.exp2(1))")))
 (sts1_TCC3 0
  (sts1_TCC3-1 nil 3766904123
   ("" (subtype-tcc) (("" (grind) nil nil)) nil)
   ((bts const-decl "bvec[n2 - n1 + 1]" bts nil)
    (UInt const-decl "int" UInt nil))
   nil
   (sts1 subtype "UInt.UInt(5, ret.v`Rn)" "naturalnumbers.below(32)")))
 (post_TCC1 0
  (post_TCC1-1 nil 3766919514
   ("" (subtype-tcc) (("" (grind) nil nil)) nil)
   ((UInt const-decl "int" UInt nil)
    (bts const-decl "bvec[n2 - n1 + 1]" bts nil))
   nil (post subtype "ret.sts1`n" "naturalnumbers.below(32)"))))


(ShiftReg
 (ShiftReg_TCC1 0
  (ShiftReg_TCC1-1 nil 3751584449 ("" (subtype-tcc) nil nil) nil nil
   (ShiftReg subtype "ShiftReg.amount" "subrange[0, 64]")))
 (ShiftReg_TCC2 0
  (ShiftReg_TCC2-1 nil 3751584449 ("" (subtype-tcc) nil nil) nil nil
   (ShiftReg subtype "ShiftReg.amount" "subrange[0, 64]")))
 (ShiftReg_TCC3 0
  (ShiftReg_TCC3-1 nil 3751584449 ("" (subtype-tcc) nil nil) nil nil
   (ShiftReg subtype "ShiftReg.amount" "subrange[0, 64]")))
 (ShiftReg_TCC4 0
  (ShiftReg_TCC4-1 nil 3751584449
   ("" (skeep) (("" (grind) nil nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil (ShiftReg subtype "ShiftReg.amount" "subrange[0, N]")))
 (ShiftReg_TCC5 0
  (ShiftReg_TCC1-1 nil 3751571709
   ("" (skeep) (("" (grind) nil nil)) nil) nil nil
   (ShiftReg disjointness
    "COND ShiftReg.type_ = Basic_ASL_Types.ShiftType_LSL -> LSL.LSL(ShiftReg.N, ShiftReg.result, ShiftReg.amount), ShiftReg.type_ = Basic_ASL_Types.ShiftType_LSR -> LSR.LSR(ShiftReg.N, ShiftReg.result, ShiftReg.amount), ShiftReg.type_ = Basic_ASL_Types.ShiftType_ASR -> ASR.ASR(ShiftReg.N, ShiftReg.result, ShiftReg.amount), ELSE -> ROR.ROR(ShiftReg.N, ShiftReg.result, ShiftReg.amount) ENDCOND"
    "nil"))))


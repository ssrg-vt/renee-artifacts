STR_IMM_GEN_F92241C5 : THEORY

      BEGIN

      IMPORTING str_imm_gen, bitvectors@bv_arith_nat

      X_sts : [ below(32) -> bvec[64] ] = init`X with [( 14 ) := bv[64](0b0001000000000000100000000000000000000000000000000000000000000000),
						       ( 5 )  := bv[64](0b0001111001101010001011000100100000000000000000000000000000000000)] 

      p     : s = init with [`X:= X_sts]

      conc_test_1 : Theory = str_imm_gen[p]{{ Diag:= bv[32](0b10100011100000100100010010011111) , addr:= 65536}}

      u1 : VAR nat

      test1 : lemma conc_test_1.u = u1 => 
                          let Mem_post = p`Mem with [ ( 65544):= p`X(5) ] in
                                         conc_test_1.post`Mem(u1) = Mem_post(65544)

%|- X_sts_TCC* : PROOF
%|- p_TCC1     : PROOF
%|- conc_test_1_TCC* : PROOF
%|- test1_TCC1 : PROOF (eval-formula)
%|- QED

%|- test1 : PROOF
%|- (str-imm-gen)
%|- QED

END STR_IMM_GEN_F92241C5

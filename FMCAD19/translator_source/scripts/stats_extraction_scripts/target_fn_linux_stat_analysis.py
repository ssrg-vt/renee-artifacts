#!/usr/bin/env python
# How to run the script => python target_fn_zircon_stat_analysis_linux.py 
# If this script has to be extended for other target binaries such as linux the below two data structures have to be generated using json_parser_radare2.py (stats part) and then handcrafted .

#semi automatically generated
menu_dict = {"1":("condcmp_imm",21),
"2":("ldst_pos",924),
"3":("bitfield",279),
"4":("addsub_ext",55),
"5":("log_shift",518),
"6":("ldstpair_pre",351),
"7":("extract",15),
"8":("log_imm",259),
"9":("dp_2src",108),
"10":("pcreladdr",418),
"11":("condbranch",398),
"12":("system",232),
"13":("condsel",224),
"14":("movewide",71),
"15":("ldstpair_post",346),
"16":("ldst_regoff",180),
"17":("ldst_immpost",48),
"18":("ldstpair_off",285),
"19":("branch_imm",351),
"20":("branch_reg",1401),
"21":("addsub_shift",490),
"22":("ldstnapair_offs",1),
"23":("dp_3src",74),
"24":("dp_1src",31),
"25":("compbranch",394),
"26":("ldst_immpre",28),
"27":("addsub_imm",808),
"28":("testbranch",102),
"29":("exception",36),
"30":("loadlit",2),
"31":("ldst_unscaled",28),
"32":("ldstexcl",146),
"33":("condcmp_reg",17)}



loops = ['f__show_regs', 'update_cpu_capabilities', 'smp_irq_stat_cpu', 'flush_icache_range', 'f__pi___flush_dcache_area', 'f__clean_dcache_area_pou', 'f__pi___dma_unmap_area', 'f__pi___dma_map_area', 'f__pi___clean_dcache_area_pop', 'f__pi___dma_flush_area', 'get_mm_exe_file', 'add_taint', 'f__request_resource', 'request_resource_conflict', 'lookup_resource', 'iomem_map_sanity_check', 'f__ptrace_link', 'find_user', 'flush_signal_handlers', 'sys_umask', 'wq_worker_waking_up', 'wq_worker_sleeping', 'get_task_pid', 'param_array_get', 'parameqn', 'notifier_call_chain', 'override_creds', 'cpu_set_state_online', 'f__balance_callback', 'set_rq_online.part.15', 'task_rq_lock', 'wake_q_add', 'sched_avg_update', 'set_rq_offline', 'calc_global_load_tick', 'f__calc_delta', 'cpu_load_update_active', 'init_rt_rq', 'f__wake_up_common', 'down_write_trylock', 'queued_read_lock_slowpath', 'queued_write_lock_slowpath', 'irq_set_thread_affinity', 'irq_wait_for_poll', 'irq_chip_compose_msi_msg', 'irq_domain_hierarchical_is_msi_remap', 'rcu_expedite_gp', 'rcu_unexpedite_gp', 'rcu_end_inkernel_boot', 'f__srcu_read_lock', 'f__srcu_read_unlock', 'rcu_dynticks_eqs_exit', 'rcu_init_percpu_data', 'rcu_eqs_enter_common.isra.36', 'rcu_dynticks_snap', 'show_rcu_gp_kthreads', 'rcu_cpu_stall_reset', 'rcutree_dying_cpu', 'rcutree_dead_cpu', 'rcu_cpu_starting', 'rcu_segcblist_entrain', 'rcu_segcblist_insert_done_cbs', 'rcu_segcblist_merge', 'set_normalized_timespec64', 'timespec64_add_safe', 'run_timer_softirq', 'lock_hrtimer_base.isra.1', 'hrtimers_prepare_cpu', 'ktime_get_mono_fast_ns', 'ktime_get_raw_fast_ns', 'ktime_get_real_fast_ns', 'f__getnstimeofday64', 'ktime_get', 'ktime_get_raw', 'timekeeping_max_deferment', 'current_kernel_time64', 'clocks_calc_mult_shift', 'clocksource_suspend', 'clocksource_resume', 'clockevents_suspend', 'clockevents_resume', 'sched_clock', 'task_will_free_mem', 'mark_oom_victim', 'strncpy_from_unsafe', 'build_zonelists', 'nr_free_zone_pages', 'prep_compound_page', 'find_suitable_fallback', 'split_page', 'node_dirty_ok', 'pagevec_remove_exceptionals', 'lruvec_lru_size', 'lruvec_init', 'fold_diff', 'f__mod_node_page_state', 'f__inc_node_state', 'f__dec_zone_state', 'mod_zone_page_state', 'inc_zone_page_state', 'dec_zone_page_state', 'mod_node_page_state', 'inc_node_state', 'inc_node_page_state', 'dec_node_page_state', 'drain_zonestat', 'set_wb_congested', 'pcpu_next_md_free_region', 'pcpu_dump_alloc_info.isra.7', 'vma_interval_tree_subtree_search', 'f__anon_vma_interval_tree_subtree_search', 'workingset_eviction', 'workingset_activation', 'add_mm_counter_fast.part.6', 'sync_mm_rss', 'tlb_gather_mmu', 'user_shm_lock', 'ptep_clear_flush', 'find_vmap_area', 'reset_node_managed_pages', 'memblock_reserved_memory_within', 'f__memblock_dump_all', 'dma_pool_free', 'f__section_nr', 'cdev_purge', 'set_dumpable.part.7', 'f__register_binfmt', 'unregister_binfmt', 'generic_pipe_buf_get', 'f_getown', 'take_dentry_name_snapshot', 'd_set_mounted', 'inode_init_always', 'f__destroy_inode', 'drop_nlink', 'clear_nlink', 'f__iget', 'ihold', 'get_next_ino', 'find_inode_nowait', 'inode_set_flags', 'f__fget', 'get_files_struct', 'mntns_get', 'mnt_clone_write', 'f__mnt_drop_write', 'f__mnt_drop_write_file', 'f__legitimize_mnt', 'f__lookup_mnt', 'mntget', 'iterate_mounts', 'mangle_path', 'seq_list_start_head', 'seq_hlist_start', 'seq_hlist_start_rcu', 'move_expired_inodes', 'wb_io_lists_populated.part.4', 'lockref_get_or_lock', 'lockref_put_or_lock', 'iter_div_u64_rem', 'generic_swap', 'debug_locks_off', 'prandom_bytes_state', 'f__bitmap_equal', 'f__bitmap_complement', 'f__bitmap_and', 'f__bitmap_or', 'f__bitmap_xor', 'f__bitmap_andnot', 'f__bitmap_intersects', 'f__bitmap_subset', 'f__bitmap_weight', 'f__bitmap_set', 'f__bitmap_clear', 'bitmap_from_u32array', 'bitmap_to_u32array', 'sg_nents', 'gcd', 'merge', 'llist_add_batch', 'rhashtable_jhash2', 'rht_bucket_nested', 'refcount_inc_not_zero', 'refcount_sub_and_test', 'refcount_dec_if_one', 'refcount_dec_not_one', 'errseq_sample', 'errseq_check_and_advance', 'bin2hex', 'f__iowrite32_copy', 'f__ioread32_copy', 'f__iowrite64_copy', 'crc32_generic_shift', 'crc32_le', 'gen_pool_virt_to_phys', 'gen_pool_for_each_chunk', 'gen_pool_avail', 'gen_pool_size', 'percpu_counter_add_batch', 'strnlen_user', 'gic_enable_quirks', 'gic_dist_config', 'gic_cpu_config', 'partition_translate_id', 'clk_core_get_boundaries', 'clk_mux_get_parent', '_mix_pool_bytes', 'bus_sort_breadthfirst', 'platform_get_resource', 'attribute_container_add_attrs', 'arch_counter_get_cntvct_mem', 'f__of_find_all_nodes.part.0', 'of_phandle_iterator_args', 'of_bus_default_map', 'of_msi_map_rid', 'change_bit', 'clear_bit', 'set_bit', 'test_and_change_bit', 'test_and_clear_bit', 'test_and_set_bit', 'clear_page', 'f__clear_user', 'copy_page', 'memcmp', 'strchr', 'strcmp', 'f__pi_strlen', 'strncmp', 'strnlen', 'strrchr', 'int_sqrt', 'plist_add', 'f__radix_tree_lookup', 'radix_tree_tag_set', 'radix_tree_tag_get', 'rb_first_postorder', 'strcasecmp', 'strcpy', 'strncpy', 'strcat', 'strncat', 'strchrnul', 'strnchr', 'skip_spaces', 'strcspn', 'strpbrk', 'memset16', 'memset32', 'memset64', 'memscan', 'skip_atoi', 'ip6_string', 'ip4_addr_string_sa', 'ip6_addr_string_sa', 'f__siphash_aligned', 'f__hsiphash_aligned', 'f__pi_memchr', 'mutex_trylock', '_raw_spin_lock', '_raw_spin_lock_bh', '_raw_spin_lock_irq', '_raw_spin_lock_irqsave', '_raw_spin_trylock', 'init_setup', 'rdinit_setup', 'setup_elf_hwcaps', 'wait_bit_init', 'console_init', 'hrtimers_init', 'setup_kmalloc_cache_index_table', 'vm_area_add_early', 'memblock_mem_size', 'memblock_is_reserved', 'node_memmap_size_bytes', 'check_early_ioremap_leak', 'early_platform_add_devices', 'early_platform_cleanup', 'dt_mem_next_cell', 'fdt_bus_default_map', 'fdt_bus_default_translate', 'radix_tree_init_maxnodes', 'init_currently_empty_zone']




# All terminal functions in zircon, This is generated form the script json_parser_radare2.py , the stat calculation functions
fnc_inst_class_dict = {'rcu_sync_exit': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'compbranch', 'condbranch', 'ldstexcl', 'system', 'ldstpair_post', 'branch_reg', 'movewide', 'pcreladdr', 'addsub_shift'], 'enqueue_timer': ['addsub_imm', 'log_shift', 'addsub_shift', 'ldst_regoff', 'ldst_pos', 'compbranch', 'condsel', 'log_imm', 'bitfield', 'movewide', 'dp_2src', 'branch_reg'], 'vfs_setpos': ['testbranch', 'addsub_shift', 'condbranch', 'ldst_pos', 'log_shift', 'branch_reg', 'movewide'], 'devm_action_release': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'branch_reg', 'ldstpair_post'], 'platform_get_resource': ['ldst_pos', 'compbranch', 'log_shift', 'movewide', 'branch_imm', 'addsub_shift', 'condbranch', 'bitfield', 'addsub_imm', 'log_imm', 'branch_reg'], 'f__internal_add_timer': ['log_shift', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'arch_timer_handler_phys': ['system', 'testbranch', 'movewide', 'branch_reg', 'ldstpair_pre', 'log_shift', 'log_imm', 'addsub_imm', 'ldst_pos', 'ldstpair_post'], 'bad_inode_setattr': ['movewide', 'branch_reg'], 'pick_next_task_idle': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_reg', 'ldstpair_post'], 'clk_enable_lock': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'system', 'pcreladdr', 'log_shift', 'branch_imm', 'compbranch', 'ldst_pos', 'addsub_shift', 'condbranch', 'movewide', 'ldstpair_post', 'branch_reg'], 'boot_cpu_init': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'system', 'ldst_regoff', 'log_shift', 'branch_imm', 'ldst_pos', 'ldstpair_post', 'branch_reg'], '_raw_spin_unlock_irqrestore': ['ldst_pos', 'addsub_imm', 'ldstexcl', 'system', 'branch_reg'], 'f__rmem_cmp': ['ldst_pos', 'movewide', 'addsub_shift', 'condsel', 'branch_reg'], 'write_null': ['log_shift', 'branch_reg'], 'get_seconds': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'bus_uevent_filter': ['ldst_pos', 'pcreladdr', 'addsub_imm', 'addsub_shift', 'condsel', 'branch_reg'], 'do_nothing': ['branch_reg'], 'pagecache_write_end': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'f__check_ge': ['log_shift', 'bitfield', 'log_imm', 'branch_reg'], 'topology_set_cpu_scale': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'f__check_gt': ['log_shift', 'bitfield', 'log_imm', 'branch_reg'], 'f__check_sticky': ['movewide', 'branch_reg'], 'arch_timer_shutdown_virt_mem': ['ldst_unscaled', 'addsub_imm', 'ldst_pos', 'log_imm', 'movewide', 'branch_reg'], 'lockref_mark_dead': ['system', 'ldst_pos', 'bitfield', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg', 'exception'], 'refcount_sub_and_test': ['ldst_pos', 'addsub_imm', 'condbranch', 'addsub_shift', 'log_shift', 'ldstexcl', 'compbranch', 'condsel', 'branch_reg', 'branch_imm', 'movewide'], 'f__dummy_sync_sg': ['branch_reg'], 'class_attr_show': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'mminit_validate_memmodel_limits': ['ldst_pos', 'movewide', 'addsub_shift', 'condbranch', 'branch_reg'], 'clk_mux_get_parent': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'system', 'dp_2src', 'compbranch', 'condbranch', 'addsub_shift', 'movewide', 'ldst_immpost', 'ldstpair_post', 'branch_reg', 'bitfield', 'testbranch', 'log_imm', 'condsel', 'dp_1src'], 'inode_owner_or_capable': ['movewide', 'branch_reg'], 'proc_douintvec_minmax': ['movewide', 'branch_reg'], 'umount_one': ['ldst_pos', 'addsub_imm', 'ldstpair_off', 'log_imm', 'branch_reg'], 'find_inode_nowait': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'movewide', 'dp_3src', 'ldst_pos', 'addsub_shift', 'dp_2src', 'branch_imm', 'ldst_regoff', 'compbranch', 'condbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'vfs_statfs': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'compbranch', 'bitfield', 'log_imm', 'condsel', 'ldstpair_post', 'branch_reg'], 'f__wake_up_common': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'compbranch', 'testbranch', 'addsub_shift', 'condbranch', 'movewide', 'branch_imm', 'branch_reg', 'ldstpair_post', 'ldst_immpre', 'ldst_immpost'], 'pm_qos_request': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'ldst_pos', 'branch_reg'], 'f__bitmap_andnot': ['bitfield', 'compbranch', 'movewide', 'ldst_regoff', 'log_shift', 'addsub_imm', 'addsub_shift', 'condbranch', 'log_imm', 'dp_2src', 'condsel', 'branch_reg', 'branch_imm'], 'its_irq_get_msi_base': ['ldst_pos', 'addsub_imm', 'branch_reg'], 'no_blkdev_open': ['movewide', 'branch_reg'], 'clk_factor_set_rate': ['movewide', 'branch_reg'], 'finish_wait': ['ldstpair_pre', 'system', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'addsub_shift', 'condbranch', 'log_shift', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'clear_zone_contiguous': ['ldst_pos', 'branch_reg'], 'create_debug_debugfs_entry': ['movewide', 'branch_reg'], 'swiotlb_update_mem_attributes': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'compbranch', 'bitfield', 'addsub_shift', 'log_imm', 'log_shift', 'branch_imm', 'movewide', 'ldstpair_post', 'branch_reg'], 'cap_task_setnice': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'vm_memory_committed': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'memblock_insert_region.isra.2': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'movewide', 'dp_3src', 'ldst_pos', 'addsub_shift', 'condbranch', 'bitfield', 'log_shift', 'branch_imm', 'ldst_regoff', 'ldstpair_post', 'branch_reg', 'exception'], 'tick_get_device': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'branch_reg'], 'pmd_set_huge': ['log_imm', 'condbranch', 'log_shift', 'ldst_pos', 'system', 'movewide', 'branch_reg', 'exception'], 'is_valid_bugaddr': ['movewide', 'branch_reg'], 'down_write_trylock': ['movewide', 'log_imm', 'ldst_pos', 'ldstexcl', 'log_shift', 'compbranch', 'addsub_imm', 'condsel', 'system', 'branch_reg'], 'rootwait_setup': ['ldst_pos', 'compbranch', 'pcreladdr', 'movewide', 'log_shift', 'branch_reg'], 'transfer_pid': ['log_shift', 'addsub_shift', 'bitfield', 'addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'movewide', 'branch_reg'], 'bad_inode_getattr': ['movewide', 'branch_reg'], 'arch_tlb_gather_mmu': ['addsub_imm', 'movewide', 'log_shift', 'ldstpair_off', 'ldst_pos', 'condsel', 'bitfield', 'log_imm', 'testbranch', 'branch_reg'], 'prepare_to_wait': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'bitfield', 'log_imm', 'branch_imm', 'ldst_immpre', 'addsub_shift', 'condbranch', 'system', 'ldstpair_post', 'branch_reg'], 'irq_domain_reset_irq_data': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'branch_reg'], 'adjust_managed_page_count': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'log_shift', 'branch_imm', 'bitfield', 'addsub_shift', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'f__match_devt': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'gic_get_kvm_info': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'bad_inode_update_time': ['movewide', 'branch_reg'], 'has_mismatched_cache_line_size': ['system', 'pcreladdr', 'log_imm', 'addsub_imm', 'ldst_pos', 'log_shift', 'condsel', 'branch_reg'], 'el1_irq': ['ldstpair_off', 'addsub_imm', 'system', 'ldst_pos', 'movewide', 'pcreladdr', 'log_shift', 'log_imm', 'compbranch', 'ldst_regoff', 'addsub_shift', 'branch_reg'], 'page_move_anon_rmap': ['ldst_pos', 'addsub_imm', 'log_imm', 'condsel', 'branch_reg'], 'down_trylock': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'ldst_pos', 'condbranch', 'bitfield', 'ldstpair_post', 'branch_reg'], 'do_trace_rcu_torture_read': ['branch_reg'], 'write_full': ['movewide', 'branch_reg'], 'switched_to_idle': ['exception'], 'override_creds': ['system', 'ldst_pos', 'ldstexcl', 'addsub_imm', 'compbranch', 'log_shift', 'branch_reg'], 'f__pi_memchr': ['log_imm', 'addsub_imm', 'condbranch', 'ldst_immpost', 'addsub_shift', 'branch_reg', 'movewide'], 'random_poll': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'compbranch', 'ldst_pos', 'pcreladdr', 'log_shift', 'branch_reg', 'movewide', 'bitfield', 'condbranch', 'condsel', 'ldstpair_post', 'branch_imm'], 'its_read_baser': ['addsub_imm', 'log_imm', 'addsub_shift', 'ldst_pos', 'movewide', 'bitfield', 'dp_3src', 'branch_reg'], 'nonseekable_open': ['ldst_pos', 'movewide', 'log_imm', 'branch_reg'], 'oops_may_print': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'console_suspend_disable': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'memblock_reserved_size': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'jiffies_to_timeval': ['movewide', 'dp_3src', 'bitfield', 'ldstpair_off', 'branch_reg'], 'f__dec_zone_state': ['ldst_pos', 'log_shift', 'system', 'addsub_imm', 'addsub_shift', 'ldst_regoff', 'bitfield', 'condbranch', 'branch_reg', 'ldstexcl', 'compbranch', 'pcreladdr'], 'rcu_exp_batches_completed_sched': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'first_online_pgdat': ['pcreladdr', 'addsub_imm', 'branch_reg'], 'mnt_clone_write': ['ldst_pos', 'log_imm', 'testbranch', 'system', 'addsub_imm', 'addsub_shift', 'ldstexcl', 'compbranch', 'log_shift', 'branch_reg', 'movewide'], 'jiffy_sched_clock_read': ['pcreladdr', 'movewide', 'ldst_pos', 'addsub_shift', 'branch_reg'], 'cd_forget': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'el2_fiq_invalid': ['branch_imm'], 'set_smp_cross_call': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'panic_smp_self_stop': ['system', 'branch_imm'], 'of_get_next_child': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'log_shift', 'branch_imm', 'compbranch', 'ldstpair_post', 'branch_reg', 'movewide'], 'check_preempt_curr_stop': ['branch_reg'], 'class_dir_child_ns_type': ['ldst_pos', 'branch_reg'], 'bad_inode_listxattr': ['movewide', 'branch_reg'], 'fwnode_get_named_child_node': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'mount_root': ['branch_reg'], 'ptep_clear_flush': ['log_shift', 'movewide', 'ldst_pos', 'ldstexcl', 'compbranch', 'condsel', 'bitfield', 'system', 'branch_reg', 'addsub_imm', 'branch_imm'], 'device_remove_groups': ['branch_reg'], 'free_fair_sched_group': ['branch_reg'], 'update_max_interval': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_imm', 'movewide', 'dp_3src', 'ldstpair_post', 'bitfield', 'branch_reg'], 'f__section_nr': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_imm', 'bitfield', 'ldst_regoff', 'addsub_imm', 'addsub_shift', 'compbranch', 'condbranch', 'branch_reg'], 'calculate_pressure_threshold': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldst_pos', 'ldstpair_off', 'addsub_shift', 'branch_imm', 'dp_2src', 'movewide', 'ldstpair_post', 'condsel', 'branch_reg'], 'inode_init_always': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'movewide', 'compbranch', 'branch_imm', 'system', 'addsub_shift', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'rcu_segcblist_first_cb': ['ldst_pos', 'compbranch', 'branch_reg', 'movewide'], 'f__bitmap_weight': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'bitfield', 'compbranch', 'movewide', 'ldst_regoff', 'branch_imm', 'addsub_shift', 'condbranch', 'log_imm', 'dp_2src', 'ldstpair_post', 'branch_reg', 'ldst_pos'], 'SEQ_printf.constprop.7': ['addsub_imm', 'movewide', 'ldstpair_off', 'ldst_pos', 'branch_reg'], 'clk_composite_is_enabled': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'strcspn': ['ldst_pos', 'log_shift', 'compbranch', 'movewide', 'addsub_shift', 'condbranch', 'branch_imm', 'ldst_immpre', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'irq_wait_for_poll': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'system', 'ldst_regoff', 'addsub_shift', 'condbranch', 'log_shift', 'ldstexcl', 'testbranch', 'branch_imm', 'movewide', 'condsel', 'ldstpair_post', 'branch_reg'], 'f__vma_link_list': ['ldst_pos', 'compbranch', 'branch_reg', 'addsub_imm', 'branch_imm'], 'bad_inode_rmdir': ['movewide', 'branch_reg'], 'unuse_mm': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'system', 'branch_imm', 'ldst_pos', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'swiotlb_set_max_segment': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'condbranch', 'log_imm', 'branch_reg'], 'smp_setup_processor_id': ['system', 'pcreladdr', 'log_imm', 'movewide', 'log_shift', 'ldst_pos', 'branch_reg'], 'mincore_hugetlb': ['exception'], 'f__bitmap_or': ['log_shift', 'addsub_imm', 'movewide', 'bitfield', 'compbranch', 'ldst_regoff', 'addsub_shift', 'condbranch', 'branch_reg'], 'vdso_mremap': ['ldstpair_off', 'pcreladdr', 'addsub_imm', 'addsub_shift', 'condbranch', 'system', 'ldst_pos', 'movewide', 'branch_reg'], 'platform_msi_set_desc': ['ldst_pos', 'log_shift', 'branch_reg'], 'update_curr_idle': ['branch_reg'], 'f__bitmap_intersects': ['bitfield', 'compbranch', 'ldst_pos', 'log_shift', 'condbranch', 'addsub_imm', 'movewide', 'branch_imm', 'ldst_immpost', 'addsub_shift', 'log_imm', 'ldst_regoff', 'dp_2src', 'condsel', 'branch_reg'], 'clk_gpio_mux_set_parent': ['movewide', 'branch_reg'], 'generic_pipe_buf_get': ['ldst_pos', 'addsub_imm', 'log_imm', 'condsel', 'ldstexcl', 'compbranch', 'branch_reg'], 'strncpy': ['addsub_shift', 'log_shift', 'compbranch', 'ldst_pos', 'ldst_immpost', 'addsub_imm', 'condsel', 'condbranch', 'branch_reg'], 'f__check_pl': ['bitfield', 'log_imm', 'branch_reg'], 'f__kfifo_skip_r': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'arch_timer_get_kvm_info': ['pcreladdr', 'addsub_imm', 'branch_reg'], 'its_build_vmovi_cmd': ['ldst_pos', 'movewide', 'compbranch', 'bitfield', 'ldstpair_off', 'log_imm', 'log_shift', 'branch_reg'], 'aarch64_insn_extract_system_reg': ['bitfield', 'branch_reg'], 'radix_tree_iter_resume': ['ldst_pos', 'movewide', 'addsub_imm', 'ldstpair_off', 'branch_reg'], 'user_disable_single_step': ['ldstpair_pre', 'log_shift', 'movewide', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'arch_ioremap_pmd_supported': ['movewide', 'branch_reg'], 'memcmp': ['compbranch', 'log_shift', 'log_imm', 'condbranch', 'addsub_imm', 'bitfield', 'ldst_immpost', 'condsel', 'testbranch', 'movewide', 'dp_2src', 'branch_imm', 'addsub_shift', 'condcmp_reg', 'branch_reg', 'ldst_regoff', 'dp_1src'], 'f__hsiphash_aligned': ['log_imm', 'movewide', 'ldstpair_off', 'addsub_shift', 'log_shift', 'bitfield', 'condbranch', 'ldst_immpost', 'extract', 'addsub_imm', 'compbranch', 'dp_2src', 'ldst_pos', 'branch_reg'], 'f__hrtimer_init': ['addsub_imm', 'ldstpair_off', 'condcmp_imm', 'condsel', 'pcreladdr', 'movewide', 'system', 'addsub_shift', 'compbranch', 'condbranch', 'ldst_regoff', 'bitfield', 'ldst_pos', 'branch_reg'], 'rcu_expedite_gp': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'branch_reg'], 'mem_encrypt_init': ['branch_reg'], 'its_build_mapti_cmd': ['ldst_pos', 'movewide', 'ldstpair_off', 'log_imm', 'log_shift', 'ldst_regoff', 'addsub_shift', 'branch_reg'], 'capable_wrt_inode_uidgid': ['movewide', 'branch_reg'], 'copy_page': ['system', 'ldstpair_off', 'movewide', 'addsub_imm', 'ldstnapair_offs', 'condbranch', 'branch_reg'], 'arch_counter_get_cntvct': ['system', 'branch_reg'], 'invalid_page_referenced_vma': ['movewide', 'branch_reg'], 'rcu_segcblist_insert_count': ['ldstpair_off', 'ldst_pos', 'addsub_shift', 'branch_reg'], 'empty_dir_lookup': ['movewide', 'branch_reg'], 'psci_migrate_info_type': ['pcreladdr', 'ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'flush_signal_handlers': ['ldst_pos', 'addsub_imm', 'compbranch', 'condbranch', 'ldstpair_off', 'addsub_shift', 'branch_reg'], 'rcu_sync_init': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'ldst_pos', 'ldstpair_post', 'branch_reg'], 'gen_pool_avail': ['log_shift', 'movewide', 'ldst_immpre', 'addsub_shift', 'condbranch', 'ldst_pos', 'branch_reg'], 'skip_spaces': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'ldst_regoff', 'testbranch', 'ldst_immpre', 'branch_reg'], 'wait_bit_init': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'movewide', 'addsub_shift', 'log_shift', 'branch_imm', 'condbranch', 'ldstpair_post', 'branch_reg'], 'arch_send_call_function_ipi_mask': ['pcreladdr', 'ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'smp_irq_stat_cpu': ['bitfield', 'pcreladdr', 'addsub_imm', 'addsub_shift', 'movewide', 'ldst_immpost', 'condbranch', 'branch_reg'], 'f__bitmap_and': ['bitfield', 'compbranch', 'movewide', 'ldst_regoff', 'log_shift', 'addsub_imm', 'addsub_shift', 'condbranch', 'log_imm', 'dp_2src', 'condsel', 'branch_reg', 'branch_imm'], 'shmem_unuse': ['movewide', 'branch_reg'], 'f__gic_update_vlpi_properties': ['addsub_imm', 'ldst_pos', 'pcreladdr', 'bitfield', 'movewide', 'log_shift', 'branch_reg'], 'unregister_binfmt': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'pcreladdr', 'movewide', 'ldst_pos', 'ldstexcl', 'compbranch', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'iter_div_u64_rem': ['log_shift', 'movewide', 'addsub_shift', 'condbranch', 'addsub_imm', 'ldst_pos', 'branch_reg'], 'disable_pid_allocation': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'log_imm', 'ldstexcl', 'system', 'ldstpair_post', 'branch_reg'], 'fdt_bus_default_translate': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'movewide', 'addsub_shift', 'condbranch', 'ldst_regoff', 'dp_1src', 'branch_imm', 'bitfield', 'log_imm', 'ldst_unscaled', 'ldstpair_post', 'branch_reg'], 'fwnode_get_parent': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'f__invoke_psci_fn_hvc': ['addsub_imm', 'movewide', 'ldstpair_off', 'branch_imm', 'ldst_pos', 'ldstpair_post', 'branch_reg'], 'timeval_to_jiffies': ['ldstpair_off', 'movewide', 'addsub_shift', 'condbranch', 'log_imm', 'branch_reg', 'bitfield', 'dp_3src'], 'clockevents_suspend': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'addsub_shift', 'condbranch', 'branch_imm', 'compbranch', 'log_shift', 'branch_reg', 'ldstpair_post'], 'list_lru_count_one': ['ldstpair_pre', 'bitfield', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'log_shift', 'branch_imm', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'has_no_hw_prefetch': ['system', 'movewide', 'log_shift', 'addsub_shift', 'condcmp_reg', 'condsel', 'branch_reg'], 'f__siphash_aligned': ['log_imm', 'movewide', 'ldstpair_off', 'addsub_shift', 'log_shift', 'bitfield', 'condbranch', 'ldst_immpost', 'extract', 'addsub_imm', 'compbranch', 'dp_2src', 'ldst_pos', 'branch_reg'], 'sys_getegid': ['movewide', 'branch_reg'], 'overcommit_kbytes_handler': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'condcmp_imm', 'condbranch', 'pcreladdr', 'ldstpair_post', 'branch_reg'], 'clk_hw_get_name': ['ldst_pos', 'branch_reg'], 'test_taint': ['addsub_imm', 'condsel', 'pcreladdr', 'bitfield', 'ldst_regoff', 'dp_2src', 'log_imm', 'branch_reg'], 'f__pi___flush_dcache_area': ['system', 'bitfield', 'movewide', 'dp_2src', 'addsub_shift', 'addsub_imm', 'log_shift', 'condbranch', 'branch_reg'], 'single_task_running': ['pcreladdr', 'system', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'condsel', 'branch_reg'], '_mix_pool_bytes': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'ldstpair_off', 'compbranch', 'pcreladdr', 'bitfield', 'addsub_shift', 'movewide', 'log_shift', 'ldst_immpost', 'ldst_regoff', 'dp_2src', 'condsel', 'log_imm', 'condbranch', 'ldstpair_post', 'branch_reg'], 'hsiphash_3u32': ['log_shift', 'movewide', 'ldstpair_off', 'addsub_shift', 'log_imm', 'extract', 'branch_reg'], 'f__gic_populate_rdist': ['pcreladdr', 'system', 'addsub_imm', 'ldst_regoff', 'log_shift', 'ldst_pos', 'bitfield', 'log_imm', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg'], 'of_get_flat_dt_size': ['pcreladdr', 'ldst_pos', 'dp_1src', 'branch_reg'], 'cpu_psci_cpu_init': ['movewide', 'branch_reg'], 'rb_replace_node': ['ldstpair_off', 'ldst_pos', 'log_imm', 'compbranch', 'log_shift', 'addsub_shift', 'condbranch', 'branch_reg'], 'clk_factor_recalc_rate': ['ldstpair_off', 'dp_3src', 'dp_2src', 'branch_reg'], 'file_caps_disable': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'put_filesystem': ['branch_reg'], 'devm_memremap_match': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'set_curr_task_idle': ['branch_reg'], 'raw_notifier_call_chain': ['ldstpair_pre', 'movewide', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'f__iowrite32_copy': ['addsub_shift', 'condbranch', 'addsub_imm', 'ldst_immpost', 'ldst_pos', 'log_shift', 'branch_reg'], 'siphash_3u64': ['ldstpair_off', 'movewide', 'log_shift', 'addsub_shift', 'extract', 'log_imm', 'branch_reg'], 'reset_node_managed_pages': ['addsub_imm', 'addsub_shift', 'condbranch', 'ldst_pos', 'branch_reg'], 'cpudl_clear_freecpu': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'remove_wait_queue': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'movewide', 'ldst_pos', 'ldstpair_post', 'branch_reg'], 'thread_stack_cache_init': ['branch_reg'], 'round_jiffies_up': ['pcreladdr', 'system', 'addsub_imm', 'movewide', 'ldst_regoff', 'ldst_pos', 'addsub_shift', 'addsub_ext', 'bitfield', 'dp_3src', 'condsel', 'branch_reg'], 'f__do_once_start': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'ldst_pos', 'branch_imm', 'compbranch', 'movewide', 'ldstpair_post', 'branch_reg'], 'mangle_path': ['addsub_shift', 'condbranch', 'ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'movewide', 'ldst_pos', 'compbranch', 'branch_imm', 'ldst_immpost', 'bitfield', 'log_imm', 'ldstpair_post', 'branch_reg'], 'rcupdate_announce_bootup_oddness': ['branch_reg'], 'hrtimers_resume': ['branch_reg'], 'tasklet_init': ['ldstpair_off', 'ldst_pos', 'branch_reg'], 'vprintk_func': ['movewide', 'branch_reg'], 'get_user_arg_ptr': ['addsub_ext', 'system', 'log_shift', 'ldst_pos', 'addsub_imm', 'condcmp_reg', 'condsel', 'compbranch', 'movewide', 'branch_reg'], 'rcu_is_watching': ['pcreladdr', 'system', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'bitfield', 'branch_reg'], 'unhandled_signal': ['log_shift', 'ldst_pos', 'addsub_imm', 'condbranch', 'bitfield', 'movewide', 'addsub_shift', 'condsel', 'branch_reg'], 'swiotlb_dma_mapping_error': ['pcreladdr', 'ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'runs_at_el2': ['system', 'addsub_imm', 'condsel', 'branch_reg'], 'strcat': ['ldst_pos', 'log_shift', 'compbranch', 'ldst_immpre', 'movewide', 'ldst_regoff', 'addsub_imm', 'branch_reg'], 'device_links_read_unlock': ['ldstpair_pre', 'pcreladdr', 'log_shift', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'mm_compute_batch_init': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_imm', 'bitfield', 'log_imm', 'movewide', 'ldstpair_post', 'dp_2src', 'addsub_shift', 'condsel', 'branch_reg'], 'klist_add_behind': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'movewide', 'ldst_pos', 'log_imm', 'compbranch', 'branch_reg', 'branch_imm', 'ldstexcl', 'ldstpair_post'], 'set_curr_task_stop': ['ldst_pos', 'branch_reg'], 'f__sw_hweight8': ['movewide', 'log_shift', 'addsub_shift', 'log_imm', 'branch_reg'], 'statfs_by_dentry': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'ldstpair_off', 'branch_reg', 'ldstpair_post', 'movewide'], 'inode_nohighmem': ['ldst_pos', 'movewide', 'branch_reg'], 'finish_swait': ['ldstpair_pre', 'system', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'addsub_shift', 'condbranch', 'log_shift', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'alarmtimer_suspend': ['movewide', 'branch_reg'], 'arch_timer_starting_cpu': ['ldstpair_pre', 'movewide', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'system', 'addsub_shift', 'compbranch', 'ldst_regoff', 'addsub_ext', 'bitfield', 'condbranch', 'exception', 'branch_reg'], 'f__pi_strlen': ['log_imm', 'condbranch', 'ldstpair_post', 'addsub_shift', 'log_shift', 'condcmp_imm', 'compbranch', 'addsub_imm', 'dp_1src', 'branch_reg', 'bitfield', 'movewide', 'dp_2src', 'condsel', 'branch_imm'], 'rcu_dynticks_snap': ['addsub_imm', 'ldst_pos', 'ldstexcl', 'addsub_shift', 'compbranch', 'system', 'log_imm', 'branch_reg'], 'init_cpu_possible': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'files_maxfiles_init': ['pcreladdr', 'movewide', 'ldst_pos', 'addsub_imm', 'condsel', 'addsub_shift', 'bitfield', 'dp_2src', 'branch_reg'], 'clk_composite_set_rate': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'clear_inode': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'compbranch', 'ldstexcl', 'system', 'addsub_shift', 'condbranch', 'testbranch', 'movewide', 'ldstpair_post', 'branch_reg', 'exception'], 'clk_composite_enable': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'lockref_get_or_lock': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'bitfield', 'addsub_ext', 'condbranch', 'log_shift', 'ldstexcl', 'compbranch', 'addsub_shift', 'movewide', 'ldstpair_post', 'branch_reg', 'system', 'branch_imm'], 'proc_dointvec_jiffies': ['movewide', 'branch_reg'], 'noop_llseek': ['ldst_pos', 'branch_reg'], 'put_prev_task_idle': ['branch_reg'], 'f__pi___dma_map_area': ['addsub_shift', 'system', 'bitfield', 'movewide', 'dp_2src', 'addsub_imm', 'log_shift', 'condbranch', 'branch_imm', 'branch_reg'], 'read_persistent_clock': ['ldstpair_off', 'branch_reg'], 'irq_percpu_enable': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'compbranch', 'branch_reg', 'branch_imm', 'ldstpair_post'], 'sched_idle_set_state': ['branch_reg'], 'vm_commit_limit': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'compbranch', 'movewide', 'dp_3src', 'bitfield', 'branch_reg'], 'gic_check_gicv2': ['addsub_imm', 'ldst_pos', 'movewide', 'log_shift', 'condsel', 'branch_reg'], 'of_get_next_parent': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'compbranch', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'ldstpair_post', 'branch_reg', 'movewide'], 'prandom_u32': ['ldstpair_pre', 'addsub_imm', 'pcreladdr', 'system', 'addsub_shift', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'our_mnt': ['system', 'ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'rcu_dynticks_curr_cpu_in_eqs': ['pcreladdr', 'system', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'log_imm', 'bitfield', 'branch_reg'], 'devm_attr_group_remove': ['branch_reg'], 'partition_irq_mask': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'system', 'ldst_regoff', 'ldst_pos', 'condsel', 'bitfield', 'addsub_shift', 'dp_2src', 'testbranch', 'compbranch', 'branch_reg', 'ldstpair_post'], 'write_policy_show': ['ldst_pos', 'testbranch', 'movewide', 'branch_reg', 'pcreladdr', 'addsub_imm', 'ldst_unscaled'], 'idle_thread_set_boot_cpu': ['pcreladdr', 'system', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'f__request_resource': ['ldstpair_off', 'log_shift', 'addsub_shift', 'condbranch', 'ldst_pos', 'addsub_imm', 'compbranch', 'branch_reg', 'movewide', 'branch_imm'], 'f__get_cached_msi_msg': ['ldst_pos', 'branch_reg'], 'fiemap_check_flags': ['ldst_pos', 'log_imm', 'log_shift', 'condbranch', 'movewide', 'branch_reg'], 'f__check_al': ['movewide', 'branch_reg'], 'update_min_vruntime': ['ldstpair_off', 'ldst_pos', 'compbranch', 'addsub_shift', 'addsub_imm', 'condsel', 'branch_reg', 'branch_imm'], 'add_mm_counter_fast.part.6': ['bitfield', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'ldstexcl', 'compbranch', 'branch_reg'], 'el1_irq_invalid_1': ['branch_imm'], 'select_task_rq_idle': ['ldst_pos', 'branch_reg'], 'add_wait_queue': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'log_imm', 'ldst_immpost', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'init_entity_runnable_average': ['ldst_pos', 'ldstpair_off', 'bitfield', 'branch_reg'], 'rb_replace_node_cached': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'branch_imm', 'ldst_pos', 'addsub_shift', 'condbranch', 'ldstpair_post', 'branch_reg'], 'init_currently_empty_zone': ['ldst_pos', 'log_imm', 'movewide', 'addsub_imm', 'addsub_shift', 'bitfield', 'dp_3src', 'condbranch', 'branch_reg'], 'list_lru_count_node': ['ldst_pos', 'bitfield', 'addsub_shift', 'branch_reg'], 'memblock_start_of_DRAM': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'f__round_jiffies_up': ['addsub_shift', 'pcreladdr', 'movewide', 'addsub_imm', 'addsub_ext', 'ldst_pos', 'bitfield', 'dp_3src', 'condsel', 'branch_reg'], 'psci_cpu_off': ['pcreladdr', 'log_shift', 'addsub_imm', 'ldstpair_pre', 'movewide', 'ldst_pos', 'branch_reg', 'condbranch', 'ldst_regoff', 'ldstpair_post', 'branch_imm'], 'hsiphash_4u32': ['log_shift', 'movewide', 'ldstpair_off', 'addsub_shift', 'extract', 'log_imm', 'branch_reg'], 'yield_task_stop': ['exception'], 'clocks_calc_mult_shift': ['dp_3src', 'log_shift', 'movewide', 'bitfield', 'compbranch', 'addsub_imm', 'branch_imm', 'condbranch', 'dp_2src', 'addsub_shift', 'ldst_pos', 'branch_reg'], 'cap_task_setscheduler': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'rcu_batches_started_sched': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'rcu_dynticks_eqs_exit': ['pcreladdr', 'addsub_imm', 'log_shift', 'system', 'addsub_shift', 'ldst_pos', 'ldstexcl', 'compbranch', 'testbranch', 'log_imm', 'branch_reg'], 'kmem_cache_flags': ['log_shift', 'branch_reg'], 'prepare_to_swait': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'bitfield', 'branch_imm', 'system', 'ldst_immpost', 'addsub_shift', 'condbranch', 'ldstpair_post', 'branch_reg'], 'cpuhp_should_run': ['pcreladdr', 'system', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'branch_reg'], 'page_evictable': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'compbranch', 'movewide', 'testbranch', 'log_imm', 'condsel', 'bitfield', 'ldstpair_post', 'branch_reg'], 'mod_node_page_state': ['ldst_pos', 'log_shift', 'bitfield', 'addsub_imm', 'addsub_shift', 'system', 'ldst_regoff', 'movewide', 'condbranch', 'log_imm', 'ldstexcl', 'compbranch', 'addsub_ext', 'pcreladdr', 'branch_reg'], 'clear_os_lock': ['system', 'movewide', 'branch_reg'], 'sys_epoll_wait': ['movewide', 'branch_reg'], 'memzero_explicit': ['ldstpair_pre', 'log_shift', 'movewide', 'addsub_imm', 'ldst_pos', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'seq_list_next': ['ldst_pos', 'addsub_shift', 'condsel', 'addsub_imm', 'branch_reg'], 'el2_irq_invalid': ['branch_imm'], 'has_cpu_slab': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'condsel', 'branch_reg'], 'clk_composite_round_rate': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'slab_is_available': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'inode_needs_sync': ['ldst_pos', 'movewide', 'testbranch', 'log_imm', 'addsub_imm', 'condbranch', 'log_shift', 'branch_reg', 'condsel', 'branch_imm'], 'generic_delete_inode': ['movewide', 'branch_reg'], 'of_clk_hw_simple_get': ['log_shift', 'branch_reg'], 'rcu_segcblist_advance': ['ldst_pos', 'compbranch', 'addsub_shift', 'testbranch', 'ldstpair_off', 'branch_reg', 'condbranch'], 'bus_get_device_klist': ['ldst_pos', 'addsub_imm', 'branch_reg'], 'irq_domain_free_irqs_parent': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post'], 'fprop_local_init_single': ['log_shift', 'movewide', 'ldst_pos', 'branch_reg'], 'device_property_read_string_array': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'compbranch', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'sysctl_max_threads': ['ldstpair_pre', 'log_shift', 'movewide', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'branch_imm', 'condcmp_reg', 'condbranch', 'compbranch', 'dp_1src', 'addsub_shift', 'log_imm', 'condsel', 'ldstpair_post', 'branch_reg', 'bitfield'], 'klist_iter_init': ['ldstpair_off', 'branch_reg'], 'list_lru_del': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'addsub_shift', 'condbranch', 'ldstexcl', 'movewide', 'ldstpair_post', 'branch_reg'], 'gic_set_kvm_info': ['pcreladdr', 'ldst_pos', 'compbranch', 'branch_reg', 'exception'], 'get_max_files': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'arch_timer_set_next_event_virt': ['log_shift', 'system', 'log_imm', 'movewide', 'branch_reg'], 'lcm': ['addsub_imm', 'condcmp_imm', 'condbranch', 'ldstpair_pre', 'ldstpair_off', 'log_shift', 'branch_imm', 'dp_2src', 'dp_3src', 'ldstpair_post', 'branch_reg', 'movewide'], 'gic_enable_quirks': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'compbranch', 'branch_imm', 'ldst_immpre', 'addsub_shift', 'condbranch', 'branch_reg', 'ldstpair_post'], 'sg_miter_start': ['ldst_pos', 'ldstpair_off', 'branch_reg'], 'seq_hlist_start_rcu': ['ldst_pos', 'compbranch', 'branch_imm', 'condbranch', 'addsub_imm', 'branch_reg', 'movewide'], 'f__bitmap_complement': ['bitfield', 'compbranch', 'movewide', 'ldst_regoff', 'log_shift', 'addsub_imm', 'addsub_shift', 'condbranch', 'log_imm', 'branch_reg'], 'f__setparam_dl': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'condsel', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'siphash_4u64': ['ldstpair_off', 'movewide', 'log_shift', 'addsub_shift', 'extract', 'log_imm', 'branch_reg'], 'clocksource_touch_watchdog': ['branch_reg'], 'cap_ptrace_traceme': ['log_shift', 'movewide', 'ldst_pos', 'branch_reg'], '_bin2bcd': ['movewide', 'dp_3src', 'bitfield', 'addsub_shift', 'branch_reg'], 'pin_insert_group': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'compbranch', 'ldst_pos', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'f__inode_sub_bytes': ['ldst_pos', 'log_imm', 'addsub_shift', 'addsub_ext', 'condbranch', 'addsub_imm', 'bitfield', 'branch_reg'], 'mem_init_print_info': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'f__tick_broadcast_oneshot_control': ['pcreladdr', 'ldst_pos', 'compbranch', 'movewide', 'log_imm', 'condsel', 'branch_reg'], 'gic_dist_supports_lpis': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'bitfield', 'branch_reg'], 'alarmtimer_get_rtcdev': ['movewide', 'branch_reg'], 'kobject_namespace': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'branch_reg', 'ldstpair_post', 'movewide'], 'its_build_vinvall_cmd': ['movewide', 'ldst_pos', 'branch_reg'], 'f__pi___clean_dcache_area_pop': ['system', 'bitfield', 'movewide', 'dp_2src', 'addsub_shift', 'addsub_imm', 'log_shift', 'condbranch', 'branch_reg'], 'its_build_vmovp_cmd': ['ldst_pos', 'movewide', 'ldstpair_off', 'log_imm', 'log_shift', 'addsub_shift', 'branch_reg'], 'always_delete_dentry': ['movewide', 'branch_reg'], 'f__check_vs': ['bitfield', 'branch_reg'], 'tsk_fork_get_node': ['movewide', 'branch_reg'], 'of_clk_src_onecell_get': ['ldst_pos', 'addsub_shift', 'condbranch', 'ldst_regoff', 'branch_reg', 'movewide'], 'srcu_bootup_announce': ['movewide', 'branch_reg'], 'f__current_kernel_time': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'dp_2src', 'branch_reg'], 'swap_ex': ['ldstpair_off', 'addsub_shift', 'ldst_pos', 'branch_reg'], 'rcu_eqs_enter_common.isra.36': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'system', 'addsub_shift', 'condbranch', 'movewide', 'ldst_regoff', 'ldstexcl', 'compbranch', 'log_imm', 'branch_reg'], 'klist_add_tail': ['ldstpair_pre', 'movewide', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'log_shift', 'compbranch', 'branch_reg', 'branch_imm', 'ldstexcl', 'ldstpair_post'], 'page_address_in_vma': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'log_imm', 'condsel', 'testbranch', 'compbranch', 'addsub_shift', 'condbranch', 'movewide', 'ldstpair_post', 'branch_reg', 'branch_imm', 'condcmp_reg'], 'f__power_supply_find_supply_from_node': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'current_is_workqueue_rescuer': ['system', 'movewide', 'ldst_pos', 'log_shift', 'condbranch', 'testbranch', 'branch_reg', 'ldstpair_pre', 'addsub_imm', 'branch_imm', 'compbranch', 'ldstpair_post'], 'rcu_segcblist_enqueue': ['log_imm', 'ldst_pos', 'addsub_imm', 'condbranch', 'system', 'branch_reg'], 'clk_nodrv_set_rate': ['movewide', 'branch_reg'], 'clk_composite_get_parent': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'psci_sys_reset': ['pcreladdr', 'ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'pm_generic_runtime_suspend': ['movewide', 'branch_reg'], 'wb_io_lists_populated.part.4': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'movewide', 'branch_imm', 'ldstexcl', 'addsub_shift', 'compbranch', 'ldstpair_post', 'branch_reg'], 'pipe_to_null': ['ldst_pos', 'branch_reg'], 'empty_dir_setattr': ['movewide', 'branch_reg'], 'list_lru_isolate_move': ['ldstpair_off', 'ldst_pos', 'addsub_imm', 'branch_reg'], 'aarch64_get_insn_class': ['pcreladdr', 'bitfield', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'f__pick_first_entity': ['ldst_pos', 'compbranch', 'addsub_imm', 'branch_reg', 'movewide'], 'user_rewind_single_step': ['ldst_pos', 'testbranch', 'log_imm', 'branch_reg'], 'set_task_stack_end_magic': ['ldst_pos', 'movewide', 'branch_reg'], 'rcu_batches_started': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'kmem_cache_size': ['ldst_pos', 'branch_reg'], 'readonly': ['ldst_pos', 'compbranch', 'pcreladdr', 'movewide', 'log_shift', 'branch_reg'], '_bcd2bin': ['bitfield', 'log_imm', 'addsub_shift', 'branch_reg'], 'memblock_is_reserved': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'bitfield', 'dp_3src', 'ldst_regoff', 'condbranch', 'branch_imm', 'log_shift', 'condsel', 'branch_reg'], 'bad_inode_lookup': ['movewide', 'branch_reg'], 'clock_t_to_jiffies': ['log_imm', 'movewide', 'addsub_shift', 'condbranch', 'branch_reg', 'bitfield', 'dp_3src'], 'msi_domain_activate': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'compbranch', 'branch_reg', 'movewide', 'ldstpair_post', 'exception'], 'init_zero_pfn': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'bitfield', 'compbranch', 'ldst_regoff', 'log_imm', 'branch_reg'], 'task_fpsimd_load': ['ldstpair_pre', 'system', 'addsub_imm', 'ldst_pos', 'log_imm', 'condbranch', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'add_page_wait_queue': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'movewide', 'pcreladdr', 'dp_3src', 'bitfield', 'addsub_shift', 'branch_imm', 'ldst_pos', 'ldstpair_post', 'branch_reg'], 'f__task_pid_nr_ns': ['compbranch', 'ldst_pos', 'log_shift', 'addsub_shift', 'bitfield', 'addsub_imm', 'movewide', 'condbranch', 'branch_reg', 'condsel', 'system', 'branch_imm'], 'nsecs_to_jiffies': ['movewide', 'dp_3src', 'bitfield', 'branch_reg'], 'get_pipe_info': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'addsub_shift', 'condbranch', 'branch_reg', 'movewide'], 'null_lseek': ['ldst_pos', 'movewide', 'branch_reg'], 'get_iowait_load': ['pcreladdr', 'system', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'bitfield', 'branch_reg'], 'cpu_enable_cache_maint_trap': ['system', 'log_imm', 'movewide', 'branch_reg'], 'irqpoll_setup': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'current_kernel_time64': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'testbranch', 'system', 'addsub_shift', 'condbranch', 'dp_2src', 'branch_reg', 'branch_imm'], 'of_bus_default_get_flags': ['movewide', 'branch_reg'], 'its_build_clear_cmd': ['ldst_pos', 'log_imm', 'ldst_regoff', 'addsub_shift', 'bitfield', 'log_shift', 'branch_reg'], 'device_property_present': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'compbranch', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'vmemmap_populate_print_last': ['branch_reg'], 'its_init_v4': ['compbranch', 'pcreladdr', 'movewide', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_reg', 'branch_imm'], 'sync_mm_rss': ['addsub_imm', 'movewide', 'system', 'bitfield', 'addsub_shift', 'ldst_pos', 'compbranch', 'ldstexcl', 'condbranch', 'branch_reg'], 'devm_resource_match': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'plist_add': ['ldst_pos', 'addsub_imm', 'addsub_shift', 'condbranch', 'movewide', 'log_shift', 'branch_imm', 'compbranch', 'ldstpair_off', 'branch_reg'], 'clear_nlink': ['ldst_pos', 'compbranch', 'addsub_imm', 'ldstexcl', 'branch_reg'], 'no_action': ['movewide', 'branch_reg'], 'aarch32_insn_extract_reg_num': ['movewide', 'dp_2src', 'log_shift', 'branch_reg'], 'fsstack_copy_attr_all': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'ldstpair_off', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'rcu_segcblist_insert_pend_cbs': ['ldst_pos', 'compbranch', 'ldstpair_off', 'branch_reg'], 'clocksource_default_clock': ['pcreladdr', 'addsub_imm', 'branch_reg'], 'pcpu_dump_alloc_info.isra.7': ['ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'log_shift', 'dp_2src', 'compbranch', 'pcreladdr', 'branch_imm', 'ldst_unscaled', 'addsub_shift', 'condbranch', 'ldst_immpost', 'dp_3src', 'exception', 'ldstpair_post', 'branch_reg'], 'make_empty_dir_inode': ['ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'pcreladdr', 'log_imm', 'ldstpair_off', 'ldstpair_post', 'branch_reg'], 'arch_setup_pdev_archdata': ['branch_reg'], 'gic_eoimode1_eoi_irq': ['ldst_pos', 'testbranch', 'addsub_imm', 'branch_reg'], 'f_getown': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'ldstexcl', 'compbranch', 'log_imm', 'condbranch', 'branch_imm', 'condsel', 'ldstpair_post', 'branch_reg'], 'quiet_kernel': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'anon_vma_ctor': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'ldstpair_off', 'ldstpair_post', 'branch_reg'], 'sched_avg_update': ['ldst_pos', 'movewide', 'addsub_shift', 'condbranch', 'bitfield', 'branch_reg'], 'rcu_cpu_starting': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'addsub_shift', 'condbranch', 'log_shift', 'ldst_regoff', 'branch_imm', 'ldstexcl', 'system', 'ldstpair_post', 'branch_reg'], 'vfs_get_link': ['ldst_pos', 'log_imm', 'addsub_imm', 'condbranch', 'movewide', 'branch_reg', 'ldstpair_pre', 'log_shift', 'ldstpair_post'], 'arch_task_cache_init': ['branch_reg'], 'is_vmalloc_or_module_addr': ['movewide', 'log_imm', 'addsub_shift', 'condsel', 'branch_reg'], 'devices_kset_move_last': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'compbranch', 'log_shift', 'branch_imm', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'arch_timer_shutdown_phys_mem': ['ldst_unscaled', 'addsub_imm', 'ldst_pos', 'log_imm', 'movewide', 'branch_reg'], 'of_clk_src_simple_get': ['log_shift', 'branch_reg'], 'bad_inode_readlink': ['movewide', 'branch_reg'], 'set_security_override': ['movewide', 'branch_reg'], 'setup_userns_sysctls': ['movewide', 'branch_reg'], 'pcpu_next_md_free_region': ['ldst_pos', 'movewide', 'bitfield', 'log_imm', 'addsub_shift', 'dp_3src', 'condbranch', 'addsub_imm', 'compbranch', 'branch_reg', 'log_shift', 'branch_imm'], 'fixup_red_left': ['log_shift', 'branch_reg'], 'early_ioremap_setup': ['pcreladdr', 'movewide', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'branch_reg'], 'pipe_poll': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'compbranch', 'condcmp_imm', 'condbranch', 'branch_reg', 'movewide', 'testbranch', 'condsel', 'addsub_shift', 'log_imm', 'ldstpair_post', 'branch_imm'], 'ns_to_timeval': ['compbranch', 'movewide', 'branch_reg', 'bitfield', 'dp_3src', 'addsub_shift', 'log_shift', 'testbranch', 'addsub_imm', 'branch_imm'], 'bad_inode_symlink': ['movewide', 'branch_reg'], 'its_build_int_cmd': ['ldst_pos', 'log_imm', 'ldst_regoff', 'addsub_shift', 'bitfield', 'log_shift', 'branch_reg'], 'arch_release_task_struct': ['branch_reg'], 'rcutorture_get_gp_data': ['addsub_imm', 'condbranch', 'pcreladdr', 'ldst_regoff', 'compbranch', 'ldst_pos', 'bitfield', 'branch_reg'], 'single_stop': ['branch_reg'], 'dev_attr_store': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'device_get_next_child_node': ['ldst_pos', 'compbranch', 'addsub_imm', 'ldstpair_pre', 'branch_reg', 'ldstpair_post', 'movewide'], 'shmem_lock': ['movewide', 'branch_reg'], 'f__arm_smccc_hvc': ['exception', 'ldst_pos', 'ldstpair_off', 'compbranch', 'addsub_imm', 'condbranch', 'branch_reg'], 'lcm_not_zero': ['addsub_imm', 'condcmp_imm', 'condbranch', 'ldstpair_pre', 'ldstpair_off', 'log_shift', 'branch_imm', 'dp_2src', 'dp_3src', 'condsel', 'ldstpair_post', 'branch_reg'], 'read_null': ['movewide', 'branch_reg'], 'request_resource_conflict': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'pcreladdr', 'movewide', 'ldst_pos', 'ldstexcl', 'compbranch', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'noirqdebug_setup': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'aarch32_insn_mcr_extract_opc2': ['bitfield', 'branch_reg'], 'hsiphash_2u32': ['log_shift', 'movewide', 'ldstpair_off', 'addsub_shift', 'extract', 'log_imm', 'branch_reg'], 'set_binfmt': ['system', 'ldst_pos', 'branch_reg'], 'register_break_hook': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'platform_msi_write_msg': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_reg', 'ldstpair_post'], 'dump_kernel_offset': ['movewide', 'branch_reg'], 'cpu_idle_nopoll_setup': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'aarch64_insn_gen_nop': ['movewide', 'branch_reg'], 'percpu_counter_cpu_dead': ['movewide', 'branch_reg'], 'mask_irq.part.2': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'branch_reg', 'log_imm', 'ldstpair_post'], 'set_reset_devices': ['pcreladdr', 'movewide', 'log_shift', 'ldst_pos', 'branch_reg'], 'f__invoke_psci_fn_smc': ['addsub_imm', 'movewide', 'ldstpair_off', 'branch_imm', 'ldst_pos', 'ldstpair_post', 'branch_reg'], 'add_wait_queue_exclusive': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'log_imm', 'ldst_immpost', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'radix_tree_node_ctor': ['addsub_imm', 'ldstpair_off', 'ldst_pos', 'branch_reg'], 'lock_hrtimer_base.isra.1': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'ldst_pos', 'addsub_shift', 'condbranch', 'branch_imm', 'ldstpair_post', 'branch_reg', 'system'], 'bad_file_open': ['movewide', 'branch_reg'], 'fget': ['ldstpair_pre', 'movewide', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'rb_first_postorder': ['ldst_pos', 'compbranch', 'log_shift', 'branch_reg', 'movewide'], 'overcommit_ratio_handler': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'condcmp_imm', 'condbranch', 'pcreladdr', 'ldstpair_post', 'branch_reg'], 'f__kfifo_max_r': ['bitfield', 'movewide', 'dp_2src', 'addsub_imm', 'addsub_shift', 'condsel', 'branch_reg'], 'msi_domain_ops_get_hwirq': ['ldst_pos', 'branch_reg'], 'aarch64_insn_gen_load_store_pair': ['addsub_imm', 'condbranch', 'movewide', 'branch_reg', 'pcreladdr', 'ldst_regoff', 'addsub_ext'], 'abort': ['exception'], 'strncat': ['compbranch', 'ldst_pos', 'log_shift', 'ldst_immpre', 'addsub_shift', 'branch_imm', 'condbranch', 'ldst_immpost', 'branch_reg'], 'swiotlb_max_segment': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'ramfs_mmu_get_unmapped_area': ['ldstpair_pre', 'system', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'f__pmd_error': ['branch_reg'], 'proc_nr_files': ['movewide', 'branch_reg'], 'pud_set_huge': ['log_imm', 'condbranch', 'log_shift', 'ldst_pos', 'system', 'movewide', 'branch_reg', 'exception'], 'fold_diff': ['pcreladdr', 'log_shift', 'addsub_imm', 'movewide', 'ldst_pos', 'bitfield', 'compbranch', 'ldstexcl', 'addsub_shift', 'condbranch', 'branch_reg'], 'do_fpsimd_acc': ['branch_reg'], 'task_fork_dl': ['branch_reg'], 'f__check_cs': ['bitfield', 'branch_reg'], 'queued_read_lock_slowpath': ['system', 'ldst_pos', 'log_imm', 'condbranch', 'ldstexcl', 'addsub_imm', 'compbranch', 'log_shift', 'bitfield', 'branch_reg'], 'show_pte': ['log_imm', 'addsub_shift', 'condbranch', 'system', 'pcreladdr', 'ldst_pos', 'addsub_imm', 'branch_reg', 'movewide', 'bitfield', 'ldst_regoff', 'compbranch', 'testbranch'], 'device_set_of_node_from_dev': ['ldst_pos', 'log_imm', 'branch_reg'], 'f__check_cc': ['bitfield', 'log_imm', 'branch_reg'], 'strcasecmp': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_regoff', 'testbranch', 'bitfield', 'addsub_shift', 'condcmp_imm', 'condbranch', 'branch_reg'], 'f__sw_hweight64': ['bitfield', 'log_imm', 'addsub_shift', 'branch_reg'], 'bad_inode_get_link': ['movewide', 'branch_reg'], 'pick_next_pushable_dl_task': ['ldst_pos', 'compbranch', 'addsub_imm', 'addsub_shift', 'condbranch', 'testbranch', 'exception', 'log_shift', 'branch_reg', 'movewide'], 'to_mnt_ns': ['addsub_imm', 'branch_reg'], 'account_idle_ticks': ['movewide', 'dp_3src', 'compbranch', 'pcreladdr', 'system', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'condbranch', 'branch_reg'], 'el2_sync_invalid': ['branch_imm'], 'irq_forced_secondary_handler': ['movewide', 'branch_reg'], 'f__remove_inode_hash': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'compbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'jiffies_64_to_clock_t': ['movewide', 'dp_3src', 'bitfield', 'branch_reg'], 'seq_hlist_start': ['ldst_pos', 'compbranch', 'branch_imm', 'condbranch', 'addsub_imm', 'branch_reg', 'movewide'], 'mntns_get': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'compbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg', 'movewide'], 'clk_gpio_mux_get_parent': ['movewide', 'branch_reg'], 'arch_match_cpu_phys_id': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'condsel', 'branch_reg'], 'inode_set_flags': ['log_shift', 'addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'system', 'addsub_shift', 'condbranch', 'branch_reg'], 'vma_is_stack_for_current': ['system', 'ldst_pos', 'movewide', 'addsub_shift', 'log_imm', 'addsub_imm', 'condbranch', 'condsel', 'branch_reg'], 'page_mapcount_is_zero': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'testbranch', 'ldstpair_post', 'condsel', 'branch_reg', 'branch_imm'], 'of_bus_isa_get_flags': ['ldst_pos', 'movewide', 'dp_1src', 'log_imm', 'condsel', 'branch_reg'], 'f__arm_smccc_smc': ['exception', 'ldst_pos', 'ldstpair_off', 'compbranch', 'addsub_imm', 'condbranch', 'branch_reg'], 'devm_attr_group_match': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'generic_read_dir': ['movewide', 'branch_reg'], 'lruvec_init': ['log_shift', 'ldstpair_off', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'condbranch', 'branch_reg'], 'ns_get_owner': ['movewide', 'branch_reg'], 'user_enable_single_step': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'movewide', 'branch_imm', 'compbranch', 'log_imm', 'ldstpair_post', 'branch_reg'], 'cpu_stop_should_run': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_regoff', 'addsub_shift', 'branch_imm', 'ldst_immpre', 'condsel', 'ldstpair_post', 'branch_reg'], 'f__check_mi': ['bitfield', 'branch_reg'], 'f__dummy_free': ['branch_reg'], 'init_cpu_online': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'power_supply_set_battery_charged': ['ldst_pos', 'testbranch', 'addsub_imm', 'condbranch', 'compbranch', 'ldstpair_pre', 'branch_reg', 'movewide', 'ldstpair_post'], 'get_filesystem': ['branch_reg'], 'rhashtable_walk_stop': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'compbranch', 'log_shift', 'branch_imm', 'addsub_shift', 'condbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg', 'ldst_immpre'], 'memset64': ['movewide', 'compbranch', 'ldst_regoff', 'addsub_imm', 'addsub_shift', 'condbranch', 'branch_reg'], 'percpu_enable_async': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'open_check_o_direct': ['ldst_pos', 'testbranch', 'compbranch', 'movewide', 'addsub_imm', 'condsel', 'branch_reg'], 'f__hyp_reset_vectors': ['movewide', 'exception', 'branch_reg'], 'rcutorture_record_test_transition': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'ldstpair_off', 'branch_reg'], 'clk_composite_disable': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'devm_attr_groups_remove': ['branch_reg'], 'el1_fiq_invalid_1': ['branch_imm'], 'get_avenrun': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'dp_2src', 'branch_reg'], 'hrtimer_forward': ['ldst_pos', 'log_shift', 'addsub_shift', 'condbranch', 'testbranch', 'movewide', 'addsub_imm', 'condcmp_reg', 'condsel', 'ldstpair_off', 'branch_reg', 'branch_imm', 'dp_2src', 'dp_3src'], 'ns_prune_dentry': ['ldst_pos', 'compbranch', 'branch_reg'], 'siphash_3u32': ['log_shift', 'movewide', 'ldstpair_off', 'addsub_shift', 'extract', 'log_imm', 'branch_reg'], 'early_memremap_pgprot_adjust': ['log_shift', 'branch_reg'], 'attribute_container_add_attrs': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'ldst_unscaled', 'compbranch', 'log_shift', 'movewide', 'branch_imm', 'ldst_regoff', 'ldstpair_post', 'branch_reg', 'exception'], 'msi_domain_ops_check': ['movewide', 'branch_reg'], 'arch_timer_shutdown_phys': ['system', 'log_imm', 'movewide', 'branch_reg'], 'next_signal': ['ldst_pos', 'log_shift', 'condbranch', 'movewide', 'condsel', 'dp_1src', 'addsub_imm', 'branch_reg'], 'update_cpu_capabilities': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'pcreladdr', 'movewide', 'branch_reg', 'log_imm', 'condbranch', 'dp_2src', 'ldstpair_post'], 'arch_post_acpi_subsys_init': ['branch_reg'], 'memblock_get_current_limit': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'initcall_blacklist': ['movewide', 'branch_reg'], 'psci_migrate': ['pcreladdr', 'log_shift', 'addsub_imm', 'ldstpair_pre', 'movewide', 'ldst_pos', 'branch_reg', 'condbranch', 'ldst_regoff', 'ldstpair_post', 'branch_imm'], 'siphash_1u32': ['ldstpair_off', 'log_shift', 'movewide', 'log_imm', 'addsub_shift', 'extract', 'branch_reg'], 'klist_add_before': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'movewide', 'ldst_pos', 'log_imm', 'compbranch', 'branch_reg', 'branch_imm', 'ldstexcl', 'ldstpair_post'], 'list_lru_isolate': ['ldstpair_off', 'ldst_pos', 'addsub_imm', 'branch_reg'], 'debug_locks_off': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'system', 'branch_reg'], 'wq_worker_sleeping': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldst_pos', 'movewide', 'log_shift', 'condbranch', 'pcreladdr', 'system', 'ldst_regoff', 'addsub_shift', 'ldstexcl', 'compbranch', 'ldst_immpre', 'ldstpair_post', 'branch_reg'], 'find_suitable_fallback': ['log_shift', 'ldst_pos', 'bitfield', 'compbranch', 'pcreladdr', 'addsub_imm', 'ldst_regoff', 'condbranch', 'movewide', 'log_imm', 'addsub_ext', 'addsub_shift', 'branch_imm', 'ldst_immpost', 'condcmp_imm', 'branch_reg'], 'sg_nents': ['movewide', 'compbranch', 'ldst_pos', 'addsub_imm', 'testbranch', 'log_shift', 'branch_reg', 'log_imm', 'condsel', 'branch_imm'], 'f__bitmap_xor': ['log_shift', 'addsub_imm', 'movewide', 'bitfield', 'compbranch', 'ldst_regoff', 'addsub_shift', 'condbranch', 'branch_reg'], 'timecounter_init': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_reg', 'movewide', 'dp_2src', 'ldstpair_post'], 'debug_kernel': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'irq_percpu_disable': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'compbranch', 'branch_reg', 'branch_imm', 'ldstpair_post'], 'el1_sync_1': ['addsub_imm', 'condbranch', 'system', 'branch_imm', 'log_shift', 'branch_reg', 'loadlit'], 'sys_restart_syscall': ['ldstpair_pre', 'system', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'aarch64_insn_is_nop.part.1': ['log_imm', 'addsub_imm', 'condbranch', 'movewide', 'branch_reg'], 'jiffies_to_clock_t': ['movewide', 'dp_3src', 'bitfield', 'branch_reg'], 'fwnode_property_read_u64_array': ['ldstpair_pre', 'log_shift', 'movewide', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'file_check_and_advance_wb_err': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'compbranch', 'movewide', 'ldstpair_post', 'branch_reg', 'ldstexcl'], 'build_zonelists': ['ldst_pos', 'log_imm', 'addsub_imm', 'movewide', 'bitfield', 'log_shift', 'addsub_shift', 'compbranch', 'ldst_regoff', 'dp_3src', 'addsub_ext', 'condbranch', 'pcreladdr', 'branch_reg'], 'cpu_stop_park': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'ldst_pos', 'branch_reg'], 'irq_default_primary_handler': ['movewide', 'branch_reg'], 'decay_load': ['addsub_imm', 'condbranch', 'log_shift', 'pcreladdr', 'ldst_regoff', 'dp_3src', 'extract', 'branch_reg', 'movewide', 'bitfield', 'log_imm', 'dp_2src', 'branch_imm'], 'ip4_addr_string_sa': ['ldstpair_pre', 'movewide', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_immpost', 'ldst_pos', 'ldst_immpre', 'ldst_regoff', 'log_imm', 'condbranch', 'addsub_ext', 'branch_reg'], 'sys_arm64_personality': ['log_imm', 'ldstpair_pre', 'addsub_imm', 'condbranch', 'branch_imm', 'ldstpair_post', 'branch_reg', 'pcreladdr', 'ldst_pos', 'condsel', 'compbranch', 'movewide', 'bitfield'], 'msi_domain_ops_prepare': ['movewide', 'ldstpair_off', 'branch_reg'], 'psci_cpu_suspend': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'ldst_pos', 'movewide', 'branch_reg', 'condbranch', 'ldst_regoff', 'ldstpair_post', 'branch_imm'], 'rcu_unexpedite_gp': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'branch_reg'], 'fwnode_property_read_u16_array': ['ldstpair_pre', 'log_shift', 'movewide', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'cpu_device_release': ['branch_reg'], 'err_broadcast': ['branch_reg'], 'strpbrk': ['ldst_pos', 'compbranch', 'addsub_shift', 'condbranch', 'log_shift', 'branch_imm', 'ldst_immpre', 'movewide', 'branch_reg'], 'arch_timer_handler_phys_mem': ['ldst_unscaled', 'addsub_imm', 'ldst_pos', 'testbranch', 'movewide', 'branch_reg', 'ldstpair_pre', 'log_shift', 'log_imm', 'ldstpair_post'], 'fpsimd_load_state': ['ldstpair_off', 'ldstpair_pre', 'ldst_pos', 'system', 'addsub_shift', 'condbranch', 'branch_reg'], 'f__init_swait_queue_head': ['addsub_imm', 'ldst_pos', 'branch_reg'], 'special_mapping_name': ['ldst_pos', 'branch_reg'], 'f__bitmap_set': ['log_imm', 'bitfield', 'addsub_shift', 'movewide', 'addsub_imm', 'dp_2src', 'condbranch', 'ldst_pos', 'log_shift', 'ldst_immpost', 'compbranch', 'branch_reg', 'branch_imm'], 'proc_dointvec': ['movewide', 'branch_reg'], 'sg_miter_get_next_page': ['ldst_pos', 'compbranch', 'addsub_imm', 'ldstpair_pre', 'log_shift', 'branch_imm', 'bitfield', 'movewide', 'addsub_shift', 'ldstpair_off', 'condsel', 'ldstpair_post', 'branch_reg', 'addsub_ext'], 'clk_fixed_rate_recalc_accuracy': ['ldst_pos', 'branch_reg'], 'gic_poke_irq.isra.1': ['ldstpair_pre', 'addsub_imm', 'movewide', 'dp_2src', 'condbranch', 'pcreladdr', 'bitfield', 'ldst_pos', 'addsub_ext', 'addsub_shift', 'branch_reg', 'ldstpair_post', 'system', 'ldst_regoff'], 'ns_test_super': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'ktime_add_safe': ['addsub_shift', 'movewide', 'addsub_imm', 'condcmp_reg', 'condsel', 'branch_reg'], 'jiffies64_to_nsecs': ['movewide', 'dp_3src', 'branch_reg'], 'jiffies_read': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'unmask_irq': ['ldst_pos', 'testbranch', 'ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'f__check_ls': ['log_imm', 'log_shift', 'condsel', 'branch_reg'], 'f__check_lt': ['log_shift', 'bitfield', 'branch_reg'], 'calc_global_load_tick': ['pcreladdr', 'ldst_pos', 'addsub_shift', 'testbranch', 'condbranch', 'addsub_imm', 'ldstexcl', 'compbranch', 'branch_reg'], 'f__check_le': ['log_shift', 'bitfield', 'branch_reg'], 'errseq_check_and_advance': ['ldst_pos', 'addsub_shift', 'condbranch', 'log_imm', 'log_shift', 'ldstexcl', 'compbranch', 'system', 'branch_reg', 'movewide'], 'rcu_segcblist_extract_count': ['ldstpair_off', 'ldst_pos', 'addsub_shift', 'branch_reg'], 'task_rq_lock': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'ldst_regoff', 'addsub_shift', 'condbranch', 'ldstpair_post', 'branch_reg', 'ldstexcl', 'system'], 'proc_dopipe_max_size': ['movewide', 'branch_reg'], 'pmd_clear_huge': ['ldst_pos', 'log_imm', 'addsub_imm', 'condbranch', 'movewide', 'branch_reg', 'system', 'log_shift'], 'sys_geteuid': ['movewide', 'branch_reg'], 'is_console_locked': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'read_iter_null': ['movewide', 'branch_reg'], 'may_expand_vm': ['system', 'ldst_pos', 'addsub_shift', 'condbranch', 'movewide', 'log_shift', 'addsub_imm', 'branch_reg', 'compbranch', 'pcreladdr'], 'dequeue_task_stop': ['ldst_pos', 'addsub_imm', 'branch_reg'], 'f__kfifo_dma_in_finish_r': ['ldst_pos', 'movewide', 'bitfield', 'dp_2src', 'addsub_imm', 'log_shift', 'addsub_shift', 'condsel', 'ldst_regoff', 'condbranch', 'branch_reg'], 'vm_area_add_early': ['pcreladdr', 'ldst_pos', 'compbranch', 'addsub_imm', 'branch_imm', 'addsub_shift', 'condbranch', 'log_shift', 'exception', 'branch_reg'], 'rcu_segcblist_insert_done_cbs': ['ldst_pos', 'compbranch', 'log_shift', 'addsub_imm', 'ldst_immpost', 'addsub_shift', 'condbranch', 'ldstpair_off', 'branch_reg'], 'sb_clear_inode_writeback': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'addsub_shift', 'condbranch', 'log_shift', 'branch_imm', 'ldstpair_post', 'branch_reg'], '_raw_spin_lock_bh': ['system', 'ldst_pos', 'addsub_imm', 'ldstexcl', 'compbranch', 'log_shift', 'branch_reg'], 'pm_qos_request_active': ['ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'kthread_should_stop': ['system', 'ldst_pos', 'bitfield', 'branch_reg'], 'devm_clk_provider_match': ['compbranch', 'ldst_pos', 'addsub_shift', 'condsel', 'branch_reg', 'movewide'], 'add_random_ready_callback': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'condbranch', 'movewide', 'ldstpair_post', 'branch_reg', 'log_shift', 'branch_imm'], 'devres_add': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'ldstpair_off', 'log_shift', 'branch_imm', 'ldst_unscaled', 'addsub_shift', 'condbranch', 'ldstpair_post', 'branch_reg', 'exception'], 'f__clk_get_name': ['compbranch', 'ldst_pos', 'branch_reg', 'movewide'], 'rcu_rnp_online_cpus': ['ldst_pos', 'branch_reg'], 'aarch32_insn_mcr_extract_crm': ['log_imm', 'branch_reg'], 'change_page_range': ['ldstpair_off', 'movewide', 'ldst_pos', 'log_shift', 'addsub_shift', 'condbranch', 'system', 'branch_reg'], 'f__dummy_dma_supported': ['movewide', 'branch_reg'], 'generic_pipe_buf_confirm': ['movewide', 'branch_reg'], 'read_boot_clock64': ['ldstpair_off', 'branch_reg'], 'clear_bit': ['log_imm', 'log_shift', 'movewide', 'addsub_shift', 'ldst_pos', 'dp_2src', 'ldstexcl', 'compbranch', 'branch_reg'], 'cpu_coregroup_mask': ['pcreladdr', 'bitfield', 'addsub_imm', 'addsub_shift', 'branch_reg'], 'clocksource_resume': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_immpre', 'addsub_shift', 'condbranch', 'ldst_pos', 'log_shift', 'compbranch', 'branch_reg', 'ldstpair_post'], 'update_clock_read_data': ['pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'system', 'branch_reg'], 'get_state_synchronize_rcu': ['system', 'pcreladdr', 'addsub_imm', 'ldstexcl', 'branch_reg'], 'f__legitimize_mnt': ['system', 'pcreladdr', 'ldst_pos', 'addsub_shift', 'condbranch', 'compbranch', 'addsub_imm', 'ldstexcl', 'movewide', 'branch_reg', 'testbranch'], 'split_page': ['movewide', 'dp_2src', 'addsub_shift', 'condbranch', 'addsub_imm', 'ldst_pos', 'branch_reg'], 'gic_dist_config': ['addsub_imm', 'condbranch', 'movewide', 'bitfield', 'addsub_shift', 'ldst_pos', 'log_shift', 'compbranch', 'ldstpair_pre', 'branch_reg', 'ldstpair_post'], 'proc_doulongvec_minmax': ['movewide', 'branch_reg'], 'tk_set_wall_to_mono': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'addsub_shift', 'branch_imm', 'movewide', 'condbranch', 'dp_3src', 'ldstpair_post', 'branch_reg'], 'c_start': ['ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'idle_task': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'ldst_pos', 'branch_reg'], 'queued_write_lock_slowpath': ['addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'log_shift', 'system', 'movewide', 'condbranch', 'bitfield', 'log_imm', 'branch_reg'], 'get_cpu_cacheinfo': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'branch_reg'], 'aarch32_insn_is_wide': ['movewide', 'addsub_shift', 'condsel', 'branch_reg'], 'setup_forced_irqthreads': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'kset_init': ['addsub_imm', 'condbranch', 'movewide', 'ldst_pos', 'log_imm', 'log_shift', 'branch_reg'], 'sys_umask': ['system', 'ldst_pos', 'log_imm', 'addsub_imm', 'ldstexcl', 'compbranch', 'bitfield', 'branch_reg'], 'enqueue_top_rt_rq': ['ldst_pos', 'addsub_imm', 'compbranch', 'addsub_shift', 'condcmp_imm', 'condbranch', 'movewide', 'branch_reg'], 'rcu_end_inkernel_boot': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'movewide', 'branch_reg'], 'gic_irq_domain_unmap': ['branch_reg'], 'd_set_d_op': ['ldst_pos', 'compbranch', 'log_imm', 'branch_reg'], 'simple_align_resource': ['ldst_pos', 'branch_reg'], 'cpu_die_early': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'system', 'ldst_regoff', 'branch_imm', 'movewide', 'ldst_pos'], 'ntp_notify_cmos_timer': ['branch_reg'], 'rhashtable_walk_start': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'compbranch', 'movewide', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'set_dumpable.part.7': ['bitfield', 'addsub_imm', 'ldst_pos', 'log_imm', 'log_shift', 'ldstexcl', 'compbranch', 'system', 'addsub_shift', 'condbranch', 'branch_reg'], 'f__pgd_error': ['branch_reg'], 'set_sched_topology': ['pcreladdr', 'ldst_pos', 'compbranch', 'branch_reg'], 'f__pi___dma_unmap_area': ['addsub_shift', 'system', 'bitfield', 'movewide', 'dp_2src', 'addsub_imm', 'log_shift', 'condbranch', 'branch_imm', 'branch_reg'], 'dt_mem_next_cell': ['ldst_pos', 'log_shift', 'movewide', 'addsub_ext', 'addsub_shift', 'condbranch', 'ldst_regoff', 'addsub_imm', 'dp_1src', 'branch_imm', 'branch_reg'], 'rhashtable_jhash2': ['movewide', 'addsub_imm', 'log_shift', 'addsub_shift', 'condbranch', 'ldstpair_off', 'ldst_immpost', 'branch_reg', 'ldst_pos', 'extract'], 'partition_translate_id': ['ldst_pos', 'addsub_imm', 'condbranch', 'addsub_shift', 'movewide', 'branch_imm', 'ldst_unscaled', 'log_shift', 'branch_reg', 'condsel'], 'clk_hw_is_prepared': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'condsel', 'ldstpair_post'], 'sha_transform': ['ldstpair_pre', 'movewide', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'dp_1src', 'log_shift', 'extract', 'addsub_shift'], 'cap_vm_enough_memory': ['ldstpair_pre', 'pcreladdr', 'system', 'addsub_imm', 'ldst_pos', 'movewide', 'branch_imm', 'condsel', 'ldstpair_post', 'branch_reg'], 'task_tick_idle': ['branch_reg'], 'klist_init': ['addsub_imm', 'ldst_pos', 'ldstpair_off', 'branch_reg'], 'rcutorture_record_progress': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'branch_reg'], 'choose_memblock_flags': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'condsel', 'bitfield', 'branch_reg'], 'free_rt_sched_group': ['branch_reg'], 'test_and_set_bit': ['log_imm', 'log_shift', 'movewide', 'addsub_shift', 'ldst_pos', 'dp_2src', 'ldstexcl', 'compbranch', 'system', 'branch_reg'], 'user_shm_lock': ['ldstpair_pre', 'system', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'pcreladdr', 'branch_imm', 'ldstexcl', 'compbranch', 'addsub_shift', 'movewide', 'ldstpair_post', 'branch_reg'], 'bad_inode_get_acl': ['movewide', 'branch_reg'], '_local_bh_enable': ['system', 'ldst_pos', 'addsub_imm', 'branch_reg'], 'inode_set_bytes': ['log_imm', 'bitfield', 'ldst_pos', 'branch_reg'], 'clk_ignore_unused_setup': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'strncpy_from_unsafe': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'system', 'condbranch', 'log_shift', 'movewide', 'branch_imm', 'addsub_shift', 'bitfield', 'condcmp_imm', 'ldst_immpost', 'condsel', 'ldstpair_post', 'branch_reg'], 'rcutree_dead_cpu': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg'], 'clk_nodrv_prepare_enable': ['movewide', 'branch_reg'], 'init_admin_reserve': ['pcreladdr', 'movewide', 'ldst_pos', 'addsub_imm', 'condsel', 'bitfield', 'addsub_shift', 'branch_reg'], 'devm_action_match': ['ldst_pos', 'movewide', 'addsub_shift', 'condbranch', 'branch_reg', 'condsel'], 'task_tick_stop': ['branch_reg'], 'early_init_dt_verify': ['compbranch', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'movewide', 'pcreladdr', 'ldstpair_post', 'branch_reg'], 'irq_chip_compose_msi_msg': ['compbranch', 'movewide', 'ldst_pos', 'addsub_imm', 'condsel', 'ldstpair_pre', 'log_shift', 'branch_reg', 'ldstpair_post'], 'clockevents_switch_state': ['ldst_pos', 'addsub_shift', 'condbranch', 'ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'testbranch', 'pcreladdr', 'ldst_regoff', 'addsub_ext', 'branch_reg'], 'cdev_set_parent': ['ldst_pos', 'branch_reg'], 'irq_set_thread_affinity': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'compbranch', 'movewide', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'power_supply_get_property': ['ldst_pos', 'addsub_imm', 'condbranch', 'ldstpair_pre', 'branch_reg', 'ldstpair_post', 'movewide', 'condsel'], 'round_jiffies_relative': ['pcreladdr', 'system', 'addsub_imm', 'movewide', 'ldst_regoff', 'ldst_pos', 'addsub_shift', 'bitfield', 'dp_3src', 'condbranch', 'condsel', 'branch_reg'], 'nr_free_zone_pages': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'ldstpair_off', 'log_shift', 'addsub_shift', 'condbranch', 'movewide', 'compbranch', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'cntvct_read_handler': ['ldstpair_pre', 'bitfield', 'addsub_imm', 'system', 'condbranch', 'ldst_regoff', 'ldst_pos', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'el1_error_invalid_1': ['branch_imm'], 'change_bit': ['log_imm', 'log_shift', 'movewide', 'addsub_shift', 'ldst_pos', 'dp_2src', 'ldstexcl', 'compbranch', 'branch_reg'], 'ntp_get_next_leap': ['pcreladdr', 'movewide', 'ldst_pos', 'addsub_imm', 'condbranch', 'branch_reg', 'testbranch', 'addsub_shift', 'dp_3src'], 'sanity': ['ldst_pos', 'ldstpair_off', 'addsub_shift', 'compbranch', 'addsub_imm', 'log_shift', 'condbranch', 'movewide', 'dp_3src', 'branch_reg'], 'rcutree_dying_cpu': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg'], 'hsiphash_1u32': ['ldstpair_off', 'log_shift', 'movewide', 'log_imm', 'addsub_shift', 'extract', 'branch_reg'], 'strcmp': ['log_shift', 'log_imm', 'condbranch', 'ldst_immpost', 'addsub_shift', 'compbranch', 'branch_imm', 'bitfield', 'movewide', 'dp_2src', 'addsub_imm', 'condsel', 'condcmp_imm', 'condcmp_reg', 'branch_reg', 'ldst_regoff', 'dp_1src'], 'del_random_ready_callback': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'addsub_shift', 'condbranch', 'ldstpair_post', 'branch_reg'], 'clocks_calc_max_nsecs': ['addsub_shift', 'movewide', 'dp_2src', 'condsel', 'dp_3src', 'compbranch', 'ldst_pos', 'bitfield', 'branch_reg'], 'set_secondary_fwnode': ['compbranch', 'movewide', 'ldst_pos', 'addsub_imm', 'condbranch', 'branch_reg'], 'gic_irq_set_vcpu_affinity': ['ldst_pos', 'compbranch', 'log_imm', 'branch_reg', 'movewide'], 'nr_iowait_cpu': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'ldst_pos', 'bitfield', 'branch_reg'], 'driver_allows_async_probing': ['ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'oom_killer_enable': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'sched_clock': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'movewide', 'ldst_pos', 'system', 'log_imm', 'dp_3src', 'addsub_shift', 'branch_reg', 'ldst_regoff', 'condbranch', 'log_shift', 'dp_2src', 'ldstpair_post'], 'single_start': ['ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'iov_iter_pipe': ['addsub_imm', 'condbranch', 'ldst_pos', 'ldstpair_off', 'addsub_shift', 'log_shift', 'branch_reg', 'exception'], 'bad_inode_fiemap': ['movewide', 'branch_reg'], 'can_do_mlock': ['system', 'ldst_pos', 'movewide', 'branch_reg'], 'radix_tree_init_maxnodes': ['addsub_imm', 'movewide', 'dp_2src', 'condsel', 'ldst_regoff', 'condbranch', 'pcreladdr', 'log_shift', 'bitfield', 'compbranch', 'addsub_ext', 'ldst_unscaled', 'addsub_shift', 'branch_imm', 'branch_reg'], 'noop': ['branch_reg'], 'notifier_call_chain': ['ldst_pos', 'addsub_imm', 'condcmp_imm', 'condbranch', 'ldstpair_pre', 'ldstpair_off', 'log_shift', 'branch_reg', 'compbranch', 'testbranch', 'ldstpair_post', 'movewide'], 'get_files_struct': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'compbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'bad_chained_irq': ['movewide', 'branch_reg'], 'sighand_ctor': ['ldstpair_pre', 'log_shift', 'pcreladdr', 'addsub_imm', 'ldst_pos', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'cmp_ex_search': ['ldst_pos', 'movewide', 'addsub_shift', 'condsel', 'branch_reg'], 'arch_release_thread_stack': ['branch_reg'], 'generic_swap': ['movewide', 'ldst_regoff', 'addsub_imm', 'addsub_shift', 'condbranch', 'branch_reg'], 'round_jiffies': ['pcreladdr', 'movewide', 'system', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'bitfield', 'dp_3src', 'condbranch', 'ldst_pos', 'condsel', 'branch_reg'], 'clockevents_resume': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'addsub_shift', 'condbranch', 'branch_imm', 'compbranch', 'log_shift', 'branch_reg', 'ldstpair_post'], 'user_namespace_sysctl_init': ['movewide', 'branch_reg'], 'f__init_rwsem': ['addsub_imm', 'ldst_pos', 'branch_reg'], 'set_security_override_from_ctx': ['movewide', 'branch_reg'], 'f__dummy_unmap_sg': ['branch_reg'], 'arch_timer_set_next_event_virt_mem': ['ldst_unscaled', 'addsub_imm', 'ldst_pos', 'log_imm', 'movewide', 'branch_reg'], 'update_vsyscall_tz': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'ldstpair_off', 'branch_reg'], 'trivial_online': ['movewide', 'branch_reg'], 'c_stop': ['branch_reg'], 'bit_waitqueue': ['bitfield', 'movewide', 'pcreladdr', 'log_shift', 'addsub_imm', 'dp_3src', 'addsub_shift', 'branch_reg'], 'noop_fsync': ['movewide', 'branch_reg'], 'memblock_remove_region': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'addsub_shift', 'ldstpair_off', 'bitfield', 'branch_imm', 'condbranch', 'movewide', 'ldstpair_post', 'branch_reg'], 'f__ctzdi2': ['dp_1src', 'branch_reg'], 'f__init_waitqueue_head': ['addsub_imm', 'ldst_pos', 'branch_reg'], 'move_expired_inodes': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'log_imm', 'ldst_pos', 'testbranch', 'movewide', 'addsub_shift', 'condbranch', 'compbranch', 'ldst_unscaled', 'branch_imm', 'ldstpair_post', 'branch_reg', 'pcreladdr', 'dp_3src', 'ldst_immpre'], 'clk_multiplier_recalc_rate': ['ldst_pos', 'system', 'movewide', 'addsub_shift', 'dp_2src', 'log_shift', 'compbranch', 'log_imm', 'dp_3src', 'branch_reg'], 'f__irq_put_desc_unlock': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'bitfield', 'branch_imm', 'compbranch', 'ldst_pos', 'ldstpair_post', 'branch_reg'], 'platform_drv_remove': ['ldst_pos', 'ldst_unscaled', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'branch_reg', 'ldstpair_post', 'movewide'], 'radix_tree_tagged': ['addsub_imm', 'ldst_pos', 'movewide', 'dp_2src', 'log_shift', 'branch_reg'], 'f__cpu_setup': ['system', 'movewide', 'bitfield', 'addsub_imm', 'condbranch', 'loadlit', 'pcreladdr', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_reg'], 'work_for_cpu_fn': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'ldstpair_off', 'branch_reg', 'ldstpair_post'], 'pagecache_write_begin': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'run_timer_softirq': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'system', 'addsub_shift', 'ldst_pos', 'testbranch', 'log_shift', 'movewide', 'branch_imm', 'log_imm', 'bitfield', 'dp_2src', 'ldst_regoff', 'condbranch', 'compbranch', 'addsub_ext', 'ldstexcl', 'branch_reg', 'ldstpair_post'], 'device_add_groups': ['movewide', 'branch_reg'], 'dev_uevent_filter': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'movewide', 'addsub_shift', 'condbranch', 'branch_reg', 'compbranch', 'condsel'], 'rcu_test_sync_prims': ['branch_reg'], 'f__round_jiffies_up_relative': ['pcreladdr', 'addsub_shift', 'movewide', 'ldst_pos', 'addsub_imm', 'addsub_ext', 'bitfield', 'dp_3src', 'condsel', 'branch_reg'], 'vmacache_update': ['system', 'ldst_pos', 'addsub_shift', 'condbranch', 'branch_reg', 'testbranch', 'bitfield'], 'f__is_ram': ['movewide', 'branch_reg'], 'fwnode_property_read_string_array': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_reg', 'condbranch', 'ldstpair_post', 'movewide', 'branch_imm'], 'address_space_init_once': ['ldstpair_pre', 'pcreladdr', 'movewide', 'addsub_imm', 'ldst_pos', 'log_shift', 'ldstpair_off', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'hrtimer_init_sleeper': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'branch_reg'], 'pud_clear_huge': ['ldst_pos', 'log_imm', 'addsub_imm', 'condbranch', 'movewide', 'branch_reg', 'system', 'log_shift'], 'gic_eoi_irq_1': ['ldst_pos', 'system', 'branch_reg'], 'mask_irq': ['ldst_pos', 'testbranch', 'ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'exact_match': ['log_shift', 'branch_reg'], 'jiffies_to_timespec64': ['movewide', 'dp_3src', 'bitfield', 'ldstpair_off', 'branch_reg'], 'cap_inode_setxattr': ['movewide', 'branch_reg'], 'tick_get_broadcast_mask': ['pcreladdr', 'addsub_imm', 'branch_reg'], 'finish_no_open': ['ldst_pos', 'movewide', 'branch_reg'], 'load_default_modules': ['branch_reg'], 'set_pageblock_order': ['branch_reg'], 'set_wb_congested': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'condsel', 'branch_imm', 'compbranch', 'pcreladdr', 'addsub_ext', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'readwrite': ['ldst_pos', 'compbranch', 'pcreladdr', 'movewide', 'log_imm', 'branch_reg'], 'phys_mem_access_prot_allowed': ['movewide', 'branch_reg'], 'f__dummy_mmap': ['movewide', 'branch_reg'], 'nsec_to_clock_t': ['movewide', 'dp_3src', 'bitfield', 'branch_reg'], 'u32_swap': ['ldst_pos', 'branch_reg'], 'f__memblock_dump_all': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'compbranch', 'branch_reg', 'movewide', 'addsub_ext', 'condbranch', 'branch_imm'], 'ntp_tick_length': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'kobj_child_ns_ops': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'jiffies_to_usecs': ['movewide', 'dp_3src', 'branch_reg'], 'take_dentry_name_snapshot': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'ldst_pos', 'addsub_shift', 'condbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg', 'compbranch'], 'ihold': ['addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'system', 'branch_reg'], 'idmap_cpu_replace_ttbr1': ['system', 'pcreladdr', 'branch_reg'], 'power_supply_powers': ['movewide', 'branch_reg'], 'set_nohugeiomap': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'timespec_trunc': ['addsub_imm', 'condbranch', 'movewide', 'addsub_shift', 'log_shift', 'dp_2src', 'dp_3src', 'branch_reg'], 'ioremap_huge_init': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'compbranch', 'branch_imm', 'movewide', 'ldstpair_post', 'branch_reg'], 'early_debug_disable': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'machine_shutdown': ['branch_reg'], 'dev_driver_string': ['ldst_pos', 'compbranch', 'branch_reg', 'pcreladdr', 'addsub_imm'], 'rcu_irq_enter_disabled': ['pcreladdr', 'addsub_imm', 'system', 'ldst_regoff', 'bitfield', 'condsel', 'branch_reg'], 'fwnode_property_read_u8_array': ['ldstpair_pre', 'log_shift', 'movewide', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'pgd_clear_bad': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldst_pos', 'movewide', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'uao_thread_switch': ['branch_reg'], 'mem_devnode': ['compbranch', 'ldst_pos', 'pcreladdr', 'addsub_imm', 'bitfield', 'addsub_shift', 'movewide', 'branch_reg'], 'early_fixmap_init': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'compbranch', 'addsub_shift', 'log_imm', 'system', 'testbranch', 'exception', 'branch_reg'], 'arch_cpu_idle_exit': ['branch_reg'], 'generic_file_llseek_size': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'condbranch', 'pcreladdr', 'ldst_regoff', 'addsub_ext', 'branch_reg'], 'setup_profiling_timer': ['movewide', 'branch_reg'], 'timespec64_to_jiffies': ['ldstpair_off', 'movewide', 'addsub_shift', 'condbranch', 'log_imm', 'branch_reg', 'bitfield', 'addsub_imm', 'dp_3src'], 'dec_node_page_state': ['pcreladdr', 'log_shift', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'system', 'ldst_regoff', 'bitfield', 'addsub_ext', 'condbranch', 'movewide', 'log_imm', 'ldstexcl', 'compbranch', 'branch_reg'], 'user_fastforward_single_step': ['ldst_pos', 'testbranch', 'log_imm', 'branch_reg'], 'devm_percpu_match': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'init_setup': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'ldst_immpost', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg'], 'f__clzsi2': ['movewide', 'dp_1src', 'addsub_imm', 'condsel', 'branch_reg'], 'clk_nodrv_set_parent': ['movewide', 'branch_reg'], 'rht_bucket_nested': ['ldstpair_off', 'movewide', 'ldst_pos', 'dp_2src', 'addsub_imm', 'log_shift', 'ldst_regoff', 'condcmp_reg', 'condbranch', 'log_imm', 'bitfield', 'compbranch', 'addsub_ext', 'branch_reg', 'pcreladdr'], 'arch_setup_new_exec': ['system', 'ldst_pos', 'branch_reg'], 'irq_chip_eoi_parent': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_reg', 'ldstpair_post'], 'set_rq_offline': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_reg', 'branch_imm', 'ldstpair_post'], 'disable_randmaps': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'arch_ioremap_pud_supported': ['movewide', 'branch_reg'], 'amba_shutdown': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'cpu_report_state': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'early_ioremap_reset': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'pcreladdr', 'movewide', 'ldstpair_post', 'ldst_pos', 'branch_reg'], 'ip6_string': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_immpost', 'log_imm', 'bitfield', 'ldst_regoff', 'ldst_pos', 'ldst_unscaled', 'condcmp_imm', 'condbranch', 'branch_reg', 'branch_imm'], 'f__check_ne': ['bitfield', 'log_imm', 'branch_reg'], 'refcount_inc_not_zero': ['ldst_pos', 'log_shift', 'addsub_imm', 'compbranch', 'ldstexcl', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg', 'branch_imm'], 'unmask_irq.part.4': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'branch_reg', 'log_imm', 'ldstpair_post'], 'smp_spin_table_cpu_boot': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'movewide', 'ldst_regoff', 'ldst_pos', 'branch_imm', 'system', 'ldstpair_post', 'branch_reg'], 'noop_ret': ['movewide', 'branch_reg'], 'cpus_are_stuck_in_kernel': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_imm', 'condbranch', 'movewide', 'ldstpair_post', 'branch_reg', 'condsel'], 'f__dl_clear_params': ['ldst_pos', 'log_imm', 'addsub_imm', 'ldstpair_off', 'branch_reg'], 'init_rt_rq': ['addsub_imm', 'movewide', 'bitfield', 'ldst_pos', 'dp_2src', 'ldst_regoff', 'log_shift', 'condbranch', 'log_imm', 'branch_reg'], 'generic_pipe_buf_nosteal': ['movewide', 'branch_reg'], 'lockref_put_or_lock': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'bitfield', 'addsub_ext', 'condbranch', 'log_shift', 'ldstexcl', 'compbranch', 'addsub_shift', 'movewide', 'ldstpair_post', 'branch_reg', 'system', 'branch_imm'], 'devm_ioremap_match': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'simple_statfs': ['ldst_pos', 'movewide', 'ldstpair_off', 'branch_reg'], 'hyp_offset_low': ['pcreladdr', 'addsub_imm', 'log_imm', 'ldst_pos', 'movewide', 'addsub_shift', 'condbranch', 'system', 'condsel', 'branch_reg'], 'cpu_is_hotpluggable': ['pcreladdr', 'movewide', 'ldst_pos', 'addsub_shift', 'condbranch', 'addsub_imm', 'condsel', 'bitfield', 'ldst_regoff', 'dp_2src', 'testbranch', 'compbranch', 'ldst_unscaled', 'log_shift', 'branch_reg'], 'msi_domain_prepare_irqs': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_reg', 'compbranch', 'ldstpair_post'], 'arch_update_cpu_topology': ['movewide', 'branch_reg'], 'arch_asym_cpu_priority': ['addsub_shift', 'branch_reg'], 'driver_remove_file': ['branch_reg'], 'memset32': ['movewide', 'compbranch', 'ldst_regoff', 'addsub_imm', 'addsub_shift', 'condbranch', 'branch_reg'], 'of_fwnode_put': ['branch_reg'], 'early_ioremap_shutdown': ['branch_reg'], 'f__ktime_get_real_seconds': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'ctr_read_handler': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'bitfield', 'ldstpair_off', 'ldst_pos', 'log_shift', 'condbranch', 'ldst_regoff', 'system', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'set_close_on_exec': ['ldstpair_pre', 'system', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'compbranch', 'condsel', 'log_imm', 'bitfield', 'ldst_regoff', 'dp_2src', 'testbranch', 'addsub_shift', 'movewide', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'inode_get_bytes': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'addsub_shift', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'fwnode_get_next_child_node': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'platform_drv_shutdown': ['ldst_pos', 'ldst_unscaled', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'branch_reg', 'ldstpair_post'], 'bad_inode_link': ['movewide', 'branch_reg'], 'select_task_rq_stop': ['ldst_pos', 'branch_reg'], 'sys_sched_get_priority_min': ['addsub_imm', 'condbranch', 'movewide', 'branch_reg', 'pcreladdr', 'ldst_regoff', 'addsub_ext'], 'ktime_get_real_fast_ns': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'movewide', 'ldst_pos', 'log_imm', 'dp_3src', 'ldst_regoff', 'addsub_shift', 'log_shift', 'branch_reg', 'system', 'condbranch', 'dp_2src', 'ldstpair_post'], 'cpus_share_cache': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'condsel', 'branch_reg'], 'compare_single': ['movewide', 'branch_reg'], 'check_early_ioremap_leak': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_regoff', 'condsel', 'condbranch', 'branch_reg'], 'f__fget': ['log_shift', 'system', 'ldst_pos', 'bitfield', 'addsub_shift', 'condbranch', 'ldst_regoff', 'compbranch', 'addsub_imm', 'ldstexcl', 'branch_reg', 'movewide'], 'param_array_get': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'movewide', 'branch_imm', 'addsub_ext', 'dp_3src', 'addsub_shift', 'branch_reg', 'testbranch', 'compbranch', 'condbranch', 'ldst_unscaled', 'ldst_regoff', 'ldstpair_post'], 'early_ioremap_debug_setup': ['movewide', 'branch_reg'], 'f__inode_add_bytes': ['ldst_pos', 'log_imm', 'addsub_shift', 'bitfield', 'addsub_imm', 'condbranch', 'branch_reg'], 'save_return_addr': ['ldst_pos', 'compbranch', 'addsub_imm', 'movewide', 'branch_reg'], 'its_build_invall_cmd': ['movewide', 'ldst_pos', 'branch_reg'], 'inode_sub_bytes': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'ldst_pos', 'log_imm', 'addsub_shift', 'addsub_ext', 'condbranch', 'bitfield', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'sha_init': ['movewide', 'ldstpair_off', 'ldst_pos', 'branch_reg'], 'tick_get_broadcast_device': ['pcreladdr', 'addsub_imm', 'branch_reg'], 'bad_inode_create': ['movewide', 'branch_reg'], 'rcu_set_runtime_mode': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'memblock_reserved_memory_within': ['pcreladdr', 'log_shift', 'addsub_imm', 'ldst_pos', 'compbranch', 'movewide', 'ldstpair_off', 'addsub_shift', 'dp_3src', 'condcmp_reg', 'condsel', 'addsub_ext', 'condbranch', 'branch_reg'], 'dec_zone_page_state': ['ldst_pos', 'pcreladdr', 'addsub_imm', 'log_shift', 'bitfield', 'addsub_shift', 'system', 'ldst_regoff', 'addsub_ext', 'condbranch', 'movewide', 'log_imm', 'ldstexcl', 'compbranch', 'branch_reg'], 'int_sqrt': ['addsub_imm', 'condbranch', 'dp_1src', 'movewide', 'addsub_shift', 'log_imm', 'dp_2src', 'bitfield', 'compbranch', 'log_shift', 'branch_reg'], 'class_create_file_ns': ['movewide', 'addsub_imm', 'condsel', 'branch_reg'], 'cpu_set_state_online': ['pcreladdr', 'addsub_imm', 'movewide', 'ldst_regoff', 'addsub_shift', 'ldst_pos', 'ldstexcl', 'compbranch', 'system', 'branch_reg'], 'platform_msi_get_host_data': ['ldst_pos', 'branch_reg'], 'register_step_hook': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'arch_cpu_idle_prepare': ['branch_reg'], 'should_remove_suid': ['movewide', 'branch_reg'], 'rcu_batches_started_bh': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'strnlen': ['compbranch', 'log_imm', 'condbranch', 'addsub_imm', 'bitfield', 'ldstpair_post', 'addsub_shift', 'log_shift', 'condcmp_imm', 'dp_1src', 'condsel', 'branch_reg', 'movewide', 'dp_2src', 'branch_imm'], 'devm_clk_hw_match': ['compbranch', 'addsub_shift', 'condsel', 'branch_reg', 'movewide'], 'f__getnstimeofday64': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'ldst_pos', 'testbranch', 'system', 'branch_reg', 'addsub_shift', 'condbranch', 'movewide', 'dp_3src', 'dp_2src', 'condsel', 'ldstpair_post', 'branch_imm'], 'llist_add_batch': ['ldst_pos', 'ldstexcl', 'log_shift', 'compbranch', 'system', 'addsub_shift', 'condbranch', 'addsub_imm', 'condsel', 'branch_reg'], 'rcu_batches_completed_bh': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'current_is_async': ['system', 'movewide', 'ldst_pos', 'log_shift', 'condbranch', 'testbranch', 'branch_reg', 'ldstpair_pre', 'addsub_imm', 'branch_imm', 'compbranch', 'pcreladdr', 'addsub_shift', 'ldstpair_post'], 'irq_calc_affinity_vectors': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'addsub_shift', 'condbranch', 'pcreladdr', 'log_shift', 'ldst_pos', 'branch_imm', 'condsel', 'ldstpair_post', 'branch_reg', 'movewide'], 'show_rcu_gp_kthreads': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'condbranch', 'branch_reg'], 'gen_pool_virt_to_phys': ['ldst_immpre', 'addsub_shift', 'condbranch', 'ldst_pos', 'movewide', 'branch_reg'], 'account_steal_time': ['pcreladdr', 'system', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'branch_reg'], 'mntns_owner': ['ldst_pos', 'branch_reg'], 'f__bitmap_subset': ['bitfield', 'compbranch', 'ldst_pos', 'log_shift', 'condbranch', 'addsub_imm', 'movewide', 'branch_imm', 'ldst_immpost', 'addsub_shift', 'log_imm', 'ldst_regoff', 'dp_2src', 'condsel', 'branch_reg'], 'shmem_unlock_mapping': ['branch_reg'], 'f__kfifo_init': ['log_shift', 'dp_2src', 'addsub_imm', 'condbranch', 'dp_1src', 'movewide', 'addsub_shift', 'ldstpair_off', 'ldst_pos', 'branch_reg', 'branch_imm'], 'set_rq_online.part.15': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'pcreladdr', 'ldst_pos', 'branch_imm', 'movewide', 'compbranch', 'branch_reg', 'ldstpair_post'], 'refcount_dec_not_one': ['ldst_pos', 'addsub_imm', 'condbranch', 'addsub_shift', 'log_shift', 'ldstexcl', 'compbranch', 'movewide', 'branch_reg', 'branch_imm'], 'clear_page': ['system', 'log_imm', 'movewide', 'dp_2src', 'addsub_shift', 'condbranch', 'branch_reg'], 'f__pud_error': ['branch_reg'], 'clk_hw_get_num_parents': ['ldst_pos', 'branch_reg'], 'cpu_do_switch_mm': ['ldst_pos', 'bitfield', 'system', 'branch_reg'], 'f__mnt_drop_write': ['ldst_pos', 'movewide', 'system', 'addsub_imm', 'addsub_shift', 'ldstexcl', 'compbranch', 'branch_reg'], 'cpu_cpu_mask': ['pcreladdr', 'addsub_imm', 'branch_reg'], 'strrchr': ['movewide', 'log_imm', 'ldst_immpost', 'compbranch', 'addsub_shift', 'condbranch', 'addsub_imm', 'branch_imm', 'log_shift', 'branch_reg'], 'f__hyp_stub_vectors': ['branch_imm'], 'strchrnul': ['ldst_pos', 'compbranch', 'log_imm', 'addsub_shift', 'condbranch', 'ldst_immpre', 'branch_reg'], 'of_bus_default_map': ['addsub_imm', 'compbranch', 'log_shift', 'movewide', 'ldst_immpost', 'dp_1src', 'condbranch', 'bitfield', 'addsub_ext', 'addsub_shift', 'branch_reg', 'condsel', 'branch_imm'], 'devm_region_match': ['ldst_pos', 'movewide', 'addsub_shift', 'condbranch', 'branch_reg', 'condsel'], 'init_wait_entry': ['addsub_imm', 'pcreladdr', 'ldst_pos', 'system', 'ldstpair_off', 'branch_reg'], 'partition_irq_unmask': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'system', 'ldst_regoff', 'ldst_pos', 'condsel', 'bitfield', 'addsub_shift', 'dp_2src', 'testbranch', 'compbranch', 'branch_reg', 'ldstpair_post'], 'no_open': ['movewide', 'branch_reg'], 'device_create_bin_file': ['movewide', 'addsub_imm', 'condsel', 'branch_reg'], 'vma_interval_tree_subtree_search': ['ldst_pos', 'addsub_imm', 'compbranch', 'addsub_shift', 'condbranch', 'log_shift', 'ldstpair_off', 'movewide', 'branch_reg'], 'mmap_min_addr_handler': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'pcreladdr', 'ldstpair_post', 'ldst_pos', 'branch_reg'], 'f__iget': ['addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'branch_reg'], 'cpu_check_up_prepare': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'tls_preserve_current_state': ['system', 'ldst_pos', 'branch_reg'], 'inode_init_owner': ['system', 'ldst_pos', 'bitfield', 'compbranch', 'testbranch', 'branch_reg', 'log_imm', 'addsub_imm', 'condsel'], 'arch_timer_handler_virt': ['system', 'testbranch', 'movewide', 'branch_reg', 'ldstpair_pre', 'log_shift', 'log_imm', 'addsub_imm', 'ldst_pos', 'ldstpair_post'], 'radix_tree_iter_tag_set': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'rcu_segcblist_ready_cbs': ['ldst_pos', 'compbranch', 'addsub_shift', 'condsel', 'branch_reg', 'movewide'], 'account_user_time': ['ldst_pos', 'pcreladdr', 'addsub_imm', 'addsub_shift', 'system', 'condsel', 'ldst_regoff', 'branch_reg'], 'lruvec_lru_size': ['pcreladdr', 'log_shift', 'addsub_imm', 'ldst_regoff', 'condsel', 'condbranch', 'movewide', 'addsub_shift', 'bitfield', 'ldst_pos', 'compbranch', 'branch_reg'], 'fpsimd_bind_to_cpu': ['system', 'pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'ldst_pos', 'bitfield', 'branch_reg'], 'unregister_fair_sched_group': ['branch_reg'], 'fpsimd_init': ['movewide', 'branch_reg'], 'init_cfs_bandwidth': ['branch_reg'], 'platform_drv_probe_fail': ['movewide', 'branch_reg'], 'clk_fixed_rate_recalc_rate': ['ldst_pos', 'branch_reg'], 'its_build_inv_cmd': ['ldst_pos', 'log_imm', 'ldst_regoff', 'addsub_shift', 'bitfield', 'log_shift', 'branch_reg'], 'of_msi_map_rid': ['compbranch', 'ldst_pos', 'log_shift', 'branch_reg'], 'do_bad': ['movewide', 'branch_reg'], 'el1_sync_invalid_1': ['branch_imm'], 'driver_create_file': ['movewide', 'addsub_imm', 'condsel', 'branch_reg'], 'arch_remove_reservations': ['branch_reg'], 'f__dummy_map_page': ['movewide', 'branch_reg'], 'sys_getuid': ['movewide', 'branch_reg'], 'irqfixup_setup': ['pcreladdr', 'movewide', 'log_shift', 'ldst_pos', 'branch_reg'], 'handle_guest_sea': ['movewide', 'branch_reg'], 'inc_zone_page_state': ['ldst_pos', 'pcreladdr', 'addsub_imm', 'log_shift', 'bitfield', 'addsub_shift', 'system', 'ldst_regoff', 'movewide', 'condbranch', 'log_imm', 'ldstexcl', 'compbranch', 'addsub_ext', 'branch_reg'], 'add_taint': ['ldstpair_pre', 'addsub_imm', 'condbranch', 'pcreladdr', 'movewide', 'ldst_pos', 'ldstexcl', 'compbranch', 'system', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'suspended_sched_clock_read': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'system', 'log_imm', 'bitfield', 'addsub_shift', 'branch_reg'], 'radix_tree_iter_tag_clear': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'csum_tcpudp_nofold': ['addsub_ext', 'log_shift', 'bitfield', 'addsub_shift', 'branch_reg'], 'rcu_panic': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'f__iowrite64_copy': ['addsub_shift', 'condbranch', 'addsub_imm', 'ldst_immpost', 'ldst_pos', 'log_shift', 'branch_reg'], 'is_empty_dir_inode': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg', 'condsel'], 'f__mnt_drop_write_file': ['ldst_pos', 'movewide', 'system', 'addsub_imm', 'addsub_shift', 'ldstexcl', 'compbranch', 'branch_reg'], 'u64_swap': ['ldst_pos', 'branch_reg'], 'class_compat_remove_link': ['branch_reg'], 'f__balance_callback': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'compbranch', 'branch_reg', 'ldstpair_post'], 'clocksource_mark_unstable': ['branch_reg'], 'group_open_release': ['branch_reg'], 'prandom_warmup': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'account_idle_time': ['pcreladdr', 'system', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'condbranch', 'branch_reg'], 'task_curr': ['ldst_pos', 'pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'condsel', 'branch_reg'], 'release_thread': ['branch_reg'], 'fdt_get_mem_rsv': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'compbranch', 'ldst_pos', 'addsub_ext', 'dp_1src', 'ldst_regoff', 'addsub_shift', 'ldstpair_post', 'branch_reg'], 'get_taint': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'simple_open': ['ldst_pos', 'compbranch', 'movewide', 'branch_reg'], 'get_state_synchronize_sched': ['system', 'pcreladdr', 'addsub_imm', 'ldstexcl', 'branch_reg'], 'd_set_mounted': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'system', 'addsub_shift', 'condbranch', 'ldstexcl', 'compbranch', 'movewide', 'ldstpair_post', 'branch_reg', 'testbranch', 'log_imm'], 'device_create_file': ['movewide', 'branch_reg'], 'rdinit_setup': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'ldst_immpost', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg'], 'ktime_get_raw': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'testbranch', 'system', 'log_shift', 'branch_reg', 'addsub_shift', 'condbranch', 'dp_3src', 'dp_2src', 'ldstpair_post', 'branch_imm'], 'srcu_batches_completed': ['ldst_pos', 'branch_reg'], 'post_alloc_hook': ['movewide', 'ldst_pos', 'branch_reg'], 'cpu_switch_to': ['movewide', 'addsub_shift', 'addsub_imm', 'ldstpair_post', 'ldst_pos', 'system', 'branch_reg'], 'empty_dir_listxattr': ['movewide', 'branch_reg'], 'rcu_sync_enter_start': ['ldst_pos', 'movewide', 'addsub_imm', 'ldstpair_off', 'branch_reg'], 'root_data_setup': ['pcreladdr', 'ldst_pos', 'movewide', 'branch_reg'], 'kthread_should_park': ['system', 'ldst_pos', 'bitfield', 'branch_reg'], 'f__follow_pte_pmd.isra.7': ['bitfield', 'ldst_regoff', 'compbranch', 'testbranch', 'pcreladdr', 'log_imm', 'ldst_pos', 'addsub_shift', 'ldstpair_pre', 'addsub_imm', 'condcmp_imm', 'ldstpair_off', 'condbranch', 'log_shift', 'branch_imm', 'movewide', 'ldstpair_post', 'branch_reg', 'ldstexcl'], 'msi_get_domain_info': ['ldst_pos', 'branch_reg'], 'free_unref_page_prepare': ['log_shift', 'ldst_pos', 'log_imm', 'condbranch', 'pcreladdr', 'bitfield', 'compbranch', 'ldst_regoff', 'addsub_shift', 'movewide', 'dp_2src', 'branch_reg', 'branch_imm'], 'f__calc_delta': ['ldst_pos', 'bitfield', 'compbranch', 'log_shift', 'movewide', 'dp_3src', 'addsub_imm', 'log_imm', 'dp_2src', 'condsel', 'branch_reg', 'addsub_shift', 'condbranch', 'branch_imm'], 'f__destroy_inode': ['ldst_pos', 'compbranch', 'addsub_imm', 'ldstexcl', 'pcreladdr', 'movewide', 'system', 'addsub_shift', 'branch_reg'], 'rcu_segcblist_disable': ['ldst_pos', 'branch_reg'], 'dma_debug_do_init': ['movewide', 'branch_reg'], 'strchr': ['log_imm', 'ldst_immpost', 'addsub_shift', 'condcmp_reg', 'condbranch', 'addsub_imm', 'condsel', 'branch_reg'], 'psci_cpu_on': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'movewide', 'ldst_pos', 'branch_reg', 'condbranch', 'ldst_regoff', 'ldstpair_post', 'branch_imm'], 'f__round_jiffies_relative': ['pcreladdr', 'addsub_shift', 'movewide', 'bitfield', 'ldst_pos', 'dp_3src', 'addsub_imm', 'condbranch', 'condsel', 'branch_reg'], 'f__enable_mmu': ['system', 'bitfield', 'addsub_imm', 'condbranch', 'movewide', 'pcreladdr', 'ldst_pos', 'branch_reg', 'branch_imm'], 'cap_mmap_addr': ['pcreladdr', 'ldst_pos', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg', 'ldstpair_pre', 'system', 'addsub_imm', 'branch_imm', 'compbranch', 'log_imm', 'ldstpair_post'], 'irq_domain_hierarchical_is_msi_remap': ['compbranch', 'branch_imm', 'ldst_pos', 'testbranch', 'movewide', 'branch_reg'], 'base_probe': ['movewide', 'branch_reg'], 'its_parse_indirect_baser': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'branch_imm', 'bitfield', 'movewide', 'ldst_pos', 'dp_2src', 'addsub_shift', 'condbranch', 'log_imm', 'dp_3src', 'testbranch', 'compbranch', 'dp_1src', 'condsel', 'ldstpair_post', 'branch_reg'], 'update_vsyscall': ['pcreladdr', 'ldst_pos', 'log_imm', 'addsub_imm', 'system', 'dp_2src', 'compbranch', 'branch_reg'], 'type_show': ['ldst_pos', 'addsub_imm', 'condbranch', 'movewide', 'branch_reg', 'pcreladdr', 'ldst_unscaled'], 'fprop_local_destroy_single': ['branch_reg'], 'driver_add_groups': ['movewide', 'branch_reg'], 'init_timer_list_procfs': ['movewide', 'branch_reg'], 'dmam_match': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'no_llseek': ['movewide', 'branch_reg'], 'init_dl_bandwidth': ['ldst_pos', 'ldstpair_off', 'branch_reg'], 'its_build_discard_cmd': ['ldst_pos', 'log_imm', 'ldst_regoff', 'addsub_shift', 'bitfield', 'log_shift', 'branch_reg'], 'fwnode_property_read_u32_array': ['ldstpair_pre', 'log_shift', 'movewide', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'init_timer_key': ['ldst_pos', 'pcreladdr', 'addsub_imm', 'system', 'ldst_regoff', 'log_shift', 'branch_reg'], 'cdev_purge': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'addsub_shift', 'condbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'driver_remove_groups': ['branch_reg'], 'f__bitmap_clear': ['log_imm', 'bitfield', 'addsub_shift', 'movewide', 'addsub_imm', 'dp_2src', 'condbranch', 'ldst_pos', 'log_shift', 'ldst_immpost', 'compbranch', 'branch_reg', 'branch_imm'], 'clk_gpio_gate_disable': ['branch_reg'], 'cpu_idle_poll_setup': ['pcreladdr', 'movewide', 'log_shift', 'ldst_pos', 'branch_reg'], 'register_undef_hook': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'ldstpair_post', 'branch_reg'], 'strnlen_user': ['addsub_imm', 'condbranch', 'system', 'ldst_pos', 'addsub_shift', 'log_imm', 'condsel', 'movewide', 'compbranch', 'bitfield', 'dp_2src', 'log_shift', 'branch_reg', 'dp_1src', 'addsub_ext'], 'cache_get_priv_group': ['movewide', 'branch_reg'], 'fwnode_graph_get_next_endpoint': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'f__raise_softirq_irqoff': ['pcreladdr', 'system', 'addsub_imm', 'ldst_regoff', 'movewide', 'dp_2src', 'bitfield', 'log_shift', 'branch_reg'], 'irq_chip_pm_put': ['movewide', 'branch_reg'], 'valid_mmap_phys_addr_range': ['addsub_shift', 'log_imm', 'condsel', 'branch_reg'], 'aarch64_insn_gen_load_store_reg': ['compbranch', 'addsub_imm', 'condbranch', 'movewide', 'branch_reg', 'pcreladdr', 'ldst_regoff', 'addsub_ext'], 'f__check_hi': ['log_imm', 'log_shift', 'condsel', 'branch_reg'], 'early_platform_add_devices': ['pcreladdr', 'movewide', 'addsub_imm', 'addsub_shift', 'condbranch', 'ldst_regoff', 'ldst_pos', 'compbranch', 'log_imm', 'testbranch', 'branch_imm', 'branch_reg'], 'f__dummy_alloc': ['movewide', 'branch_reg'], 'f__atomic_notifier_call_chain': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'prandom_u32_state': ['ldstpair_off', 'log_imm', 'log_shift', 'bitfield', 'branch_reg'], 'compute_batch_value': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_imm', 'bitfield', 'movewide', 'addsub_shift', 'condsel', 'ldstpair_post', 'branch_reg'], 'rhashtable_walk_exit': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'compbranch', 'ldstpair_off', 'movewide', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'sigaction_compat_abi': ['branch_reg'], 'd_set_fallthru': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'log_imm', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'simple_get_link': ['ldst_pos', 'branch_reg'], 'device_links_read_lock': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'f__ioread32_copy': ['addsub_shift', 'condbranch', 'addsub_imm', 'ldst_pos', 'ldst_immpost', 'log_shift', 'branch_reg'], 'jiffies_to_msecs': ['bitfield', 'branch_reg'], 'rcu_segcblist_entrain': ['ldst_pos', 'bitfield', 'compbranch', 'addsub_imm', 'system', 'ldstpair_off', 'addsub_shift', 'condbranch', 'condsel', 'addsub_ext', 'movewide', 'branch_reg', 'branch_imm'], 'wake_q_add': ['addsub_imm', 'movewide', 'ldst_pos', 'ldstexcl', 'log_shift', 'compbranch', 'system', 'branch_reg'], 'notify_die': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'movewide', 'ldst_pos', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'arch_disable_smp_support': ['branch_reg'], 'd_flags_for_inode': ['compbranch', 'ldst_pos', 'log_imm', 'addsub_imm', 'condbranch', 'testbranch', 'movewide', 'condsel', 'branch_reg', 'branch_imm'], 'seq_list_start_head': ['compbranch', 'ldst_pos', 'addsub_shift', 'condbranch', 'addsub_imm', 'branch_imm', 'movewide', 'branch_reg', 'log_shift'], 'keep_bootcon_setup': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'psci_sys_poweroff': ['pcreladdr', 'ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'gic_mask_irq': ['ldst_pos', 'movewide', 'bitfield', 'dp_2src', 'addsub_imm', 'addsub_shift', 'branch_reg'], 'f__clk_get_flags': ['compbranch', 'ldst_pos', 'branch_reg', 'movewide'], 'class_remove_file_ns': ['branch_reg'], 'rcu_init_percpu_data': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'bitfield', 'ldst_regoff', 'ldst_pos', 'branch_imm', 'addsub_shift', 'compbranch', 'movewide', 'system', 'testbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'get_task_pid': ['compbranch', 'ldst_pos', 'log_shift', 'addsub_shift', 'bitfield', 'addsub_imm', 'ldstexcl', 'branch_reg'], 'memblock_end_of_DRAM': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_pos', 'dp_3src', 'addsub_shift', 'ldst_regoff', 'branch_reg'], 'aarch64_insn_decode_register': ['addsub_imm', 'condbranch', 'movewide', 'branch_reg', 'pcreladdr', 'ldst_regoff', 'addsub_ext'], 'init_reserve_notifier': ['movewide', 'branch_reg'], 'async_unregister_domain': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'ldst_pos', 'testbranch', 'log_imm', 'ldstexcl', 'system', 'ldstpair_post', 'branch_reg'], 'idle_inject_timer_fn': ['ldstpair_pre', 'log_shift', 'movewide', 'addsub_imm', 'ldst_pos', 'system', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'group_close_release': ['branch_reg'], 'vmalloc_sync_all': ['branch_reg'], 'bad_inode_mkdir': ['movewide', 'branch_reg'], 'tlb_gather_mmu': ['addsub_imm', 'movewide', 'log_shift', 'ldst_pos', 'condsel', 'ldstpair_off', 'bitfield', 'log_imm', 'testbranch', 'ldstexcl', 'compbranch', 'branch_reg'], '_raw_spin_lock': ['ldst_pos', 'ldstexcl', 'addsub_imm', 'compbranch', 'log_shift', 'system', 'branch_reg'], 'vma_interval_tree_augment_rotate': ['addsub_imm', 'ldst_pos', 'ldst_unscaled', 'addsub_shift', 'compbranch', 'condsel', 'branch_reg'], 'memset16': ['bitfield', 'movewide', 'compbranch', 'ldst_regoff', 'addsub_imm', 'addsub_shift', 'condbranch', 'branch_reg'], 'f__clear_user': ['system', 'log_shift', 'addsub_imm', 'condbranch', 'ldst_immpost', 'movewide', 'branch_reg'], 'rcu_cpu_stall_reset': ['pcreladdr', 'addsub_imm', 'movewide', 'ldst_pos', 'addsub_shift', 'condbranch', 'branch_reg'], 'fdt_move': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'branch_imm', 'compbranch', 'ldst_pos', 'movewide', 'dp_1src', 'addsub_shift', 'condbranch', 'ldstpair_post', 'branch_reg'], 'power_supply_get_drvdata': ['ldst_pos', 'branch_reg'], 'swiotlb_dma_supported': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'addsub_shift', 'condsel', 'branch_reg'], 'its_build_mapc_cmd': ['movewide', 'ldst_pos', 'log_imm', 'log_shift', 'addsub_imm', 'condsel', 'branch_reg'], 'cap_settime': ['movewide', 'branch_reg'], 'fdt_reserved_mem_save_node': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'condbranch', 'bitfield', 'movewide', 'dp_3src', 'addsub_shift', 'ldst_regoff', 'ldstpair_off', 'branch_reg'], 'detach_if_pending': ['ldst_pos', 'bitfield', 'compbranch', 'movewide', 'log_shift', 'branch_reg', 'branch_imm', 'addsub_imm', 'addsub_shift', 'condbranch', 'dp_2src', 'ldst_regoff', 'ldstpair_off'], 'cpuhp_create': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'ldst_regoff', 'addsub_shift', 'log_shift', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'class_attr_store': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], '_raw_spin_lock_irqsave': ['system', 'ldst_pos', 'ldstexcl', 'addsub_imm', 'compbranch', 'log_shift', 'branch_reg'], 'timekeeping_max_deferment': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'testbranch', 'system', 'addsub_shift', 'condbranch', 'branch_reg', 'branch_imm'], 'siphash_1u64': ['ldstpair_off', 'movewide', 'log_shift', 'addsub_shift', 'extract', 'log_imm', 'branch_reg'], 'tlb_remove_table_smp_sync': ['branch_reg'], 'reboot_setup': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'log_shift', 'condbranch', 'ldst_regoff', 'addsub_ext', 'branch_reg'], 'pmd_clear_bad': ['ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'log_shift', 'pcreladdr', 'branch_imm', 'system', 'ldstpair_post', 'branch_reg'], 'irq_chip_mask_parent': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_reg', 'ldstpair_post'], 'idle_cpu': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'addsub_shift', 'ldst_pos', 'condbranch', 'movewide', 'branch_reg', 'compbranch', 'condsel'], 'its_build_vmapti_cmd': ['ldst_pos', 'movewide', 'compbranch', 'bitfield', 'ldstpair_off', 'log_imm', 'log_shift', 'branch_reg'], 'class_compat_create_link': ['movewide', 'branch_reg'], '_raw_spin_lock_irq': ['system', 'ldst_pos', 'ldstexcl', 'addsub_imm', 'compbranch', 'log_shift', 'branch_reg'], 'memblock_phys_mem_size': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'simple_getattr': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'movewide', 'bitfield', 'ldstpair_post', 'branch_reg'], 'f__sg_page_iter_next': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'branch_imm', 'bitfield', 'ldstpair_post', 'branch_reg', 'movewide'], 'plist_del': ['ldst_pos', 'addsub_imm', 'addsub_shift', 'condbranch', 'ldst_unscaled', 'ldstpair_off', 'branch_reg', 'branch_imm'], 'simple_xattr_list_add': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'ldst_pos', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'xattr_getsecurity': ['movewide', 'branch_reg'], 'prandom_bytes_state': ['ldstpair_pre', 'addsub_imm', 'log_shift', 'condbranch', 'log_imm', 'addsub_shift', 'branch_imm', 'ldst_immpost', 'compbranch', 'ldstpair_post', 'branch_reg', 'bitfield'], 'hook_debug_fault_code': ['addsub_imm', 'condbranch', 'exception', 'bitfield', 'movewide', 'pcreladdr', 'dp_3src', 'addsub_shift', 'ldst_regoff', 'ldstpair_off', 'ldst_pos', 'branch_reg'], '_fdt_packblocks': ['ldstpair_pre', 'bitfield', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'addsub_shift', 'dp_1src', 'branch_imm', 'movewide', 'addsub_ext', 'ldstpair_post', 'branch_reg'], 'current_umask': ['system', 'ldst_pos', 'branch_reg'], 'rcu_segcblist_extract_pend_cbs': ['ldst_pos', 'compbranch', 'ldstpair_off', 'branch_reg'], 'f__register_binfmt': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'pcreladdr', 'movewide', 'ldstexcl', 'ldstpair_post', 'branch_reg', 'branch_imm', 'exception'], 'generic_fillattr': ['ldst_pos', 'movewide', 'ldstpair_off', 'dp_2src', 'log_shift', 'condbranch', 'log_imm', 'testbranch', 'branch_reg'], 'ip6_addr_string_sa': ['ldstpair_pre', 'movewide', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_immpost', 'ldst_pos', 'ldst_immpre', 'ldst_regoff', 'log_imm', 'condbranch', 'addsub_ext', 'branch_reg'], 'atomic_notifier_call_chain': ['ldstpair_pre', 'addsub_imm', 'movewide', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'el2_error_invalid': ['branch_imm'], 'of_clk_hw_onecell_get': ['ldst_pos', 'addsub_shift', 'condbranch', 'addsub_ext', 'branch_reg', 'movewide'], 'attach_entity_load_avg': ['ldst_pos', 'movewide', 'addsub_shift', 'log_shift', 'dp_3src', 'bitfield', 'ldstpair_off', 'compbranch', 'log_imm', 'dp_2src', 'branch_reg'], 'f__clk_get_hw': ['compbranch', 'ldst_pos', 'branch_reg', 'movewide'], 'clock_was_set': ['branch_reg'], 'si_meminfo': ['pcreladdr', 'addsub_imm', 'movewide', 'ldst_pos', 'condsel', 'ldstpair_off', 'branch_reg'], 'shmem_get_unmapped_area': ['ldstpair_pre', 'system', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'f__raw_notifier_call_chain': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'mntget': ['compbranch', 'system', 'ldst_pos', 'addsub_shift', 'ldstexcl', 'addsub_imm', 'branch_reg'], 'f__ptrace_link': ['ldst_pos', 'addsub_imm', 'addsub_shift', 'condbranch', 'ldstexcl', 'compbranch', 'branch_reg', 'exception'], 'devm_clk_match': ['compbranch', 'ldst_pos', 'addsub_shift', 'condsel', 'branch_reg', 'movewide'], 'f__clk_get_enable_count': ['compbranch', 'ldst_pos', 'branch_reg', 'movewide'], 'f__put_unused_fd': ['addsub_imm', 'ldst_pos', 'condsel', 'addsub_shift', 'log_imm', 'movewide', 'bitfield', 'dp_2src', 'ldst_regoff', 'log_shift', 'condbranch', 'branch_reg'], 'wq_clamp_max_active.isra.4': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'movewide', 'testbranch', 'pcreladdr', 'branch_imm', 'bitfield', 'addsub_shift', 'condsel', 'ldstpair_post', 'branch_reg'], 'pgd_cache_init': ['branch_reg'], 'kernel_neon_end': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'condbranch', 'condsel', 'compbranch', 'system', 'ldst_regoff', 'branch_reg', 'bitfield', 'branch_imm'], 'switched_to_stop': ['exception'], 'f__mod_node_page_state': ['ldst_pos', 'log_shift', 'system', 'addsub_imm', 'addsub_shift', 'ldst_regoff', 'condbranch', 'bitfield', 'branch_reg', 'ldstexcl', 'compbranch', 'pcreladdr', 'movewide'], 'bad_inode_atomic_open': ['movewide', 'branch_reg'], 'timespec64_add_safe': ['movewide', 'addsub_shift', 'condbranch', 'addsub_imm', 'log_shift', 'testbranch', 'condcmp_reg', 'condsel', 'branch_reg'], 'get_next_ino': ['pcreladdr', 'addsub_imm', 'system', 'ldst_regoff', 'log_imm', 'condbranch', 'condsel', 'branch_reg', 'ldst_pos', 'ldstexcl', 'compbranch'], 'bus_get_kset': ['ldst_pos', 'branch_reg'], 'rcu_gp_is_normal': ['pcreladdr', 'movewide', 'ldst_pos', 'compbranch', 'addsub_imm', 'condsel', 'branch_reg'], 'fs_names_setup': ['pcreladdr', 'ldst_pos', 'movewide', 'branch_reg'], 'devm_pages_match': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'arch_counter_get_cntvct_mem': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'addsub_shift', 'condbranch', 'log_shift', 'branch_reg'], 'of_fwnode_get': ['compbranch', 'addsub_imm', 'condbranch', 'pcreladdr', 'ldst_pos', 'addsub_shift', 'movewide', 'branch_reg', 'condsel'], 'retire_userns_sysctls': ['branch_reg'], 'set_normalized_timespec64': ['movewide', 'addsub_shift', 'condbranch', 'addsub_imm', 'testbranch', 'ldstpair_off', 'branch_reg'], 'sg_init_table': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'bitfield', 'movewide', 'branch_imm', 'ldst_regoff', 'log_imm', 'ldstpair_post', 'branch_reg'], 'vfs_llseek': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'testbranch', 'compbranch', 'branch_reg', 'ldstpair_post', 'pcreladdr'], 'devm_clk_match_1': ['compbranch', 'addsub_shift', 'condsel', 'branch_reg', 'movewide'], 'device_remove_file_self': ['movewide', 'branch_reg'], 'proc_dostring': ['movewide', 'branch_reg'], 'device_is_bound': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'branch_imm', 'condsel', 'ldstpair_post', 'branch_reg', 'movewide'], 'memory_open': ['ldst_pos', 'log_imm', 'addsub_imm', 'condbranch', 'pcreladdr', 'bitfield', 'addsub_shift', 'compbranch', 'log_shift', 'ldstpair_pre', 'branch_reg', 'ldstpair_post', 'movewide'], 'set_handle_irq': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'compbranch', 'branch_reg'], 'parameqn': ['compbranch', 'movewide', 'branch_imm', 'addsub_imm', 'condsel', 'addsub_shift', 'condbranch', 'ldst_regoff', 'branch_reg'], 'pipe_proc_fn': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'vma_interval_tree_iter_first': ['ldst_pos', 'compbranch', 'addsub_imm', 'addsub_shift', 'condbranch', 'ldstpair_pre', 'log_shift', 'branch_imm', 'ldstpair_post', 'branch_reg', 'movewide'], 'clk_composite_recalc_rate': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'f__mutex_init': ['addsub_imm', 'ldst_pos', 'branch_reg'], 'search_cmp_ftr_reg': ['ldst_pos', 'addsub_shift', 'branch_reg'], 'rcu_segcblist_accelerate': ['ldst_pos', 'compbranch', 'ldstpair_off', 'addsub_shift', 'condbranch', 'testbranch', 'movewide', 'branch_reg', 'branch_imm'], 'proc_dointvec_minmax': ['movewide', 'branch_reg'], 'iov_iter_single_seg_count': ['ldst_pos', 'testbranch', 'addsub_imm', 'condbranch', 'addsub_shift', 'condsel', 'branch_reg'], 'f__srcu_notifier_call_chain': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'rcu_exp_batches_completed': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'irq_nested_primary_handler': ['movewide', 'branch_reg'], 'refcount_dec_if_one': ['movewide', 'ldst_pos', 'ldstexcl', 'log_imm', 'compbranch', 'addsub_imm', 'condsel', 'branch_reg'], 'pm_generic_runtime_resume': ['movewide', 'branch_reg'], 'clocksource_suspend': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'addsub_shift', 'condbranch', 'log_shift', 'compbranch', 'branch_reg', 'ldstpair_post'], 'alarm_expires_remaining': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'branch_reg', 'ldstpair_post'], 'strncmp': ['compbranch', 'log_shift', 'log_imm', 'condbranch', 'addsub_imm', 'bitfield', 'ldst_immpost', 'addsub_shift', 'condsel', 'condcmp_imm', 'testbranch', 'movewide', 'dp_2src', 'branch_imm', 'condcmp_reg', 'branch_reg', 'ldst_regoff', 'dp_1src'], 'dirty_background_bytes_handler': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'condcmp_imm', 'condbranch', 'pcreladdr', 'ldstpair_post', 'branch_reg'], 'f__of_find_all_nodes.part.0': ['ldst_pos', 'compbranch', 'log_shift', 'branch_reg'], 'flush_icache_range': ['system', 'bitfield', 'movewide', 'dp_2src', 'addsub_imm', 'log_shift', 'addsub_shift', 'condbranch', 'log_imm', 'branch_reg'], 'rcu_sysrq_start': ['pcreladdr', 'ldst_pos', 'compbranch', 'movewide', 'branch_reg'], 'arch_send_call_function_single_ipi': ['bitfield', 'pcreladdr', 'ldstpair_pre', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'movewide', 'branch_reg', 'ldstpair_post'], 'skip_atoi': ['log_shift', 'movewide', 'ldst_pos', 'addsub_imm', 'addsub_shift', 'ldst_unscaled', 'condbranch', 'branch_reg'], 'sys_rt_sigreturn_wrapper': ['addsub_imm', 'branch_imm'], 'f__page_mapcount': ['log_shift', 'ldst_pos', 'addsub_imm', 'log_imm', 'condsel', 'testbranch', 'addsub_shift', 'branch_reg'], 'SyS_sched_get_priority_max': ['addsub_imm', 'condbranch', 'movewide', 'branch_reg', 'pcreladdr', 'ldst_regoff', 'addsub_ext'], 'fwnode_handle_put': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post'], 'gic_peek_irq.isra.0': ['addsub_imm', 'movewide', 'dp_2src', 'condbranch', 'pcreladdr', 'ldst_pos', 'bitfield', 'addsub_ext', 'addsub_shift', 'log_shift', 'condsel', 'branch_reg', 'system', 'ldst_regoff', 'branch_imm'], 'gic_peek_irq.isra.1': ['ldst_pos', 'bitfield', 'addsub_ext', 'addsub_shift', 'movewide', 'dp_2src', 'log_shift', 'condsel', 'branch_reg'], 'is_bad_inode': ['ldst_pos', 'pcreladdr', 'addsub_imm', 'addsub_shift', 'condsel', 'branch_reg'], 'setup_slab_nomerge': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'io_schedule_finish': ['system', 'ldst_pos', 'bitfield', 'branch_reg'], 'iov_iter_kvec': ['testbranch', 'ldst_pos', 'ldstpair_off', 'branch_reg', 'exception'], 'init_mmap_min_addr': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'round_jiffies_up_relative': ['pcreladdr', 'system', 'addsub_imm', 'movewide', 'ldst_regoff', 'ldst_pos', 'addsub_shift', 'addsub_ext', 'bitfield', 'dp_3src', 'condsel', 'branch_reg'], 'special_mapping_close': ['branch_reg'], 'irq_domain_alloc_irqs_hierarchy': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'aarch64_insn_gen_data1': ['addsub_imm', 'condbranch', 'compbranch', 'movewide', 'log_imm', 'log_shift', 'branch_reg', 'branch_imm'], 'iov_iter_bvec': ['testbranch', 'ldst_pos', 'ldstpair_off', 'branch_reg', 'exception'], 'bad_inode_permission': ['movewide', 'branch_reg'], 'anon_pipe_buf_steal': ['ldst_pos', 'movewide', 'addsub_imm', 'log_imm', 'condsel', 'addsub_shift', 'condbranch', 'branch_reg'], 'clk_hw_get_flags': ['ldst_pos', 'branch_reg'], 'seq_putc': ['ldst_pos', 'bitfield', 'addsub_shift', 'condbranch', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'get_close_on_exec': ['system', 'ldst_pos', 'addsub_imm', 'condsel', 'bitfield', 'ldst_regoff', 'dp_2src', 'log_imm', 'branch_reg'], 'dev_fwnode': ['ldst_pos', 'compbranch', 'addsub_imm', 'branch_reg'], 'pick_next_task_stop': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'compbranch', 'movewide', 'condbranch', 'log_shift', 'branch_reg', 'ldstpair_post', 'branch_imm'], 'arch_timer_shutdown_virt': ['system', 'log_imm', 'movewide', 'branch_reg'], 'update_curr_stop': ['branch_reg'], 'cmp_ex_sort': ['ldst_pos', 'movewide', 'addsub_shift', 'condsel', 'branch_reg'], 'fwnode_property_read_string': ['ldstpair_pre', 'movewide', 'addsub_imm', 'branch_imm', 'condsel', 'ldstpair_post', 'branch_reg'], 'cpudl_set_freecpu': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'percpu_ref_noop_confirm_switch': ['branch_reg'], 'cpu_subsys_match': ['movewide', 'branch_reg'], 'sys_vhangup': ['movewide', 'branch_reg'], 'boot_cpu_state_init': ['pcreladdr', 'system', 'addsub_imm', 'ldst_regoff', 'movewide', 'branch_reg'], 'invalid_mkclean_vma': ['ldst_pos', 'bitfield', 'log_imm', 'branch_reg'], 'fdt_bus_default_map': ['log_shift', 'movewide', 'addsub_shift', 'condbranch', 'ldst_regoff', 'addsub_imm', 'dp_1src', 'branch_imm', 'bitfield', 'addsub_ext', 'condsel', 'branch_reg'], 'no_blink': ['movewide', 'branch_reg'], 'proc_dointvec_ms_jiffies': ['movewide', 'branch_reg'], 'memblock_allow_resize': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'arch_early_irq_init': ['movewide', 'branch_reg'], 'umount_check': ['movewide', 'ldst_pos', 'branch_reg'], 'inc_node_state': ['ldst_pos', 'log_shift', 'addsub_imm', 'addsub_shift', 'system', 'ldst_regoff', 'bitfield', 'movewide', 'condbranch', 'log_imm', 'ldstexcl', 'compbranch', 'addsub_ext', 'pcreladdr', 'branch_reg'], 'f__radix_tree_lookup': ['movewide', 'ldst_pos', 'log_imm', 'addsub_imm', 'condbranch', 'dp_2src', 'addsub_shift', 'compbranch', 'log_shift', 'branch_reg', 'branch_imm'], 'rhashtable_walk_enter': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'ldst_pos', 'ldst_immpre', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'clk_composite_set_parent': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'set_task_cpu': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'addsub_shift', 'condbranch', 'compbranch', 'branch_reg', 'system', 'ldstpair_post'], 'clk_enable_unlock.part.7': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'log_shift', 'ldst_pos', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'init_user_reserve': ['pcreladdr', 'movewide', 'ldst_pos', 'addsub_imm', 'condsel', 'bitfield', 'addsub_shift', 'branch_reg'], 'f': ['compbranch', 'ldst_pos', 'addsub_imm', 'movewide', 'branch_reg'], 'empty_dir_getattr': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_imm', 'movewide', 'ldstpair_post', 'branch_reg'], 'switched_from_rt': ['ldst_pos', 'addsub_imm', 'condbranch', 'branch_reg', 'compbranch', 'pcreladdr', 'ldst_regoff', 'addsub_shift'], 'lazy_max_pages': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_imm', 'log_shift', 'movewide', 'compbranch', 'dp_1src', 'addsub_shift', 'bitfield', 'ldstpair_post', 'branch_reg'], 'setup_nr_cpu_ids': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'movewide', 'branch_imm', 'ldstpair_post', 'ldst_pos', 'branch_reg'], 'f__show_regs': ['ldst_pos', 'movewide', 'log_imm', 'addsub_imm', 'condsel', 'testbranch', 'log_shift', 'condbranch', 'branch_reg'], 'of_dma_deconfigure': ['branch_reg'], 'gcd': ['addsub_imm', 'log_shift', 'condcmp_reg', 'condbranch', 'dp_1src', 'dp_2src', 'addsub_shift', 'branch_reg'], 'f__srcu_read_unlock': ['system', 'ldst_pos', 'bitfield', 'addsub_imm', 'addsub_shift', 'ldstexcl', 'compbranch', 'branch_reg'], 'wq_worker_waking_up': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldst_pos', 'movewide', 'log_shift', 'condbranch', 'ldstexcl', 'compbranch', 'ldstpair_post', 'branch_reg'], 'tick_broadcast_init': ['pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'branch_reg'], 'alarmtimer_resume': ['movewide', 'branch_reg'], 'calibrate_delay_is_known': ['movewide', 'branch_reg'], 'clk_gpio_gate_is_enabled': ['movewide', 'branch_reg'], 'fwnode_property_get_reference_args': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'set_cpus_allowed_common': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'rcu_batches_completed': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'sd_degenerate': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'condbranch', 'movewide', 'addsub_shift', 'ldstpair_post', 'branch_reg', 'log_imm', 'condsel'], 'f__anon_vma_interval_tree_subtree_search': ['ldst_pos', 'addsub_imm', 'compbranch', 'addsub_shift', 'condbranch', 'log_shift', 'movewide', 'branch_reg'], 'strnchr': ['compbranch', 'ldst_pos', 'log_imm', 'addsub_shift', 'condbranch', 'branch_imm', 'addsub_imm', 'movewide', 'branch_reg'], 'task_will_free_mem': ['ldst_pos', 'compbranch', 'testbranch', 'addsub_imm', 'addsub_shift', 'condbranch', 'movewide', 'branch_reg', 'pcreladdr', 'log_shift', 'ldst_immpre', 'condcmp_reg', 'branch_imm'], 'arch_timer_set_next_event_phys': ['log_shift', 'system', 'log_imm', 'movewide', 'branch_reg'], 'f__clean_dcache_area_pou': ['system', 'bitfield', 'movewide', 'dp_2src', 'addsub_shift', 'addsub_imm', 'log_shift', 'condbranch', 'branch_reg'], 'arch_timer_get_rate': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'find_vmap_area': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'log_shift', 'branch_imm', 'compbranch', 'ldst_unscaled', 'addsub_shift', 'condbranch', 'movewide', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'put_prev_task_stop': ['ldst_pos', 'ldstpair_off', 'addsub_shift', 'condsel', 'branch_reg'], 'pm_qos_read_value': ['ldst_pos', 'branch_reg'], 'f__dummy_map_sg': ['movewide', 'branch_reg'], 'arch_probe_nr_irqs': ['movewide', 'branch_reg'], 'its_build_movi_cmd': ['ldst_pos', 'log_imm', 'ldst_regoff', 'addsub_shift', 'bitfield', 'log_shift', 'branch_reg'], 'f__bitmap_equal': ['bitfield', 'compbranch', 'ldst_pos', 'addsub_shift', 'condbranch', 'addsub_imm', 'movewide', 'branch_imm', 'ldst_immpost', 'log_imm', 'ldst_regoff', 'dp_2src', 'log_shift', 'condsel', 'branch_reg'], 'f__dummy_mapping_error': ['movewide', 'branch_reg'], 'timecounter_read': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_reg', 'ldstpair_off', 'addsub_shift', 'dp_3src', 'dp_2src', 'ldstpair_post'], 'arch_timer_handler_virt_mem': ['ldst_unscaled', 'addsub_imm', 'ldst_pos', 'testbranch', 'movewide', 'branch_reg', 'ldstpair_pre', 'log_shift', 'log_imm', 'ldstpair_post'], 'arch_cpu_idle_enter': ['branch_reg'], 'f__hyp_set_vectors': ['log_shift', 'movewide', 'exception', 'branch_reg'], 'iommu_is_span_boundary': ['compbranch', 'addsub_imm', 'log_shift', 'condbranch', 'addsub_ext', 'addsub_shift', 'condsel', 'branch_reg', 'exception'], 'prep_compound_page': ['addsub_imm', 'movewide', 'ldstpair_off', 'dp_2src', 'ldst_pos', 'log_imm', 'condbranch', 'log_shift', 'addsub_shift', 'ldst_unscaled', 'branch_reg'], 'ns_to_timespec64': ['compbranch', 'movewide', 'bitfield', 'dp_3src', 'addsub_shift', 'log_shift', 'testbranch', 'branch_reg', 'addsub_imm', 'branch_imm'], 'f__sw_hweight16': ['movewide', 'log_shift', 'addsub_shift', 'bitfield', 'branch_reg'], 'tick_is_broadcast_device': ['compbranch', 'pcreladdr', 'ldst_pos', 'addsub_shift', 'condsel', 'branch_reg', 'movewide'], 'gup_fast_permitted': ['bitfield', 'addsub_shift', 'condsel', 'branch_reg'], 'ntp_update_frequency': ['pcreladdr', 'addsub_imm', 'movewide', 'ldst_pos', 'ldstpair_off', 'addsub_shift', 'dp_3src', 'bitfield', 'branch_reg'], 'dirty_background_ratio_handler': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'condcmp_imm', 'condbranch', 'pcreladdr', 'ldstpair_post', 'branch_reg'], 'task_active_pid_ns': ['ldst_pos', 'compbranch', 'addsub_shift', 'branch_reg', 'movewide'], 'fdt_string': ['ldst_pos', 'dp_1src', 'addsub_ext', 'addsub_shift', 'branch_reg'], 'nsecs_to_jiffies64': ['movewide', 'dp_3src', 'bitfield', 'branch_reg'], 'mutex_trylock': ['ldst_pos', 'system', 'log_imm', 'log_shift', 'condbranch', 'addsub_shift', 'addsub_imm', 'condsel', 'branch_reg', 'testbranch', 'ldstexcl', 'compbranch', 'movewide'], 'f__mnt_is_readonly': ['ldst_pos', 'testbranch', 'log_imm', 'branch_reg', 'movewide'], 'kthread_data': ['ldst_pos', 'branch_reg'], 'single_next': ['ldst_pos', 'movewide', 'addsub_imm', 'branch_reg'], 'f__ctzsi2': ['bitfield', 'dp_1src', 'branch_reg'], 'arch_dynirq_lower_bound': ['branch_reg'], 'workingset_activation': ['pcreladdr', 'movewide', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'ldstexcl', 'compbranch', 'branch_reg'], 'poll_initwait': ['pcreladdr', 'movewide', 'addsub_imm', 'ldstpair_off', 'system', 'ldst_pos', 'branch_reg'], 'arch_vma_name': ['movewide', 'branch_reg'], 'proc_douintvec': ['movewide', 'branch_reg'], 'merge': ['ldstpair_pre', 'addsub_imm', 'condcmp_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'condbranch', 'branch_imm', 'branch_reg', 'condsel', 'ldstpair_post'], 'el2_setup': ['system', 'addsub_imm', 'condbranch', 'log_imm', 'movewide', 'branch_reg', 'log_shift', 'compbranch', 'bitfield', 'testbranch', 'condsel', 'branch_imm', 'pcreladdr'], 'sg_miter_stop': ['ldst_pos', 'compbranch', 'ldstpair_off', 'addsub_shift', 'testbranch', 'addsub_imm', 'log_imm', 'condsel', 'system', 'branch_reg'], 'arch_counter_get_cntpct': ['system', 'branch_reg'], 'vm_get_page_prot': ['pcreladdr', 'log_imm', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'resource_alignment': ['ldst_pos', 'log_imm', 'addsub_imm', 'condbranch', 'branch_reg', 'movewide', 'ldstpair_off', 'addsub_shift'], 'hrtimers_prepare_cpu': ['pcreladdr', 'addsub_imm', 'log_shift', 'ldst_regoff', 'addsub_shift', 'ldst_pos', 'ldstpair_off', 'condbranch', 'movewide', 'branch_reg'], 'fwnode_graph_get_remote_endpoint': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'its_irq_compose_msi_msg': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_reg', 'bitfield', 'addsub_shift', 'ldstpair_post'], 'pagevec_remove_exceptionals': ['ldst_pos', 'compbranch', 'movewide', 'addsub_ext', 'addsub_imm', 'testbranch', 'addsub_shift', 'condbranch', 'bitfield', 'branch_reg', 'branch_imm'], 'of_bus_isa_count_cells': ['compbranch', 'movewide', 'ldst_pos', 'branch_reg'], 'memscan': ['compbranch', 'ldst_pos', 'addsub_shift', 'condbranch', 'branch_imm', 'addsub_imm', 'log_shift', 'branch_reg'], 'f__next_reserved_mem_region': ['pcreladdr', 'ldst_pos', 'addsub_imm', 'addsub_shift', 'condbranch', 'bitfield', 'ldst_regoff', 'compbranch', 'branch_reg', 'movewide'], 'init_cpu_present': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'drop_nlink': ['ldst_pos', 'addsub_imm', 'compbranch', 'ldstexcl', 'branch_reg'], 'f__get_task_comm': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'klist_add_head': ['ldstpair_pre', 'movewide', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'log_shift', 'compbranch', 'branch_reg', 'branch_imm', 'ldstexcl', 'ldstpair_post'], 'cpu_stop_init_done': ['ldstpair_pre', 'log_shift', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'ldst_immpost', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'dump_mem_limit': ['movewide', 'branch_reg'], 'account_system_index_time': ['ldst_pos', 'pcreladdr', 'addsub_imm', 'addsub_shift', 'addsub_ext', 'system', 'ldst_regoff', 'branch_reg'], 'f__round_jiffies': ['addsub_shift', 'movewide', 'bitfield', 'dp_3src', 'addsub_imm', 'condbranch', 'pcreladdr', 'ldst_pos', 'condsel', 'branch_reg'], 'get_rr_interval_idle': ['movewide', 'branch_reg'], 'f__anon_vma_interval_tree_augment_rotate': ['addsub_imm', 'ldst_pos', 'ldst_unscaled', 'ldstpair_off', 'addsub_shift', 'compbranch', 'condsel', 'branch_reg'], 'rcu_cblist_init': ['ldstpair_off', 'branch_reg'], 'klist_node_attached': ['ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'sys_getgid': ['movewide', 'branch_reg'], 'sparse_decode_mem_map': ['log_imm', 'addsub_shift', 'branch_reg'], 'devm_kmalloc_release': ['branch_reg'], 'simple_transaction_set': ['addsub_imm', 'ldst_pos', 'condbranch', 'system', 'branch_reg', 'exception'], 'drain_zonestat': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'bitfield', 'compbranch', 'ldstexcl', 'addsub_shift', 'condbranch', 'branch_reg'], 'set_cpu_boot_mode_flag': ['pcreladdr', 'addsub_imm', 'condbranch', 'ldst_pos', 'system', 'branch_reg'], 'cpu_load_update_active': ['ldst_pos', 'addsub_imm', 'movewide', 'log_shift', 'addsub_shift', 'bitfield', 'condbranch', 'dp_3src', 'dp_2src', 'ldst_immpost', 'ldstpair_pre', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'put_dec_full8': ['movewide', 'dp_3src', 'pcreladdr', 'addsub_imm', 'log_shift', 'bitfield', 'ldst_regoff', 'ldst_pos', 'branch_reg'], 'bad_inode_set_acl': ['movewide', 'branch_reg'], 'test_and_change_bit': ['log_imm', 'log_shift', 'movewide', 'addsub_shift', 'ldst_pos', 'dp_2src', 'ldstexcl', 'compbranch', 'system', 'branch_reg'], 'generic_permission': ['ldst_pos', 'log_imm', 'log_shift', 'condbranch', 'movewide', 'branch_reg', 'ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'testbranch', 'branch_imm', 'ldstpair_post'], 'errseq_sample': ['log_shift', 'ldst_pos', 'compbranch', 'log_imm', 'addsub_shift', 'condbranch', 'ldstexcl', 'system', 'branch_reg'], 'proc_dointvec_userhz_jiffies': ['movewide', 'branch_reg'], 'irq_chip_ack_parent': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_reg', 'ldstpair_post'], 'irq_chip_unmask_parent': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_reg', 'ldstpair_post'], 'mod_zone_page_state': ['ldst_pos', 'log_shift', 'addsub_imm', 'addsub_shift', 'system', 'ldst_regoff', 'bitfield', 'movewide', 'condbranch', 'log_imm', 'ldstexcl', 'compbranch', 'addsub_ext', 'pcreladdr', 'branch_reg'], 'of_print_phandle_args': ['branch_reg'], 'preserve_boot_args': ['log_shift', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'system', 'movewide', 'branch_imm'], 'invalid_migration_vma': ['ldst_pos', 'testbranch', 'log_imm', 'addsub_imm', 'condsel', 'branch_reg', 'movewide'], 'iomem_map_sanity_check': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'pcreladdr', 'ldst_pos', 'ldstexcl', 'compbranch', 'log_imm', 'condbranch', 'addsub_shift', 'bitfield', 'branch_imm', 'testbranch', 'ldstpair_post', 'branch_reg', 'movewide'], 'of_dev_node_match': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'bad_inode_unlink': ['movewide', 'branch_reg'], 'rcu_early_boot_tests': ['branch_reg'], 'add_range': ['addsub_shift', 'condcmp_reg', 'condbranch', 'bitfield', 'addsub_imm', 'ldst_regoff', 'ldst_pos', 'log_shift', 'branch_reg'], 'update_fast_timekeeper': ['addsub_imm', 'system', 'ldst_pos', 'ldstpair_off', 'log_shift', 'ldst_immpost', 'branch_reg'], 'open_softirq': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'device_dma_supported': ['ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'dma_init_reserved_memory': ['ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'pcreladdr', 'compbranch', 'log_shift', 'branch_reg', 'ldstpair_post'], 'f__dummy_unmap_page': ['branch_reg'], 'drv_attr_store': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'log_shift', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'f__getparam_dl': ['addsub_imm', 'ldst_pos', 'branch_reg'], 'f__dummy_sync_single': ['branch_reg'], 'irq_chip_pm_get': ['movewide', 'branch_reg'], 'pud_clear_bad': ['ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'log_shift', 'pcreladdr', 'branch_imm', 'system', 'ldstpair_post', 'branch_reg'], 'alloc_rt_sched_group': ['movewide', 'branch_reg'], 'srcu_online_cpu': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'devm_irq_match': ['ldst_pos', 'movewide', 'addsub_shift', 'condbranch', 'branch_reg', 'condsel'], 'partition_irq_get_irqchip_state': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'system', 'ldst_regoff', 'ldst_pos', 'condsel', 'addsub_shift', 'bitfield', 'dp_2src', 'testbranch', 'compbranch', 'branch_reg', 'ldstpair_post', 'movewide', 'branch_imm'], 'of_get_flat_dt_root': ['movewide', 'branch_reg'], 'cap_ptrace_access_check': ['log_shift', 'movewide', 'ldst_pos', 'branch_reg'], 'bad_inode_mknod': ['movewide', 'branch_reg'], 'kobj_ns_type_registered': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'log_shift', 'branch_imm', 'movewide', 'condbranch', 'condsel', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'test_and_clear_bit': ['log_imm', 'log_shift', 'movewide', 'addsub_shift', 'ldst_pos', 'dp_2src', 'ldstexcl', 'compbranch', 'system', 'branch_reg'], 'gic_cpu_config': ['movewide', 'addsub_imm', 'ldst_pos', 'bitfield', 'addsub_shift', 'condbranch', 'compbranch', 'ldstpair_pre', 'branch_reg', 'ldstpair_post'], 'devm_kmalloc_match': ['addsub_shift', 'condsel', 'branch_reg'], 'nosmp': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldst_pos', 'branch_imm', 'movewide', 'ldstpair_post', 'branch_reg'], 'rcu_gp_is_expedited': ['pcreladdr', 'movewide', 'ldst_pos', 'compbranch', 'addsub_imm', 'condsel', 'branch_reg'], 'valid_user_regs': ['ldst_pos', 'testbranch', 'log_imm', 'movewide', 'log_shift', 'condbranch', 'branch_reg'], 'kernel_active_single_step': ['system', 'log_imm', 'branch_reg'], 'dummy_clock_read': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'attach_pid': ['log_shift', 'addsub_shift', 'bitfield', 'addsub_imm', 'ldst_pos', 'ldstexcl', 'compbranch', 'branch_reg'], 'ktime_get_real_seconds': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'task_prio': ['ldst_pos', 'addsub_imm', 'branch_reg'], 'do_set_cpus_allowed': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'ldst_regoff', 'addsub_shift', 'condbranch', 'branch_reg', 'ldstpair_post', 'movewide', 'branch_imm'], 'f__kfifo_dma_out_finish_r': ['ldstpair_off', 'addsub_imm', 'ldst_pos', 'log_shift', 'ldst_regoff', 'condbranch', 'addsub_shift', 'branch_reg'], 'psci_affinity_info': ['pcreladdr', 'ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'movewide', 'branch_reg', 'ldstpair_post'], 'read_persistent_clock64': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'ldstpair_off', 'ldstpair_post', 'branch_reg'], 'cap_task_setioprio': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'kobj_ns_drop': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'condbranch', 'ldst_pos', 'ldstexcl', 'ldstpair_post', 'branch_reg', 'compbranch'], 'percpu_counter_add_batch': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'system', 'ldst_regoff', 'addsub_shift', 'addsub_ext', 'condbranch', 'ldstexcl', 'compbranch', 'ldstpair_post', 'branch_reg', 'log_shift', 'branch_imm'], 'dump_cpu_hwcaps': ['movewide', 'branch_reg'], 'kmem_cache_init_late': ['branch_reg'], 'rcu_segcblist_init': ['ldstpair_off', 'ldst_pos', 'branch_reg'], 'anon_set_page_dirty': ['movewide', 'branch_reg'], 'prio_changed_stop': ['exception'], 'rcu_segcblist_merge': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'ldstpair_off', 'ldst_immpre', 'compbranch', 'addsub_shift', 'condbranch', 'branch_imm', 'ldst_immpost', 'ldstpair_post', 'branch_reg'], 'smp_send_reschedule': ['bitfield', 'pcreladdr', 'ldstpair_pre', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'movewide', 'branch_reg', 'ldstpair_post'], 'workingset_eviction': ['pcreladdr', 'movewide', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'ldstexcl', 'compbranch', 'system', 'dp_2src', 'log_shift', 'bitfield', 'log_imm', 'branch_reg'], 'f__kthread_init_worker': ['addsub_imm', 'ldstpair_off', 'ldst_pos', 'branch_reg'], 'can_nice': ['ldst_pos', 'movewide', 'branch_reg'], 'f__check_eq': ['bitfield', 'branch_reg'], 'swiotlb_print_info': ['branch_reg'], 'cpu_enable_trap_ctr_access': ['system', 'log_imm', 'movewide', 'branch_reg'], 'class_child_ns_type': ['ldst_pos', 'branch_reg'], 'is_vma_temporary_stack': ['ldst_pos', 'testbranch', 'log_imm', 'addsub_imm', 'condsel', 'branch_reg', 'movewide'], 'swap_setup': ['pcreladdr', 'addsub_imm', 'ldst_pos', 'condbranch', 'movewide', 'branch_reg'], 'cap_mmap_file': ['movewide', 'branch_reg'], 'node_dirty_ok': ['log_shift', 'addsub_imm', 'movewide', 'ldst_pos', 'compbranch', 'condsel', 'addsub_shift', 'condbranch', 'pcreladdr', 'system', 'bitfield', 'dp_3src', 'dp_2src', 'testbranch', 'branch_reg', 'branch_imm'], 'fwnode_property_read_int_array': ['compbranch', 'ldst_pos', 'ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_reg', 'condbranch', 'ldstpair_post', 'movewide', 'branch_imm'], 'wq_update_unbound_numa': ['branch_reg'], 'setup_elf_hwcaps': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'log_imm', 'compbranch', 'branch_reg', 'condbranch', 'branch_imm', 'ldstpair_post'], 'crc32_generic_shift': ['bitfield', 'compbranch', 'movewide', 'log_imm', 'addsub_imm', 'condsel', 'addsub_shift', 'log_shift', 'condbranch', 'testbranch', 'branch_imm', 'branch_reg'], 'simple_nosetlease': ['movewide', 'branch_reg'], 'clk_hw_set_rate_range': ['ldst_pos', 'branch_reg'], 'arm64_skip_faulting_instruction': ['log_shift', 'ldstpair_pre', 'system', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'ktime_get_raw_fast_ns': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'movewide', 'ldst_pos', 'log_imm', 'dp_3src', 'ldst_regoff', 'addsub_shift', 'log_shift', 'branch_reg', 'system', 'condbranch', 'dp_2src', 'ldstpair_post'], 'aarch64_insn_gen_hint': ['movewide', 'log_shift', 'branch_reg'], 'kthread_freezable_should_stop': ['compbranch', 'ldst_pos', 'system', 'bitfield', 'branch_reg'], 'cap_capget': ['log_shift', 'movewide', 'ldst_pos', 'branch_reg'], 'ktime_get_mono_fast_ns': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'movewide', 'ldst_pos', 'log_imm', 'dp_3src', 'ldst_regoff', 'addsub_shift', 'log_shift', 'branch_reg', 'system', 'condbranch', 'dp_2src', 'ldstpair_post'], 'f__finish_swait': ['system', 'ldst_pos', 'addsub_imm', 'addsub_shift', 'condbranch', 'ldstpair_off', 'branch_reg'], 'bitmap_from_u32array': ['log_shift', 'addsub_imm', 'bitfield', 'compbranch', 'addsub_shift', 'movewide', 'dp_2src', 'condbranch', 'ldst_regoff', 'condsel', 'branch_reg', 'branch_imm'], 'arch_timer_set_next_event_phys_mem': ['ldst_unscaled', 'addsub_imm', 'ldst_pos', 'log_imm', 'movewide', 'branch_reg'], 'fsstack_copy_inode_size': ['ldst_pos', 'branch_reg'], 'msi_domain_ops_set_desc': ['ldst_pos', 'branch_reg'], 'pid_task': ['compbranch', 'log_shift', 'addsub_shift', 'ldst_pos', 'bitfield', 'addsub_imm', 'branch_reg', 'movewide'], 'memblock_set_current_limit': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'bus_attr_store': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'log_shift', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'attribute_container_classdev_to_container': ['ldst_unscaled', 'branch_reg'], 'init_cfs_rq': ['log_imm', 'ldst_pos', 'ldstpair_off', 'branch_reg'], 'gfp_pfmemalloc_allowed': ['testbranch', 'movewide', 'system', 'ldst_pos', 'log_imm', 'condbranch', 'addsub_imm', 'condsel', 'log_shift', 'branch_reg'], 'irq_set_default_host': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'arch_cpu_idle_dead': ['branch_reg'], 'find_user': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'branch_imm', 'ldst_pos', 'compbranch', 'condbranch', 'ldstexcl', 'log_shift', 'ldstpair_post', 'branch_reg', 'movewide'], 'clk_hw_is_enabled': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'condsel', 'ldstpair_post'], 'dma_deconfigure': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'swiotlb_set_mem_attributes': ['branch_reg'], 'enqueue_task_stop': ['ldst_pos', 'addsub_imm', 'condbranch', 'compbranch', 'branch_reg'], 'f__insert_inode_hash': ['ldstpair_pre', 'movewide', 'pcreladdr', 'addsub_imm', 'ldstpair_off', 'ldst_pos', 'addsub_shift', 'log_shift', 'dp_3src', 'dp_2src', 'branch_imm', 'ldst_regoff', 'compbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'try_wait_for_completion': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'movewide', 'ldst_pos', 'compbranch', 'log_shift', 'ldstpair_post', 'branch_reg', 'branch_imm', 'condbranch'], 'gen_pool_size': ['ldst_immpre', 'movewide', 'addsub_shift', 'condbranch', 'ldstpair_off', 'ldst_pos', 'addsub_imm', 'log_shift', 'branch_reg'], 'prepare_to_wait_exclusive': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'bitfield', 'log_imm', 'branch_imm', 'ldst_immpre', 'addsub_shift', 'condbranch', 'system', 'ldstpair_post', 'branch_reg'], 'clockevents_handle_noop': ['branch_reg'], 'setup_kmalloc_cache_index_table': ['pcreladdr', 'movewide', 'addsub_imm', 'log_shift', 'bitfield', 'ldst_regoff', 'condbranch', 'ldst_pos', 'branch_reg'], 'clk_gpio_gate_enable': ['movewide', 'branch_reg'], 'sg_next': ['ldst_pos', 'testbranch', 'addsub_imm', 'log_imm', 'condsel', 'branch_reg', 'movewide'], 'f__pi___dma_flush_area': ['system', 'bitfield', 'movewide', 'dp_2src', 'addsub_shift', 'addsub_imm', 'log_shift', 'condbranch', 'branch_reg'], 'iterate_mounts': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_reg', 'compbranch', 'ldst_pos', 'addsub_shift', 'condbranch', 'branch_imm', 'ldstpair_post', 'movewide'], 'dmam_pool_match': ['ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'f__inc_node_state': ['ldst_pos', 'log_shift', 'system', 'addsub_imm', 'addsub_shift', 'ldst_regoff', 'bitfield', 'condbranch', 'branch_reg', 'ldstexcl', 'compbranch', 'pcreladdr'], 'ktime_get_seconds': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'io_schedule_prepare': ['system', 'ldst_pos', 'log_imm', 'bitfield', 'branch_reg'], 'sched_clock_init': ['pcreladdr', 'movewide', 'ldst_pos', 'branch_reg'], 'dev_attr_show': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'radix_tree_tag_set': ['log_shift', 'ldst_pos', 'log_imm', 'addsub_imm', 'condbranch', 'movewide', 'dp_2src', 'addsub_shift', 'bitfield', 'compbranch', 'testbranch', 'branch_reg', 'branch_imm', 'exception'], 'cpu_psci_cpu_boot': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'ldst_regoff', 'addsub_shift', 'branch_reg', 'ldstpair_post'], 'page_anon_vma': ['ldst_pos', 'addsub_imm', 'log_imm', 'condsel', 'branch_reg'], 'irq_chip_set_affinity_parent': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'bitfield', 'addsub_imm', 'branch_reg', 'ldstpair_post', 'movewide'], 'completion_done': ['ldst_pos', 'compbranch', 'movewide', 'branch_reg', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'branch_imm', 'ldstpair_post'], 'privileged_wrt_inode_uidgid': ['movewide', 'branch_reg'], 'calculate_normal_threshold': ['ldstpair_pre', 'pcreladdr', 'addsub_imm', 'ldst_pos', 'bitfield', 'branch_imm', 'log_shift', 'compbranch', 'dp_1src', 'movewide', 'addsub_shift', 'dp_3src', 'condsel', 'ldstpair_post', 'branch_reg'], 'next_online_pgdat': ['movewide', 'branch_reg'], 'c_next': ['ldst_pos', 'movewide', 'addsub_imm', 'branch_reg'], 'unregister_undef_hook': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'log_shift', 'branch_imm', 'movewide', 'ldst_pos', 'ldstpair_post', 'branch_reg'], 'inc_node_page_state': ['pcreladdr', 'log_shift', 'addsub_imm', 'ldst_pos', 'addsub_shift', 'system', 'ldst_regoff', 'bitfield', 'movewide', 'condbranch', 'log_imm', 'ldstexcl', 'compbranch', 'addsub_ext', 'branch_reg'], 'clk_nodrv_disable_unprepare': ['branch_reg'], 'f__kfifo_len_r': ['addsub_imm', 'ldst_pos', 'ldstpair_off', 'log_shift', 'ldst_regoff', 'condbranch', 'branch_reg'], '_fdt_blocks_misordered': ['ldst_pos', 'movewide', 'dp_1src', 'addsub_imm', 'condbranch', 'addsub_shift', 'condsel', 'log_shift', 'branch_reg'], 'rcu_batches_completed_sched': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'gic_eoi_irq': ['ldst_pos', 'addsub_imm', 'branch_reg'], 'next_zone': ['ldst_pos', 'addsub_imm', 'addsub_shift', 'condsel', 'branch_reg'], 'get_mm_exe_file': ['ldst_pos', 'compbranch', 'addsub_imm', 'ldstexcl', 'log_shift', 'system', 'addsub_shift', 'condbranch', 'branch_imm', 'movewide', 'branch_reg'], 'rmem_dma_device_release': ['compbranch', 'ldst_pos', 'branch_reg'], 'usemap_size': ['movewide', 'branch_reg'], 'bad_inode_rename2': ['movewide', 'branch_reg'], 'radix_tree_tag_get': ['log_shift', 'addsub_imm', 'movewide', 'ldst_pos', 'dp_2src', 'condbranch', 'log_imm', 'addsub_shift', 'bitfield', 'branch_imm', 'testbranch', 'branch_reg'], 'mark_oom_victim': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'movewide', 'ldst_pos', 'branch_imm', 'compbranch', 'ldstexcl', 'system', 'pcreladdr', 'ldstpair_post', 'branch_reg'], 'p4d_clear_bad': ['branch_reg'], 'memblock_mem_size': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_pos', 'dp_3src', 'addsub_shift', 'condbranch', 'ldstpair_off', 'bitfield', 'condsel', 'branch_imm', 'branch_reg'], 'percpu_alloc_setup': ['movewide', 'addsub_imm', 'condsel', 'branch_reg'], 'iort_pmsi_get_dev_id': ['movewide', 'branch_reg'], 'fpsimd_save_state': ['ldstpair_off', 'ldstpair_pre', 'system', 'ldst_pos', 'branch_reg'], 'rcu_sync_dtor': ['ldst_pos', 'compbranch', 'ldstpair_pre', 'addsub_imm', 'log_shift', 'branch_imm', 'condbranch', 'ldstexcl', 'system', 'ldstpair_post', 'branch_reg', 'pcreladdr', 'addsub_shift', 'exception', 'movewide'], 'generic_file_open': ['ldst_pos', 'testbranch', 'log_imm', 'movewide', 'addsub_shift', 'condsel', 'branch_reg'], 'arch_timer_evtstrm_available': ['pcreladdr', 'system', 'addsub_imm', 'ldst_regoff', 'condsel', 'bitfield', 'dp_2src', 'log_imm', 'branch_reg'], 'put_unused_fd': ['ldstpair_pre', 'system', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'anon_transport_dummy_function': ['movewide', 'branch_reg'], 'f__attach_mnt': ['ldst_pos', 'pcreladdr', 'addsub_imm', 'bitfield', 'addsub_shift', 'dp_2src', 'log_shift', 'ldst_regoff', 'ldstpair_off', 'ldstexcl', 'compbranch', 'branch_reg'], 'f__cpu_clear_user_page': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'ktime_get': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'ldst_pos', 'testbranch', 'system', 'log_shift', 'branch_reg', 'addsub_shift', 'condbranch', 'dp_3src', 'dp_2src', 'ldstpair_post', 'branch_imm'], 'cmp_range': ['ldst_pos', 'movewide', 'addsub_shift', 'condsel', 'branch_reg'], 'srcu_offline_cpu': ['pcreladdr', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'online_fair_sched_group': ['branch_reg'], 'exit_rcu': ['branch_reg'], 'grub_reclaim': ['addsub_imm', 'ldst_pos', 'movewide', 'ldstpair_off', 'dp_3src', 'addsub_shift', 'bitfield', 'condbranch', 'branch_reg'], 'set_bit': ['log_imm', 'log_shift', 'movewide', 'addsub_shift', 'ldst_pos', 'dp_2src', 'ldstexcl', 'compbranch', 'branch_reg'], 'can_vma_merge_before': ['ldst_pos', 'addsub_shift', 'condbranch', 'movewide', 'log_shift', 'branch_reg', 'compbranch', 'addsub_imm', 'condcmp_reg', 'ldst_immpre', 'condsel'], 'aarch64_insn_is_branch_imm': ['movewide', 'log_imm', 'addsub_shift', 'condbranch', 'log_shift', 'condsel', 'branch_reg'], 'unmask_threaded_irq': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'testbranch', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'set_dma_reserve': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'calibration_delay_done': ['branch_reg'], 'inode_add_bytes': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'ldst_pos', 'log_imm', 'addsub_shift', 'bitfield', 'condbranch', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'task_user_regset_view': ['pcreladdr', 'addsub_imm', 'branch_reg'], 'core_kernel_text': ['pcreladdr', 'addsub_imm', 'addsub_shift', 'condbranch', 'movewide', 'ldst_pos', 'log_shift', 'branch_reg', 'condsel'], 'arch_cpu_idle': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'system', 'ldstpair_post', 'branch_reg'], 'f__checkparam_dl': ['ldst_pos', 'movewide', 'compbranch', 'addsub_imm', 'condbranch', 'testbranch', 'addsub_shift', 'condcmp_imm', 'condsel', 'log_shift', 'branch_reg'], 'early_platform_cleanup': ['pcreladdr', 'addsub_imm', 'ldst_immpre', 'ldst_pos', 'addsub_shift', 'condbranch', 'log_shift', 'ldstpair_off', 'branch_imm', 'branch_reg'], 'f__check_vc': ['bitfield', 'log_imm', 'branch_reg'], 'f__sw_hweight32': ['bitfield', 'log_imm', 'addsub_shift', 'branch_reg'], 'mapping_tagged': ['ldstpair_pre', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'fget_raw': ['ldstpair_pre', 'movewide', 'addsub_imm', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'driver_probe_done': ['pcreladdr', 'movewide', 'addsub_imm', 'ldst_pos', 'condsel', 'branch_reg'], 'fortify_panic': ['exception'], 'prio_changed_idle': ['exception'], 'set_create_files_as': ['log_shift', 'ldst_pos', 'movewide', 'branch_reg'], 'swiotlb_nr_tbl': ['pcreladdr', 'ldst_pos', 'branch_reg'], 'strcpy': ['movewide', 'ldst_regoff', 'addsub_imm', 'compbranch', 'branch_reg'], 'console_init': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'pcreladdr', 'addsub_shift', 'condbranch', 'ldst_immpost', 'branch_reg', 'branch_imm', 'ldstpair_post'], 'fpsimd_flush_task_state': ['movewide', 'ldst_pos', 'branch_reg'], 'alloc_fair_sched_group': ['movewide', 'branch_reg'], 'to_ratio': ['addsub_imm', 'log_shift', 'condbranch', 'movewide', 'compbranch', 'bitfield', 'dp_2src', 'branch_reg'], 'get_rr_interval_stop': ['movewide', 'branch_reg'], 'swiotlb_size_or_default': ['pcreladdr', 'movewide', 'ldst_pos', 'bitfield', 'addsub_imm', 'condsel', 'branch_reg'], 'irq_domain_xlate_onecell': ['compbranch', 'ldst_pos', 'movewide', 'branch_reg'], 'device_remove_file': ['branch_reg'], 'esr_get_class_string': ['pcreladdr', 'bitfield', 'addsub_imm', 'ldst_regoff', 'branch_reg'], 'power_supply_match_device_node': ['ldst_pos', 'compbranch', 'addsub_shift', 'condsel', 'branch_reg', 'movewide'], 'msi_domain_deactivate': ['log_shift', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'SyS_personality': ['addsub_imm', 'system', 'ldst_pos', 'condbranch', 'log_shift', 'branch_reg'], '_raw_spin_trylock': ['ldst_pos', 'ldstexcl', 'log_shift', 'compbranch', 'addsub_imm', 'movewide', 'branch_reg'], 'psci_tos_resident_on': ['pcreladdr', 'ldst_pos', 'addsub_shift', 'condsel', 'branch_reg'], 'f__init_single_page.isra.16': ['movewide', 'ldstpair_off', 'bitfield', 'ldst_pos', 'addsub_imm', 'log_shift', 'branch_reg'], 'node_memmap_size_bytes': ['ldstpair_pre', 'log_shift', 'addsub_imm', 'ldst_pos', 'ldst_immpre', 'branch_imm', 'pcreladdr', 'movewide', 'ldstpair_off', 'log_imm', 'addsub_shift', 'bitfield', 'condbranch', 'compbranch', 'ldst_regoff', 'condsel', 'ldstpair_post', 'branch_reg'], 'f__srcu_read_lock': ['ldst_pos', 'log_shift', 'log_imm', 'bitfield', 'system', 'addsub_shift', 'ldstexcl', 'addsub_imm', 'compbranch', 'branch_reg'], 'siphash_2u64': ['ldstpair_off', 'movewide', 'log_shift', 'addsub_shift', 'extract', 'log_imm', 'branch_reg'], 'dma_pool_free': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'branch_imm', 'ldst_pos', 'addsub_shift', 'condbranch', 'ldstpair_post', 'branch_reg', 'compbranch'], 'of_phandle_iterator_args': ['ldst_pos', 'movewide', 'addsub_shift', 'condsel', 'addsub_imm', 'condbranch', 'dp_1src', 'ldst_regoff', 'log_shift', 'branch_reg'], 'its_build_vmapp_cmd': ['ldst_pos', 'pcreladdr', 'bitfield', 'compbranch', 'ldst_regoff', 'addsub_shift', 'movewide', 'log_imm', 'addsub_imm', 'log_shift', 'branch_reg', 'branch_imm'], 'f__lookup_mnt': ['pcreladdr', 'bitfield', 'addsub_imm', 'addsub_shift', 'ldst_pos', 'dp_2src', 'log_shift', 'ldst_regoff', 'compbranch', 'movewide', 'branch_reg', 'condbranch', 'branch_imm'], 'inode_sb_list_add': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'log_shift', 'branch_imm', 'ldstpair_off', 'ldstexcl', 'ldstpair_post', 'branch_reg'], 'arch_counter_read_cc': ['pcreladdr', 'ldstpair_pre', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post'], 'bus_sort_breadthfirst': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'branch_imm', 'ldst_immpost', 'addsub_shift', 'condbranch', 'branch_reg', 'ldstexcl', 'ldstpair_post'], 'gic_eoimode1_eoi_irq_1': ['ldst_pos', 'movewide', 'addsub_shift', 'condbranch', 'testbranch', 'log_imm', 'system', 'branch_reg'], 'mktime64': ['addsub_imm', 'condbranch', 'movewide', 'dp_3src', 'log_shift', 'bitfield', 'addsub_shift', 'branch_reg'], 'sys_clock_adjtime': ['movewide', 'branch_reg'], 'do_no_restart_syscall': ['movewide', 'branch_reg'], 'device_remove_bin_file': ['branch_reg'], 'bad_inode_tmpfile': ['movewide', 'branch_reg'], 'crc32_le': ['ldstpair_pre', 'log_imm', 'addsub_imm', 'ldstpair_off', 'condbranch', 'bitfield', 'compbranch', 'pcreladdr', 'log_shift', 'addsub_shift', 'movewide', 'ldst_pos', 'ldst_immpre', 'addsub_ext', 'ldst_regoff', 'ldstpair_post', 'branch_reg', 'branch_imm', 'ldst_immpost'], 'ksoftirqd_should_run': ['pcreladdr', 'system', 'addsub_imm', 'ldst_regoff', 'bitfield', 'branch_reg'], 'bin2hex': ['compbranch', 'pcreladdr', 'addsub_shift', 'log_shift', 'addsub_imm', 'ldst_immpost', 'log_imm', 'bitfield', 'ldst_regoff', 'ldst_unscaled', 'condbranch', 'branch_reg'], 'gic_unmask_irq': ['ldst_pos', 'movewide', 'bitfield', 'dp_2src', 'addsub_imm', 'addsub_shift', 'branch_reg'], 'f__mnt_want_write_file': ['ldstpair_pre', 'addsub_imm', 'ldst_pos', 'testbranch', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'cpu_psci_cpu_prepare': ['pcreladdr', 'movewide', 'ldst_pos', 'addsub_imm', 'condsel', 'branch_reg'], 'cpu_do_idle': ['system', 'branch_reg'], 'proc_doulongvec_ms_jiffies_minmax': ['movewide', 'branch_reg'], 'hrtimers_init': ['pcreladdr', 'addsub_imm', 'system', 'ldst_regoff', 'addsub_shift', 'ldst_pos', 'ldstpair_off', 'condbranch', 'branch_reg'], 'gic_eoimode1_mask_irq': ['ldst_pos', 'movewide', 'bitfield', 'dp_2src', 'addsub_imm', 'addsub_shift', 'testbranch', 'branch_reg'], 'lookup_resource': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'pcreladdr', 'ldst_pos', 'ldstexcl', 'compbranch', 'log_imm', 'condbranch', 'addsub_shift', 'branch_imm', 'ldstpair_post', 'branch_reg'], 'rcu_bh_qs': ['pcreladdr', 'addsub_imm', 'system', 'ldst_regoff', 'compbranch', 'branch_reg'], 'gen_pool_for_each_chunk': ['ldstpair_pre', 'addsub_imm', 'ldstpair_off', 'log_shift', 'ldst_pos', 'ldst_immpre', 'addsub_shift', 'condbranch', 'branch_reg', 'ldstpair_post'], 'f__sg_page_iter_start': ['ldst_pos', 'ldstpair_off', 'branch_reg'], 'bitmap_to_u32array': ['compbranch', 'log_shift', 'addsub_shift', 'addsub_imm', 'movewide', 'log_imm', 'bitfield', 'dp_2src', 'condbranch', 'ldst_regoff', 'condsel', 'ldst_immpost', 'branch_reg'], 'clk_core_get_boundaries': ['ldst_pos', 'compbranch', 'addsub_imm', 'condbranch', 'branch_imm', 'addsub_shift', 'condsel', 'branch_reg'], 'tick_broadcast': ['pcreladdr', 'ldstpair_pre', 'movewide', 'addsub_imm', 'ldst_pos', 'branch_reg', 'ldstpair_post']}

fnc_inst_dict = {'rcu_sync_exit': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'SUB_32_addsub_imm', 'STR_32_ldst_pos', 'CBNZ_32_compbranch', 'CBZ_32_compbranch', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'MSR_SI_system', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide', 'ADRP_only_pcreladdr', 'ADD_64_addsub_shift', 'BLR_64_branch_reg'], 'enqueue_timer': ['ADD_64_addsub_imm', 'ORR_32_log_shift', 'ADD_64_addsub_shift', 'LDR_64_ldst_regoff', 'STR_64_ldst_pos', 'CBZ_64_compbranch', 'SUBS_32S_addsub_imm', 'ADD_32_addsub_imm', 'CSEL_32_condsel', 'SUBS_32_addsub_shift', 'STR_64_ldst_regoff', 'AND_32_log_imm', 'SBFM_32M_bitfield', 'CSNEG_32_condsel', 'MOVZ_64_movewide', 'SBFM_64M_bitfield', 'LSLV_64_dp_2src', 'ORR_64_log_shift', 'LDR_32_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'vfs_setpos': ['TBNZ_only_testbranch', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'RET_64R_branch_reg', 'LDR_32_ldst_pos', 'MOVN_64_movewide'], 'devm_action_release': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDP_64_ldstpair_off', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'platform_get_resource': ['LDR_32_ldst_pos', 'CBZ_32_compbranch', 'ORR_32_log_shift', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'B_only_branch_imm', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SBFM_64M_bitfield', 'ADD_32_addsub_imm', 'ADD_64_addsub_shift', 'AND_64_log_imm', 'SUBS_64_addsub_shift', 'SUB_32_addsub_imm', 'MOVZ_64_movewide', 'RET_64R_branch_reg'], 'f__internal_add_timer': ['ORR_64_log_shift', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'ORR_32_log_shift', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_timer_handler_phys': ['MRS_RS_system', 'TBNZ_only_testbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ORR_32_log_imm', 'ADD_64_addsub_imm', 'MSR_SR_system', 'ISB_BI_system', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post'], 'bad_inode_setattr': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'pick_next_task_idle': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'clk_enable_lock': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'MRS_RS_system', 'MSR_SI_system', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'MSR_SR_system', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm'], 'boot_cpu_init': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'MRS_RS_system', 'LDR_32_ldst_regoff', 'ORR_64_log_shift', 'ORR_32_log_shift', 'BL_only_branch_imm', 'STR_32_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], '_raw_spin_unlock_irqrestore': ['LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'MSR_SR_system', 'RET_64R_branch_reg'], 'f__rmem_cmp': ['LDR_64_ldst_pos', 'MOVN_32_movewide', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'write_null': ['ORR_64_log_shift', 'RET_64R_branch_reg'], 'get_seconds': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'bus_uevent_filter': ['LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'do_nothing': ['RET_64R_branch_reg'], 'pagecache_write_end': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__check_ge': ['EOR_64_log_shift', 'UBFM_64M_bitfield', 'EOR_64_log_imm', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'topology_set_cpu_scale': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'STR_64_ldst_regoff', 'RET_64R_branch_reg'], 'f__check_gt': ['EOR_64_log_shift', 'ORR_64_log_shift', 'UBFM_64M_bitfield', 'EOR_64_log_imm', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'f__check_sticky': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'arch_timer_shutdown_virt_mem': ['LDUR_64_ldst_unscaled', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'AND_64_log_imm', 'STR_32_ldst_pos', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'lockref_mark_dead': ['DMB_BO_system', 'LDR_32_ldst_pos', 'UBFM_32M_bitfield', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'MOVN_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'refcount_sub_and_test': ['LDR_32_ldst_pos', 'ADDS_32S_addsub_imm', 'B_only_condbranch', 'SUB_32_addsub_shift', 'SUBS_32_addsub_shift', 'ORR_32_log_shift', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STLXR_SR32_ldstexcl', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'ORR_64_log_shift', 'B_only_branch_imm', 'MOVZ_32_movewide'], 'f__dummy_sync_sg': ['RET_64R_branch_reg'], 'class_attr_show': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_64_movewide'], 'mminit_validate_memmodel_limits': ['LDR_64_ldst_pos', 'MOVZ_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'clk_mux_get_parent': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'DSB_BO_system', 'LDRB_32_ldst_pos', 'LSRV_32_dp_2src', 'AND_32_log_shift', 'CBZ_64_compbranch', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'SUBS_32_addsub_shift', 'MOVZ_32_movewide', 'B_only_branch_imm', 'LDR_32_ldst_immpost', 'ADD_32_addsub_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'UBFM_32M_bitfield', 'CBZ_32_compbranch', 'TBNZ_only_testbranch', 'AND_32_log_imm', 'SUB_32_addsub_shift', 'CSEL_32_condsel', 'RBIT_32_dp_1src', 'CLZ_32_dp_1src', 'CBNZ_32_compbranch'], 'inode_owner_or_capable': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'proc_douintvec_minmax': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'umount_one': ['LDR_32_ldst_pos', 'ADD_64_addsub_imm', 'LDP_64_ldstpair_off', 'AND_32_log_imm', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'find_inode_nowait': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'MADD_64A_dp_3src', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'EOR_64_log_shift', 'LDP_32_ldstpair_off', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_regoff', 'CBZ_64_compbranch', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'SUBS_64_addsub_shift', 'CBNZ_64_compbranch', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'BLR_64_branch_reg', 'CBZ_32_compbranch', 'SUBS_32S_addsub_imm', 'B_only_branch_imm'], 'vfs_statfs': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'LDR_32_ldst_pos', 'UBFM_64M_bitfield', 'ANDS_64S_log_imm', 'ORR_32_log_imm', 'CSEL_32_condsel', 'UBFM_32M_bitfield', 'ORR_32_log_shift', 'SBFM_64M_bitfield', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__wake_up_common': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'B_only_branch_imm', 'BLR_64_branch_reg', 'SUBS_32S_addsub_imm', 'TBZ_only_testbranch', 'ADD_32_addsub_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDR_64_ldst_immpre', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'STR_32_ldst_pos', 'STR_32_ldst_immpost'], 'pm_qos_request': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__bitmap_andnot': ['UBFM_32M_bitfield', 'CBZ_32_compbranch', 'MOVZ_64_movewide', 'LDR_64_ldst_regoff', 'BIC_64_log_shift', 'STR_64_ldst_regoff', 'ADD_64_addsub_imm', 'SUBS_32_addsub_shift', 'ORR_64_log_shift', 'B_only_condbranch', 'ANDS_64S_log_imm', 'SUB_32_addsub_shift', 'MOVN_64_movewide', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'its_irq_get_msi_base': ['LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'no_blkdev_open': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'clk_factor_set_rate': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'finish_wait': ['STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'clear_zone_contiguous': ['STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'create_debug_debugfs_entry': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'swiotlb_update_mem_attributes': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'LDRB_32_ldst_pos', 'CBNZ_32_compbranch', 'LDR_32_ldst_pos', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'SUB_64_addsub_shift', 'AND_64_log_imm', 'ORR_64_log_imm', 'ORR_64_log_shift', 'BL_only_branch_imm', 'MOVZ_32_movewide', 'MOVZ_64_movewide', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cap_task_setnice': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'vm_memory_committed': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'memblock_insert_region.isra.2': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'MOVZ_32_movewide', 'SMADDL_64WA_dp_3src', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'ADD_64_addsub_shift', 'B_only_condbranch', 'SBFM_64M_bitfield', 'ORR_64_log_shift', 'SUB_64_addsub_shift', 'UBFM_64M_bitfield', 'BL_only_branch_imm', 'STR_64_ldst_regoff', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'tick_get_device': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'pmd_set_huge': ['ANDS_64S_log_imm', 'B_only_condbranch', 'AND_64_log_imm', 'ORR_64_log_imm', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'DSB_BO_system', 'ISB_BI_system', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'is_valid_bugaddr': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'down_write_trylock': ['MOVZ_64_movewide', 'ORR_64_log_imm', 'PRFM_P_ldst_pos', 'LDAXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'MRS_RS_system', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'rootwait_setup': ['LDRB_32_ldst_pos', 'CBNZ_32_compbranch', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'transfer_pid': ['ORR_32_log_shift', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'STLR_SL64_ldstexcl', 'CBZ_64_compbranch', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'RET_64R_branch_reg'], 'bad_inode_getattr': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'arch_tlb_gather_mmu': ['ADD_64_addsub_imm', 'MOVZ_32_movewide', 'ORR_64_log_shift', 'STP_64_ldstpair_off', 'SUBS_64S_addsub_imm', 'LDRB_32_ldst_pos', 'CSINC_32_condsel', 'BFM_32M_bitfield', 'AND_32_log_imm', 'STP_32_ldstpair_off', 'STRB_32_ldst_pos', 'TBNZ_only_testbranch', 'MOVZ_64_movewide', 'RET_64R_branch_reg', 'MOVN_64_movewide'], 'prepare_to_wait': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'SBFM_64M_bitfield', 'LDR_32_ldst_pos', 'AND_32_log_imm', 'STR_32_ldst_pos', 'BL_only_branch_imm', 'LDR_64_ldst_immpre', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MRS_RS_system', 'DMB_BO_system', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'irq_domain_reset_irq_data': ['ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'adjust_managed_page_count': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__match_devt': ['LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'gic_get_kvm_info': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'bad_inode_update_time': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'has_mismatched_cache_line_size': ['MRS_RS_system', 'ADRP_only_pcreladdr', 'AND_64_log_imm', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'EOR_64_log_shift', 'ANDS_64_log_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'el1_irq': ['STP_64_ldstpair_off', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'MOVZ_64_movewide', 'MSR_SI_system', 'ADRP_only_pcreladdr', 'EOR_64_log_shift', 'AND_64_log_imm', 'CBNZ_64_compbranch', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'MSR_SR_system', 'ERET_64E_branch_reg'], 'page_move_anon_rmap': ['LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'ANDS_64S_log_imm', 'ADD_64_addsub_imm', 'CSEL_64_condsel', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'down_trylock': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'STR_32_ldst_pos', 'UBFM_32M_bitfield', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'do_trace_rcu_torture_read': ['RET_64R_branch_reg'], 'write_full': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'switched_to_idle': ['UNALLOCATED_18_exception'], 'override_creds': ['MRS_RS_system', 'LDR_64_ldst_pos', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'ADD_64_addsub_imm', 'STLR_SL64_ldstexcl', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'f__pi_memchr': ['AND_32_log_imm', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'LDRB_32_ldst_immpost', 'SUBS_32_addsub_shift', 'SUB_64_addsub_imm', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'random_poll': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'CBZ_64_compbranch', 'LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'SBFM_32M_bitfield', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'CSEL_32_condsel', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'its_read_baser': ['ADD_64_addsub_imm', 'ORR_64_log_imm', 'SUB_64_addsub_shift', 'LDR_64_ldst_pos', 'MOVK_64_movewide', 'SBFM_64M_bitfield', 'MADD_64A_dp_3src', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'nonseekable_open': ['LDR_32_ldst_pos', 'MOVZ_32_movewide', 'AND_32_log_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'oops_may_print': ['ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'console_suspend_disable': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'memblock_reserved_size': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'jiffies_to_timeval': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'MADD_64A_dp_3src', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'MSUB_64A_dp_3src', 'UMADDL_64WA_dp_3src', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'f__dec_zone_state': ['LDR_64_ldst_pos', 'ORR_32_log_shift', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDRB_32BL_ldst_regoff', 'SUB_32_addsub_imm', 'SBFM_32M_bitfield', 'STRB_32BL_ldst_regoff', 'LDRSB_32BL_ldst_regoff', 'SUB_32_addsub_shift', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'SBFM_64M_bitfield', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'ADRP_only_pcreladdr'], 'rcu_exp_batches_completed_sched': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'first_online_pgdat': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'mnt_clone_write': ['LDR_32_ldst_pos', 'AND_32_log_imm', 'TBNZ_only_testbranch', 'LDR_64_ldst_pos', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'MOVN_32_movewide'], 'jiffy_sched_clock_read': ['ADRP_only_pcreladdr', 'MOVN_64_movewide', 'MOVK_64_movewide', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'cd_forget': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'el2_fiq_invalid': ['B_only_branch_imm'], 'set_smp_cross_call': ['ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'panic_smp_self_stop': ['YIELD_HI_system', 'B_only_branch_imm'], 'of_get_next_child': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'CBZ_64_compbranch', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm', 'MOVZ_64_movewide'], 'check_preempt_curr_stop': ['RET_64R_branch_reg'], 'class_dir_child_ns_type': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'bad_inode_listxattr': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'fwnode_get_named_child_node': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'mount_root': ['RET_64R_branch_reg'], 'ptep_clear_flush': ['ORR_64_log_shift', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'MOVK_64_movewide', 'ANDS_64_log_shift', 'CSINC_32_condsel', 'UBFM_64M_bitfield', 'DSB_BO_system', 'SYS_CR_system', 'RET_64R_branch_reg', 'AND_64_log_shift', 'SUBS_64S_addsub_imm', 'B_only_branch_imm'], 'device_remove_groups': ['RET_64R_branch_reg'], 'free_fair_sched_group': ['RET_64R_branch_reg'], 'update_max_interval': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'MADD_32A_dp_3src', 'LDP_64_ldstpair_post', 'UMADDL_64WA_dp_3src', 'UBFM_64M_bitfield', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__section_nr': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'B_only_branch_imm', 'UBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'CBZ_64_compbranch', 'B_only_condbranch', 'SUBS_64S_addsub_imm', 'CBNZ_64_compbranch', 'SUB_64_addsub_shift', 'MOVZ_32_movewide', 'SBFM_64M_bitfield', 'ADD_32_addsub_shift', 'RET_64R_branch_reg', 'UBFM_32M_bitfield'], 'calculate_pressure_threshold': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'SUB_32_addsub_shift', 'BL_only_branch_imm', 'UDIV_32_dp_2src', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'SUBS_32_addsub_shift', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'inode_init_always': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'MOVZ_32_movewide', 'LDRB_32_ldst_pos', 'STRH_32_ldst_pos', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_32_ldstpair_off', 'BL_only_branch_imm', 'MOVK_32_movewide', 'MRS_RS_system', 'ADD_64_addsub_shift', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rcu_segcblist_first_cb': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'f__bitmap_weight': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'UBFM_32M_bitfield', 'ORR_64_log_shift', 'CBZ_32_compbranch', 'MOVZ_64_movewide', 'MOVZ_32_movewide', 'LDR_64_ldst_regoff', 'BL_only_branch_imm', 'ADD_32_addsub_shift', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ANDS_64S_log_imm', 'SUB_32_addsub_shift', 'MOVN_64_movewide', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDR_64_ldst_pos', 'B_only_branch_imm'], 'SEQ_printf.constprop.7': ['SUB_64_addsub_imm', 'MOVN_32_movewide', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'STP_32_ldstpair_off', 'RET_64R_branch_reg'], 'clk_composite_is_enabled': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'strcspn': ['LDRB_32_ldst_pos', 'ORR_64_log_shift', 'CBZ_32_compbranch', 'MOVZ_64_movewide', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'B_only_branch_imm', 'LDRB_32_ldst_immpre', 'CBNZ_32_compbranch', 'ADD_64_addsub_imm', 'LDRB_32BL_ldst_regoff', 'RET_64R_branch_reg'], 'irq_wait_for_poll': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'MRS_RS_system', 'LDR_32_ldst_pos', 'LDR_32_ldst_regoff', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ORR_64_log_shift', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDR_64_ldst_pos', 'TBZ_only_testbranch', 'YIELD_HI_system', 'TBNZ_only_testbranch', 'BL_only_branch_imm', 'MOVZ_32_movewide', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__vma_link_list': ['STR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_64_ldst_pos', 'RET_64R_branch_reg', 'SUB_64_addsub_imm', 'B_only_branch_imm'], 'bad_inode_rmdir': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'unuse_mm': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'MRS_RS_system', 'BL_only_branch_imm', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'swiotlb_set_max_segment': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'AND_64_log_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'smp_setup_processor_id': ['MRS_RS_system', 'ADRP_only_pcreladdr', 'ORR_64_log_imm', 'MOVK_64_movewide', 'AND_64_log_shift', 'MOVZ_64_movewide', 'STR_64_ldst_pos', 'MSR_SR_system', 'RET_64R_branch_reg'], 'mincore_hugetlb': ['UNALLOCATED_18_exception'], 'f__bitmap_or': ['ORR_32_log_shift', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'UBFM_64M_bitfield', 'CBZ_64_compbranch', 'LDR_64_ldst_regoff', 'ORR_64_log_shift', 'STR_64_ldst_regoff', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'vdso_mremap': ['LDP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MRS_RS_system', 'LDR_64_ldst_pos', 'MOVZ_32_movewide', 'STR_64_ldst_pos', 'RET_64R_branch_reg', 'MOVN_32_movewide'], 'platform_msi_set_desc': ['STR_64_ldst_pos', 'LDR_64_ldst_pos', 'LDRH_32_ldst_pos', 'LDR_32_ldst_pos', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'update_curr_idle': ['RET_64R_branch_reg'], 'f__bitmap_intersects': ['UBFM_32M_bitfield', 'CBZ_32_compbranch', 'LDR_64_ldst_pos', 'ANDS_64_log_shift', 'B_only_condbranch', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'B_only_branch_imm', 'LDR_64_ldst_immpost', 'ADD_32_addsub_imm', 'SUBS_32_addsub_shift', 'ANDS_64S_log_imm', 'SUB_32_addsub_shift', 'LDR_64_ldst_regoff', 'MOVN_64_movewide', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'CSINC_32_condsel', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'clk_gpio_mux_set_parent': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'generic_pipe_buf_get': ['LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'strncpy': ['ADD_64_addsub_shift', 'ORR_64_log_shift', 'CBZ_64_compbranch', 'LDRB_32_ldst_pos', 'STRB_32_ldst_immpost', 'SUBS_32S_addsub_imm', 'CSINC_64_condsel', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'f__check_pl': ['UBFM_64M_bitfield', 'EOR_64_log_imm', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'f__kfifo_skip_r': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_timer_get_kvm_info': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'its_build_vmovi_cmd': ['LDRB_32_ldst_pos', 'MOVZ_64_movewide', 'CBZ_32_compbranch', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'UBFM_64M_bitfield', 'LDP_64_ldstpair_off', 'AND_64_log_imm', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'ORR_64_log_imm', 'LDRH_32_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'aarch64_insn_extract_system_reg': ['UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'radix_tree_iter_resume': ['LDR_64_ldst_pos', 'MOVZ_64_movewide', 'STR_64_ldst_pos', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'user_disable_single_step': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_ioremap_pmd_supported': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'memcmp': ['CBZ_64_compbranch', 'EOR_64_log_shift', 'ANDS_64S_log_imm', 'B_only_condbranch', 'SUB_64_addsub_imm', 'UBFM_64M_bitfield', 'LDR_64_ldst_immpost', 'SUBS_64S_addsub_imm', 'CSINV_64_condsel', 'TBZ_only_testbranch', 'MOVN_64_movewide', 'LSLV_64_dp_2src', 'BIC_64_log_shift', 'ORR_64_log_shift', 'B_only_branch_imm', 'AND_64_log_imm', 'ADD_64_addsub_shift', 'SUB_64_addsub_shift', 'LSRV_64_dp_2src', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'LDRB_32_ldst_immpost', 'CCMP_32_condcmp_reg', 'CBNZ_64_compbranch', 'SUBS_32_addsub_shift', 'RET_64R_branch_reg', 'LDR_64_ldst_regoff', 'REV_64_dp_1src', 'CLZ_64_dp_1src', 'MOVZ_64_movewide'], 'f__hsiphash_aligned': ['AND_64_log_imm', 'MOVZ_64_movewide', 'LDP_64_ldstpair_off', 'ADD_64_addsub_shift', 'MOVK_64_movewide', 'SUBS_64_addsub_shift', 'AND_32_log_imm', 'EOR_64_log_shift', 'UBFM_64M_bitfield', 'B_only_condbranch', 'ORR_64_log_shift', 'LDR_64_ldst_immpost', 'EXTR_64_extract', 'ADD_64_addsub_imm', 'SUB_64_addsub_shift', 'CBZ_32_compbranch', 'MOVN_64_movewide', 'UBFM_32M_bitfield', 'LSLV_64_dp_2src', 'LDR_64_ldst_pos', 'BIC_64_log_shift', 'EOR_64_log_imm', 'EOR_32_log_shift', 'RET_64R_branch_reg'], 'f__hrtimer_init': ['SUBS_32S_addsub_imm', 'STP_64_ldstpair_off', 'CCMP_32_condcmp_imm', 'CSINC_32_condsel', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'MRS_RS_system', 'ADD_64_addsub_shift', 'CBNZ_32_compbranch', 'B_only_condbranch', 'LDR_32_ldst_regoff', 'CSEL_32_condsel', 'SBFM_64M_bitfield', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'rcu_expedite_gp': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'mem_encrypt_init': ['RET_64R_branch_reg'], 'its_build_mapti_cmd': ['LDR_64_ldst_pos', 'MOVZ_64_movewide', 'LDP_64_ldstpair_off', 'LDR_32_ldst_pos', 'AND_64_log_imm', 'ORR_64_log_shift', 'LDRH_32_ldst_regoff', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'LDRH_32_ldst_pos', 'STRH_32_ldst_pos', 'RET_64R_branch_reg'], 'capable_wrt_inode_uidgid': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'copy_page': ['NOP_HI_system', 'LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'SUBS_64S_addsub_imm', 'STNP_64_ldstnapair_offs', 'B_only_condbranch', 'RET_64R_branch_reg'], 'arch_counter_get_cntvct': ['ISB_BI_system', 'MRS_RS_system', 'RET_64R_branch_reg'], 'invalid_page_referenced_vma': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'rcu_segcblist_insert_count': ['LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'empty_dir_lookup': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'psci_migrate_info_type': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'MOVK_64_movewide', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'flush_signal_handlers': ['LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'CBNZ_32_compbranch', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'SUBS_64_addsub_shift', 'RET_64R_branch_reg'], 'rcu_sync_init': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ORR_32_log_shift', 'BL_only_branch_imm', 'STR_32_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'gen_pool_avail': ['ORR_64_log_shift', 'MOVZ_64_movewide', 'LDR_64_ldst_immpre', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'skip_spaces': ['ADRP_only_pcreladdr', 'LDRB_32_ldst_pos', 'ADD_64_addsub_imm', 'LDRB_32B_ldst_regoff', 'TBZ_only_testbranch', 'LDRB_32_ldst_immpre', 'TBNZ_only_testbranch', 'RET_64R_branch_reg'], 'wait_bit_init': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'MOVZ_64_movewide', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'BL_only_branch_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_send_call_function_ipi_mask': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'smp_irq_stat_cpu': ['UBFM_64M_bitfield', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'MOVZ_64_movewide', 'LDR_32_ldst_immpost', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'f__bitmap_and': ['UBFM_32M_bitfield', 'CBZ_32_compbranch', 'MOVZ_64_movewide', 'LDR_64_ldst_regoff', 'AND_64_log_shift', 'STR_64_ldst_regoff', 'ADD_64_addsub_imm', 'SUBS_32_addsub_shift', 'ORR_64_log_shift', 'B_only_condbranch', 'ANDS_64S_log_imm', 'SUB_32_addsub_shift', 'MOVN_64_movewide', 'LSRV_64_dp_2src', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'shmem_unuse': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__gic_update_vlpi_properties': ['ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'UBFM_64M_bitfield', 'MOVZ_32_movewide', 'LDRB_32_ldst_pos', 'AND_32_log_shift', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'unregister_binfmt': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXR_SR32_ldstexcl', 'CBZ_32_compbranch', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'STR_64_ldst_pos', 'MOVK_64_movewide', 'MOVZ_32_movewide', 'STLRB_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'iter_div_u64_rem': ['ORR_32_log_shift', 'MOVZ_32_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'ADD_32_addsub_imm', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'disable_pid_allocation': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'AND_32_log_imm', 'STR_32_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'MSR_SI_system', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'fdt_bus_default_translate': ['STP_64_ldstpair_pre', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'MOVZ_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDR_32_ldst_regoff', 'REV_32_dp_1src', 'B_only_branch_imm', 'UBFM_32M_bitfield', 'MOVZ_32_movewide', 'SBFM_64M_bitfield', 'ADD_64_addsub_shift', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'UBFM_64M_bitfield', 'AND_32_log_imm', 'STUR_32_ldst_unscaled', 'LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'fwnode_get_parent': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'f__invoke_psci_fn_hvc': ['SUB_64_addsub_imm', 'MOVZ_64_movewide', 'STP_64_ldstpair_off', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'timeval_to_jiffies': ['LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_imm', 'RET_64R_branch_reg', 'UBFM_64M_bitfield', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'MADD_64A_dp_3src'], 'clockevents_suspend': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_imm', 'B_only_branch_imm', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'list_lru_count_one': ['STP_64_ldstpair_pre', 'SBFM_64M_bitfield', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'has_no_hw_prefetch': ['MRS_RS_system', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'AND_32_log_shift', 'SUBS_32_addsub_shift', 'CCMP_32_condcmp_reg', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'f__siphash_aligned': ['AND_64_log_imm', 'MOVZ_64_movewide', 'LDP_64_ldstpair_off', 'ADD_64_addsub_shift', 'MOVK_64_movewide', 'SUBS_64_addsub_shift', 'AND_32_log_imm', 'EOR_64_log_shift', 'UBFM_64M_bitfield', 'B_only_condbranch', 'ORR_64_log_shift', 'LDR_64_ldst_immpost', 'EXTR_64_extract', 'ADD_64_addsub_imm', 'SUB_64_addsub_shift', 'CBZ_32_compbranch', 'MOVN_64_movewide', 'UBFM_32M_bitfield', 'LSLV_64_dp_2src', 'LDR_64_ldst_pos', 'BIC_64_log_shift', 'EOR_64_log_imm', 'RET_64R_branch_reg'], 'sys_getegid': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'overcommit_kbytes_handler': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'CCMP_32_condcmp_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'clk_hw_get_name': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'test_taint': ['SUBS_32S_addsub_imm', 'ADD_32_addsub_imm', 'CSEL_32_condsel', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'SBFM_32M_bitfield', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'LSRV_64_dp_2src', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'f__pi___flush_dcache_area': ['MRS_RS_system', 'NOP_HI_system', 'UBFM_64M_bitfield', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'ADD_64_addsub_shift', 'SUB_64_addsub_imm', 'BIC_64_log_shift', 'SYS_CR_system', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'DSB_BO_system', 'RET_64R_branch_reg'], 'single_task_running': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], '_mix_pool_bytes': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STP_64_ldstpair_off', 'LDRH_32_ldst_pos', 'LDPSW_64_ldstpair_off', 'LDRSW_64_ldst_pos', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'SUB_32_addsub_imm', 'ADRP_only_pcreladdr', 'SBFM_64M_bitfield', 'ADD_64_addsub_shift', 'MOVZ_32_movewide', 'SUB_64_addsub_imm', 'AND_64_log_shift', 'LDRB_32_ldst_immpost', 'LDR_32_ldst_regoff', 'SUBS_64S_addsub_imm', 'SUB_32_addsub_shift', 'EOR_32_log_shift', 'RORV_32_dp_2src', 'CSEL_32_condsel', 'AND_64_log_imm', 'ADD_32_addsub_shift', 'AND_32_log_imm', 'SUBS_64_addsub_shift', 'STR_32_ldst_regoff', 'B_only_condbranch', 'STRH_32_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'hsiphash_3u32': ['ORR_32_log_shift', 'MOVZ_64_movewide', 'ORR_64_log_shift', 'MOVK_64_movewide', 'LDP_64_ldstpair_off', 'EOR_64_log_shift', 'ADD_64_addsub_shift', 'ORR_64_log_imm', 'EXTR_64_extract', 'EOR_64_log_imm', 'EOR_32_log_shift', 'RET_64R_branch_reg'], 'f__gic_populate_rdist': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDRSW_64_ldst_regoff', 'ORR_64_log_shift', 'LDR_64_ldst_regoff', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'AND_32_log_imm', 'ORR_32_log_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'SUB_64_addsub_shift', 'STR_64_ldst_regoff', 'ADD_64_addsub_shift', 'STR_64_ldst_pos'], 'of_get_flat_dt_size': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'REV_32_dp_1src', 'RET_64R_branch_reg'], 'cpu_psci_cpu_init': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'rb_replace_node': ['LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'STP_64_ldstpair_off', 'AND_64_log_imm', 'STR_64_ldst_pos', 'CBZ_64_compbranch', 'ORR_64_log_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'clk_factor_recalc_rate': ['LDP_32_ldstpair_off', 'MADD_64A_dp_3src', 'UDIV_64_dp_2src', 'RET_64R_branch_reg'], 'file_caps_disable': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'put_filesystem': ['RET_64R_branch_reg'], 'devm_memremap_match': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'set_curr_task_idle': ['RET_64R_branch_reg'], 'raw_notifier_call_chain': ['STP_64_ldstpair_pre', 'MOVZ_64_movewide', 'MOVN_32_movewide', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__iowrite32_copy': ['ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_imm', 'LDR_32_ldst_immpost', 'STR_32_ldst_pos', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'siphash_3u64': ['LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'EOR_64_log_shift', 'ADD_64_addsub_shift', 'EXTR_64_extract', 'EOR_64_log_imm', 'RET_64R_branch_reg'], 'reset_node_managed_pages': ['ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'cpudl_clear_freecpu': ['STP_64_ldstpair_pre', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'remove_wait_queue': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'STR_64_ldst_pos', 'MOVK_64_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'thread_stack_cache_init': ['RET_64R_branch_reg'], 'round_jiffies_up': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'LDR_32_ldst_regoff', 'MOVK_64_movewide', 'LDR_64_ldst_pos', 'ADD_32_addsub_shift', 'ADD_64_addsub_ext', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'f__do_once_start': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDRB_32_ldst_pos', 'CBNZ_32_compbranch', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'mangle_path': ['SUBS_64_addsub_shift', 'B_only_condbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'STR_64_ldst_pos', 'LDRB_32_ldst_pos', 'CBNZ_32_compbranch', 'B_only_branch_imm', 'STRB_32_ldst_pos', 'LDRB_32_ldst_immpost', 'CBZ_32_compbranch', 'ORR_32_log_shift', 'BL_only_branch_imm', 'UBFM_32M_bitfield', 'UBFM_64M_bitfield', 'AND_32_log_imm', 'ADD_32_addsub_imm', 'CBNZ_64_compbranch', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rcupdate_announce_bootup_oddness': ['RET_64R_branch_reg'], 'hrtimers_resume': ['RET_64R_branch_reg'], 'tasklet_init': ['STP_64_ldstpair_off', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'vprintk_func': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'get_user_arg_ptr': ['ADD_64_addsub_ext', 'MRS_RS_system', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'ADDS_64S_addsub_imm', 'CCMP_64_condcmp_reg', 'CSINC_64_condsel', 'CBZ_64_compbranch', 'MOVZ_32_movewide', 'MOVN_64_movewide', 'SUBS_32S_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'rcu_is_watching': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'unhandled_signal': ['ORR_64_log_shift', 'LDR_32_ldst_pos', 'SUB_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_64_ldst_pos', 'SBFM_64M_bitfield', 'MOVZ_32_movewide', 'ADD_64_addsub_shift', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'swiotlb_dma_mapping_error': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'runs_at_el2': ['MRS_RS_system', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'strcat': ['LDRB_32_ldst_pos', 'ORR_64_log_shift', 'CBZ_32_compbranch', 'LDRB_32_ldst_immpre', 'CBNZ_32_compbranch', 'MOVZ_64_movewide', 'LDRB_32BL_ldst_regoff', 'STRB_32BL_ldst_regoff', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'device_links_read_unlock': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'mm_compute_batch_init': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'SBFM_64M_bitfield', 'ORR_64_log_imm', 'MOVZ_32_movewide', 'UBFM_32M_bitfield', 'LDP_64_ldstpair_post', 'UDIV_64_dp_2src', 'UBFM_64M_bitfield', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'SUBS_32_addsub_shift', 'CSEL_32_condsel', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'klist_add_behind': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'AND_64_log_imm', 'STR_32_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'BL_only_branch_imm', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'set_curr_task_stop': ['LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__sw_hweight8': ['MOVZ_32_movewide', 'AND_32_log_shift', 'SUB_32_addsub_shift', 'ADD_32_addsub_shift', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'statfs_by_dentry': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'STP_64_ldstpair_off', 'BLR_64_branch_reg', 'CBNZ_32_compbranch', 'CBNZ_64_compbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide'], 'inode_nohighmem': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'finish_swait': ['STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'alarmtimer_suspend': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'arch_timer_starting_cpu': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'MRS_RS_system', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'LDRB_32_ldst_pos', 'STR_32_ldst_pos', 'CBZ_32_compbranch', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'LDR_32_ldst_regoff', 'ADD_64_addsub_ext', 'UBFM_64M_bitfield', 'SUB_64_addsub_shift', 'B_only_condbranch', 'UNALLOCATED_18_exception', 'LDRB_32B_ldst_regoff', 'ADR_only_pcreladdr', 'BR_64_branch_reg'], 'f__pi_strlen': ['ORR_64_log_imm', 'AND_64_log_imm', 'ANDS_64S_log_imm', 'B_only_condbranch', 'LDP_64_ldstpair_post', 'SUB_64_addsub_shift', 'BIC_64_log_shift', 'BICS_64_log_shift', 'CCMP_64_condcmp_imm', 'CBZ_64_compbranch', 'SUB_64_addsub_imm', 'ORR_64_log_shift', 'REV_64_dp_1src', 'CLZ_64_dp_1src', 'ADD_64_addsub_shift', 'RET_64R_branch_reg', 'SUBS_64S_addsub_imm', 'UBFM_64M_bitfield', 'MOVN_64_movewide', 'LSRV_64_dp_2src', 'CSINV_64_condsel', 'CSEL_64_condsel', 'B_only_branch_imm'], 'rcu_dynticks_snap': ['ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_shift', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'init_cpu_possible': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'files_maxfiles_init': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'SUB_64_addsub_imm', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'SUBS_64_addsub_shift', 'UDIV_64_dp_2src', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'clk_composite_set_rate': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'clear_inode': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'MSR_SI_system', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'TBZ_only_testbranch', 'TBNZ_only_testbranch', 'MOVZ_64_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'clk_composite_enable': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'lockref_get_or_lock': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'SUBS_32S_addsub_ext', 'B_only_condbranch', 'SBFM_64M_bitfield', 'SUBS_32S_addsub_imm', 'ORR_64_log_shift', 'ADD_32_addsub_imm', 'BFM_64M_bitfield', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'SUBS_64_addsub_shift', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'YIELD_HI_system', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'STR_32_ldst_pos', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'B_only_branch_imm'], 'proc_dointvec_jiffies': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'noop_llseek': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'put_prev_task_idle': ['RET_64R_branch_reg'], 'f__pi___dma_map_area': ['ADD_64_addsub_shift', 'MRS_RS_system', 'NOP_HI_system', 'UBFM_64M_bitfield', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'SUB_64_addsub_imm', 'ANDS_64_log_shift', 'BIC_64_log_shift', 'B_only_condbranch', 'SYS_CR_system', 'B_only_branch_imm', 'SUBS_64_addsub_shift', 'DSB_BO_system', 'RET_64R_branch_reg', 'SUBS_32S_addsub_imm'], 'read_persistent_clock': ['STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'irq_percpu_enable': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ORR_32_log_shift', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'sched_idle_set_state': ['RET_64R_branch_reg'], 'vm_commit_limit': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'LDRSW_64_ldst_pos', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'MADD_64A_dp_3src', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'RET_64R_branch_reg'], 'gic_check_gicv2': ['ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'AND_32_log_shift', 'SUB_32_addsub_imm', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'of_get_next_parent': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'CBZ_64_compbranch', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide', 'B_only_branch_imm'], 'prandom_u32': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_shift', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'our_mnt': ['MRS_RS_system', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'rcu_dynticks_curr_cpu_in_eqs': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'EOR_64_log_imm', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'devm_attr_group_remove': ['RET_64R_branch_reg'], 'partition_irq_mask': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDR_32_ldst_regoff', 'LDR_64_ldst_pos', 'SUBS_32S_addsub_imm', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'CSEL_32_condsel', 'SBFM_32M_bitfield', 'ADD_64_addsub_shift', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'LSRV_64_dp_2src', 'TBZ_only_testbranch', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'write_policy_show': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'MOVZ_64_movewide', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDUR_32_ldst_unscaled', 'STR_64_ldst_pos', 'STUR_32_ldst_unscaled', 'LDUR_64_ldst_unscaled', 'STUR_64_ldst_unscaled'], 'idle_thread_set_boot_cpu': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDRSW_64_ldst_regoff', 'LDR_64_ldst_regoff', 'STR_64_ldst_regoff', 'RET_64R_branch_reg'], 'f__request_resource': ['LDP_64_ldstpair_off', 'ORR_64_log_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'CBZ_64_compbranch', 'RET_64R_branch_reg', 'STR_64_ldst_pos', 'MOVZ_64_movewide', 'B_only_branch_imm'], 'f__get_cached_msi_msg': ['LDR_64_ldst_pos', 'STR_64_ldst_pos', 'LDR_32_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'fiemap_check_flags': ['LDR_32_ldst_pos', 'AND_32_log_imm', 'BICS_32_log_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STR_32_ldst_pos', 'MOVN_32_movewide'], 'f__check_al': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'update_min_vruntime': ['LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'SUB_64_addsub_shift', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'STR_64_ldst_pos', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'add_mm_counter_fast.part.6': ['SBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'el1_irq_invalid_1': ['B_only_branch_imm'], 'select_task_rq_idle': ['LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'add_wait_queue': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'LDR_32_ldst_pos', 'AND_32_log_imm', 'STR_32_ldst_immpost', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'init_entity_runnable_average': ['LDR_64_ldst_pos', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'rb_replace_node_cached': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'STR_64_ldst_pos'], 'init_currently_empty_zone': ['LDR_64_ldst_pos', 'ORR_64_log_imm', 'MOVK_64_movewide', 'ADD_64_addsub_imm', 'SUB_64_addsub_shift', 'SBFM_64M_bitfield', 'MADD_64A_dp_3src', 'ADD_32_addsub_imm', 'STR_32_ldst_pos', 'STR_64_ldst_pos', 'SUB_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'list_lru_count_node': ['LDR_64_ldst_pos', 'SBFM_64M_bitfield', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'memblock_start_of_DRAM': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__round_jiffies_up': ['ADD_32_addsub_shift', 'ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'ADD_64_addsub_ext', 'MOVK_64_movewide', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'psci_cpu_off': ['ADRP_only_pcreladdr', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'STP_64_ldstpair_pre', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'BLR_64_branch_reg', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_32_ldst_regoff', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'hsiphash_4u32': ['ORR_32_log_shift', 'MOVZ_64_movewide', 'ORR_64_log_shift', 'MOVK_64_movewide', 'LDP_64_ldstpair_off', 'EOR_64_log_shift', 'ADD_64_addsub_shift', 'EXTR_64_extract', 'EOR_64_log_imm', 'EOR_32_log_shift', 'RET_64R_branch_reg'], 'yield_task_stop': ['UNALLOCATED_18_exception'], 'clocks_calc_mult_shift': ['UMADDL_64WA_dp_3src', 'ORR_32_log_shift', 'MOVZ_32_movewide', 'UBFM_64M_bitfield', 'CBZ_64_compbranch', 'SUB_32_addsub_imm', 'CBNZ_64_compbranch', 'B_only_branch_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LSLV_64_dp_2src', 'ADD_64_addsub_shift', 'UDIV_64_dp_2src', 'LSRV_64_dp_2src', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'cap_task_setscheduler': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rcu_batches_started_sched': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'rcu_dynticks_eqs_exit': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ORR_64_log_shift', 'MRS_RS_system', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'TBZ_only_testbranch', 'AND_32_log_imm', 'STXR_SR32_ldstexcl', 'RET_64R_branch_reg'], 'kmem_cache_flags': ['ORR_32_log_shift', 'RET_64R_branch_reg'], 'prepare_to_swait': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'SBFM_64M_bitfield', 'BL_only_branch_imm', 'MRS_RS_system', 'STR_64_ldst_immpost', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'DMB_BO_system', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'cpuhp_should_run': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDRB_32_ldst_pos', 'RET_64R_branch_reg'], 'page_evictable': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'CBZ_64_compbranch', 'LDR_64_ldst_pos', 'MOVZ_32_movewide', 'TBNZ_only_testbranch', 'SUB_64_addsub_imm', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'UBFM_64M_bitfield', 'EOR_32_log_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'mod_node_page_state': ['LDR_64_ldst_pos', 'ORR_32_log_shift', 'SBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'MRS_RS_system', 'LDRB_32BL_ldst_regoff', 'UBFM_32M_bitfield', 'SBFM_32M_bitfield', 'SUB_64_addsub_shift', 'MOVZ_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'AND_64_log_imm', 'PRFM_P_ldst_pos', 'LDXRB_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXRB_SR32_ldstexcl', 'SUBS_64S_addsub_ext', 'CBZ_64_compbranch', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'ADRP_only_pcreladdr', 'RET_64R_branch_reg'], 'clear_os_lock': ['MSR_SR_system', 'ISB_BI_system', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'sys_epoll_wait': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'memzero_explicit': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'seq_list_next': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'el2_irq_invalid': ['B_only_branch_imm'], 'has_cpu_slab': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'clk_composite_round_rate': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'slab_is_available': ['ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'inode_needs_sync': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'TBNZ_only_testbranch', 'LDR_32_ldst_pos', 'LDRH_32_ldst_pos', 'AND_32_log_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'MOVZ_64_movewide', 'ANDS_64_log_shift', 'ANDS_32_log_shift', 'CSINC_32_condsel', 'B_only_branch_imm'], 'generic_delete_inode': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'of_clk_hw_simple_get': ['ORR_64_log_shift', 'RET_64R_branch_reg'], 'rcu_segcblist_advance': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUB_64_addsub_shift', 'TBNZ_only_testbranch', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg', 'SUBS_64_addsub_shift', 'B_only_condbranch'], 'bus_get_device_klist': ['LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'irq_domain_free_irqs_parent': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'fprop_local_init_single': ['ORR_64_log_shift', 'MOVZ_32_movewide', 'STRH_32_ldst_pos', 'STR_64_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'device_property_read_string_array': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'sysctl_max_threads': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'STR_32_ldst_pos', 'ORR_32_log_shift', 'LDP_64_ldstpair_off', 'LDR_32_ldst_pos', 'MOVN_32_movewide', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'CCMP_32_condcmp_reg', 'B_only_condbranch', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'CLZ_64_dp_1src', 'MOVZ_64_movewide', 'SUB_64_addsub_shift', 'ORR_64_log_imm', 'ADD_32_addsub_imm', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'UBFM_64M_bitfield', 'B_only_branch_imm'], 'klist_iter_init': ['STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'list_lru_del': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_off', 'STR_64_ldst_pos', 'SUB_64_addsub_imm', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'gic_set_kvm_info': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'get_max_files': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'arch_timer_set_next_event_virt': ['ORR_64_log_shift', 'MRS_RS_system', 'AND_64_log_imm', 'MSR_SR_system', 'ISB_BI_system', 'ORR_64_log_imm', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'lcm': ['SUBS_64S_addsub_imm', 'CCMP_64_condcmp_imm', 'B_only_condbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'UDIV_64_dp_2src', 'MADD_64A_dp_3src', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'gic_enable_quirks': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ORR_64_log_shift', 'B_only_branch_imm', 'LDR_64_ldst_immpre', 'LDP_32_ldstpair_off', 'AND_32_log_shift', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'BLR_64_branch_reg', 'CBNZ_64_compbranch', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'sg_miter_start': ['STR_64_ldst_pos', 'STP_64_ldstpair_off', 'STP_32_ldstpair_off', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'seq_hlist_start_rcu': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'CBNZ_64_compbranch', 'B_only_branch_imm', 'B_only_condbranch', 'SUBS_64S_addsub_imm', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'f__bitmap_complement': ['UBFM_32M_bitfield', 'CBZ_32_compbranch', 'MOVZ_64_movewide', 'LDR_64_ldst_regoff', 'ORN_64_log_shift', 'STR_64_ldst_regoff', 'ADD_64_addsub_imm', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ANDS_64S_log_imm', 'RET_64R_branch_reg'], 'f__setparam_dl': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'STR_32_ldst_pos', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'siphash_4u64': ['LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'EOR_64_log_shift', 'ADD_64_addsub_shift', 'EXTR_64_extract', 'EOR_64_log_imm', 'RET_64R_branch_reg'], 'clocksource_touch_watchdog': ['RET_64R_branch_reg'], 'cap_ptrace_traceme': ['ORR_64_log_shift', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], '_bin2bcd': ['MOVZ_32_movewide', 'MOVK_32_movewide', 'UMADDL_64WA_dp_3src', 'UBFM_64M_bitfield', 'UBFM_32M_bitfield', 'ADD_32_addsub_shift', 'SUB_32_addsub_shift', 'RET_64R_branch_reg'], 'pin_insert_group': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__inode_sub_bytes': ['LDR_64_ldst_pos', 'AND_64_log_imm', 'LDRH_32_ldst_pos', 'SUB_64_addsub_shift', 'SUBS_64S_addsub_ext', 'STR_64_ldst_pos', 'B_only_condbranch', 'ADD_32_addsub_imm', 'SUB_64_addsub_imm', 'UBFM_32M_bitfield', 'SUB_32_addsub_shift', 'STRH_32_ldst_pos', 'RET_64R_branch_reg'], 'mem_init_print_info': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__tick_broadcast_oneshot_control': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'MOVN_32_movewide', 'ANDS_64S_log_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'gic_dist_supports_lpis': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'alarmtimer_get_rtcdev': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'kobject_namespace': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'its_build_vinvall_cmd': ['MOVZ_64_movewide', 'STRB_32_ldst_pos', 'LDR_64_ldst_pos', 'LDRH_32_ldst_pos', 'STRH_32_ldst_pos', 'RET_64R_branch_reg'], 'f__pi___clean_dcache_area_pop': ['MRS_RS_system', 'NOP_HI_system', 'UBFM_64M_bitfield', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'ADD_64_addsub_shift', 'SUB_64_addsub_imm', 'BIC_64_log_shift', 'SYS_CR_system', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'DSB_BO_system', 'RET_64R_branch_reg'], 'its_build_vmovp_cmd': ['LDRSW_64_ldst_pos', 'MOVZ_64_movewide', 'LDP_64_ldstpair_off', 'MOVN_64_movewide', 'LDR_64_ldst_pos', 'MOVK_64_movewide', 'AND_64_log_imm', 'AND_64_log_shift', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'LDRH_32_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'always_delete_dentry': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__check_vs': ['UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'tsk_fork_get_node': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'of_clk_src_onecell_get': ['LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'LDR_64_ldst_regoff', 'RET_64R_branch_reg', 'MOVN_64_movewide'], 'srcu_bootup_announce': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__current_kernel_time': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'LDR_64_ldst_pos', 'LSRV_64_dp_2src', 'RET_64R_branch_reg'], 'swap_ex': ['LDP_32_ldstpair_off', 'SUB_64_addsub_shift', 'LDR_32_ldst_pos', 'ADD_32_addsub_shift', 'SUB_32_addsub_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'rcu_eqs_enter_common.isra.36': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'MRS_RS_system', 'SUBS_64_addsub_shift', 'SUB_64_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'STRB_32BL_ldst_regoff', 'STR_64_ldst_regoff', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'LDRB_32BL_ldst_regoff', 'EOR_32_log_imm', 'RET_64R_branch_reg'], 'klist_add_tail': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'BL_only_branch_imm', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'page_address_in_vma': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'TBNZ_only_testbranch', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVN_64_movewide', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'BL_only_branch_imm', 'SUBS_64S_addsub_imm', 'CCMP_64_condcmp_reg', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'B_only_branch_imm'], 'f__power_supply_find_supply_from_node': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'current_is_workqueue_rescuer': ['MRS_RS_system', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'MOVK_32_movewide', 'ANDS_32_log_shift', 'B_only_condbranch', 'TBNZ_only_testbranch', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'CBZ_64_compbranch', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'B_only_branch_imm'], 'rcu_segcblist_enqueue': ['ANDS_32S_log_imm', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'B_only_condbranch', 'DMB_BO_system', 'RET_64R_branch_reg'], 'clk_nodrv_set_rate': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'clk_composite_get_parent': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'psci_sys_reset': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'MOVK_64_movewide', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'pm_generic_runtime_suspend': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'wb_io_lists_populated.part.4': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'ADD_64_addsub_shift', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'pipe_to_null': ['LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'empty_dir_setattr': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'list_lru_isolate_move': ['LDP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'STP_64_ldstpair_off', 'SUB_64_addsub_imm', 'RET_64R_branch_reg'], 'aarch64_get_insn_class': ['ADRP_only_pcreladdr', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'LDR_32_ldst_regoff', 'RET_64R_branch_reg'], 'f__pick_first_entity': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUB_64_addsub_imm', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'user_rewind_single_step': ['LDR_64_ldst_pos', 'TBZ_only_testbranch', 'ORR_64_log_imm', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'set_task_stack_end_magic': ['LDR_64_ldst_pos', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'rcu_batches_started': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'kmem_cache_size': ['LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'readonly': ['LDRB_32_ldst_pos', 'CBNZ_32_compbranch', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], '_bcd2bin': ['UBFM_32M_bitfield', 'AND_32_log_imm', 'ADD_32_addsub_shift', 'RET_64R_branch_reg'], 'memblock_is_reserved': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'LDR_64_ldst_pos', 'ADD_32_addsub_shift', 'UBFM_32M_bitfield', 'UMADDL_64WA_dp_3src', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ADD_32_addsub_imm', 'B_only_branch_imm', 'ORR_32_log_shift', 'SUBS_32_addsub_shift', 'MOVN_32_movewide', 'ADDS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'bad_inode_lookup': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'clock_t_to_jiffies': ['ORR_64_log_imm', 'MOVK_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVN_64_movewide', 'RET_64R_branch_reg', 'UBFM_64M_bitfield', 'MOVZ_64_movewide', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'UMULH_64_dp_3src'], 'msi_domain_activate': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'init_zero_pfn': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'SUB_64_addsub_shift', 'UBFM_64M_bitfield', 'CBZ_64_compbranch', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'AND_64_log_imm', 'MOVZ_32_movewide', 'SBFM_64M_bitfield', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'task_fpsimd_load': ['STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'ANDS_32S_log_imm', 'B_only_condbranch', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'add_page_wait_queue': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'ADRP_only_pcreladdr', 'MADD_64A_dp_3src', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'MOVZ_32_movewide', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__task_pid_nr_ns': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'CBNZ_32_compbranch', 'ORR_32_log_shift', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUBS_64_addsub_shift', 'RET_64R_branch_reg', 'SUBS_32S_addsub_imm', 'CSEL_32_condsel', 'CBNZ_64_compbranch', 'MRS_RS_system', 'B_only_branch_imm'], 'nsecs_to_jiffies': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'UMULH_64_dp_3src', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'get_pipe_info': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'null_lseek': ['STR_64_ldst_pos', 'MOVZ_64_movewide', 'RET_64R_branch_reg'], 'get_iowait_load': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'SBFM_64M_bitfield', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'cpu_enable_cache_maint_trap': ['MRS_RS_system', 'AND_32_log_imm', 'MSR_SR_system', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'irqpoll_setup': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'current_kernel_time64': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'DMB_BO_system', 'LDR_64_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LSRV_64_dp_2src', 'RET_64R_branch_reg', 'YIELD_HI_system', 'B_only_branch_imm'], 'of_bus_default_get_flags': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'its_build_clear_cmd': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'AND_64_log_imm', 'ORR_64_log_imm', 'LDRH_32_ldst_regoff', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'ORR_64_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'device_property_present': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'vmemmap_populate_print_last': ['RET_64R_branch_reg'], 'its_init_v4': ['CBZ_64_compbranch', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'sync_mm_rss': ['ADD_64_addsub_imm', 'MOVZ_32_movewide', 'MRS_RS_system', 'SBFM_64M_bitfield', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'LDRSW_64_ldst_pos', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'STR_32_ldst_pos', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'RET_64R_branch_reg'], 'devm_resource_match': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'plist_add': ['LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_64_movewide', 'LDR_32_ldst_pos', 'SUB_64_addsub_imm', 'ORR_64_log_shift', 'B_only_branch_imm', 'SUBS_32_addsub_shift', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'clear_nlink': ['LDR_32_ldst_pos', 'CBZ_32_compbranch', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'no_action': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'aarch32_insn_extract_reg_num': ['MOVZ_32_movewide', 'LSLV_32_dp_2src', 'AND_32_log_shift', 'LSRV_32_dp_2src', 'RET_64R_branch_reg'], 'fsstack_copy_attr_all': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDRH_32_ldst_pos', 'STRH_32_ldst_pos', 'LDR_32_ldst_pos', 'STR_32_ldst_pos', 'LDP_64_ldstpair_off', 'STP_64_ldstpair_off', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rcu_segcblist_insert_pend_cbs': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'clocksource_default_clock': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'pcpu_dump_alloc_info.isra.7': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'LDR_32_ldst_pos', 'SDIV_32_dp_2src', 'CBNZ_32_compbranch', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'LDUR_64_ldst_unscaled', 'LDUR_32_ldst_unscaled', 'UDIV_64_dp_2src', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDR_32_ldst_immpost', 'MSUB_32A_dp_3src', 'CBZ_32_compbranch', 'UNALLOCATED_18_exception', 'ADD_32_addsub_imm', 'B_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'make_empty_dir_inode': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDRH_32_ldst_pos', 'ADRP_only_pcreladdr', 'AND_32_log_imm', 'STRH_32_ldst_pos', 'STP_32_ldstpair_off', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_setup_pdev_archdata': ['RET_64R_branch_reg'], 'gic_eoimode1_eoi_irq': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'ADD_64_addsub_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'f_getown': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'ANDS_64S_log_imm', 'B_only_condbranch', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CSNEG_32_condsel', 'LDXR_LR32_ldstexcl', 'SUB_32_addsub_imm', 'STLXR_SR32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'quiet_kernel': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'anon_vma_ctor': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'STR_32_ldst_pos', 'STP_64_ldstpair_off', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'sched_avg_update': ['LDR_64_ldst_pos', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'rcu_cpu_starting': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_32_log_shift', 'SUB_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'LDP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'EOR_64_log_shift', 'LDR_32_ldst_pos', 'ADD_32_addsub_shift', 'STLR_SL32_ldstexcl', 'DMB_BO_system', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'vfs_get_link': ['LDR_32_ldst_pos', 'AND_32_log_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVN_64_movewide', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post'], 'arch_task_cache_init': ['RET_64R_branch_reg'], 'is_vmalloc_or_module_addr': ['MOVZ_64_movewide', 'ORR_64_log_imm', 'MOVK_64_movewide', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'devices_kset_move_last': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_timer_shutdown_phys_mem': ['LDUR_64_ldst_unscaled', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'AND_64_log_imm', 'STR_32_ldst_pos', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'of_clk_src_simple_get': ['ORR_64_log_shift', 'RET_64R_branch_reg'], 'bad_inode_readlink': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'set_security_override': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'setup_userns_sysctls': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'pcpu_next_md_free_region': ['LDR_32_ldst_pos', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'SBFM_64M_bitfield', 'LDRSW_64_ldst_pos', 'LDR_64_ldst_pos', 'AND_32_log_imm', 'AND_64_log_imm', 'UBFM_64M_bitfield', 'SUBS_32_addsub_shift', 'SMADDL_64WA_dp_3src', 'B_only_condbranch', 'ADD_32_addsub_imm', 'CBZ_32_compbranch', 'ADD_32_addsub_shift', 'SUBS_32S_addsub_imm', 'RET_64R_branch_reg', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'CBNZ_32_compbranch', 'UBFM_32M_bitfield', 'SUB_32_addsub_shift', 'B_only_branch_imm'], 'fixup_red_left': ['ORR_64_log_shift', 'RET_64R_branch_reg'], 'early_ioremap_setup': ['ADRP_only_pcreladdr', 'MOVN_64_movewide', 'ADD_64_addsub_imm', 'MOVK_64_movewide', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'pipe_poll': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUBS_64S_addsub_imm', 'CCMP_64_condcmp_imm', 'B_only_condbranch', 'BLR_64_branch_reg', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'TBZ_only_testbranch', 'SUBS_32S_addsub_imm', 'CSEL_32_condsel', 'CBZ_32_compbranch', 'LDP_32_ldstpair_off', 'SUBS_32_addsub_shift', 'ORR_32_log_shift', 'ORR_32_log_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'SUBS_64_addsub_shift', 'B_only_branch_imm'], 'ns_to_timeval': ['CBNZ_64_compbranch', 'MOVZ_64_movewide', 'RET_64R_branch_reg', 'SBFM_64M_bitfield', 'MOVK_64_movewide', 'SMULH_64_dp_3src', 'SUB_64_addsub_shift', 'ORR_64_log_shift', 'MSUB_64A_dp_3src', 'ORR_32_log_shift', 'TBNZ_only_testbranch', 'SUB_64_addsub_imm', 'ADD_32_addsub_shift', 'B_only_branch_imm'], 'bad_inode_symlink': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'its_build_int_cmd': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'AND_64_log_imm', 'ORR_64_log_imm', 'LDRH_32_ldst_regoff', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'ORR_64_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'arch_release_task_struct': ['RET_64R_branch_reg'], 'rcutorture_get_gp_data': ['SUBS_32S_addsub_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'CBZ_64_compbranch', 'LDRH_32_ldst_pos', 'SBFM_32M_bitfield', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'single_stop': ['RET_64R_branch_reg'], 'dev_attr_store': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'SUB_64_addsub_imm', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_64_movewide'], 'device_get_next_child_node': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ADD_64_addsub_imm', 'STP_64_ldstpair_pre', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'shmem_lock': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__arm_smccc_hvc': ['UNALLOCATED_13_exception', 'LDR_64_ldst_pos', 'STP_64_ldstpair_off', 'CBZ_64_compbranch', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'lcm_not_zero': ['SUBS_64S_addsub_imm', 'CCMP_64_condcmp_imm', 'B_only_condbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'UDIV_64_dp_2src', 'MADD_64A_dp_3src', 'CSEL_64_condsel', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'read_null': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'request_resource_conflict': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXR_SR32_ldstexcl', 'CBZ_32_compbranch', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'MOVZ_32_movewide', 'STLRB_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'noirqdebug_setup': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'aarch32_insn_mcr_extract_opc2': ['UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'hsiphash_2u32': ['ORR_32_log_shift', 'MOVZ_64_movewide', 'ORR_64_log_shift', 'MOVK_64_movewide', 'LDP_64_ldstpair_off', 'EOR_64_log_shift', 'ADD_64_addsub_shift', 'EXTR_64_extract', 'EOR_64_log_imm', 'EOR_32_log_shift', 'RET_64R_branch_reg'], 'set_binfmt': ['MRS_RS_system', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'register_break_hook': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'STLR_SL64_ldstexcl', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'platform_msi_write_msg': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'dump_kernel_offset': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'cpu_idle_nopoll_setup': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'aarch64_insn_gen_nop': ['MOVZ_32_movewide', 'MOVK_32_movewide', 'RET_64R_branch_reg'], 'percpu_counter_cpu_dead': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'mask_irq.part.2': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDR_32_ldst_pos', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'set_reset_devices': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__invoke_psci_fn_smc': ['SUB_64_addsub_imm', 'MOVZ_64_movewide', 'STP_64_ldstpair_off', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'add_wait_queue_exclusive': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'LDR_32_ldst_pos', 'ORR_32_log_imm', 'STR_32_ldst_immpost', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'radix_tree_node_ctor': ['ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'lock_hrtimer_base.isra.1': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'BL_only_branch_imm', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'YIELD_HI_system', 'B_only_branch_imm'], 'bad_file_open': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'fget': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rb_first_postorder': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ORR_64_log_shift', 'CBNZ_64_compbranch', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'overcommit_ratio_handler': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'CCMP_32_condcmp_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__kfifo_max_r': ['UBFM_32M_bitfield', 'MOVZ_32_movewide', 'LSLV_32_dp_2src', 'SUB_32_addsub_imm', 'SUBS_32_addsub_shift', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'msi_domain_ops_get_hwirq': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'aarch64_insn_gen_load_store_pair': ['SUB_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDRB_32B_ldst_regoff', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'abort': ['UNALLOCATED_18_exception'], 'strncat': ['CBZ_64_compbranch', 'LDRB_32_ldst_pos', 'ORR_64_log_shift', 'CBZ_32_compbranch', 'LDRB_32_ldst_immpre', 'CBNZ_32_compbranch', 'ADD_64_addsub_shift', 'B_only_branch_imm', 'B_only_condbranch', 'LDRB_32_ldst_immpost', 'STRB_32_ldst_immpost', 'SUBS_64_addsub_shift', 'RET_64R_branch_reg', 'STRB_32_ldst_pos'], 'swiotlb_max_segment': ['ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'ramfs_mmu_get_unmapped_area': ['STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__pmd_error': ['RET_64R_branch_reg'], 'proc_nr_files': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'pud_set_huge': ['ANDS_64S_log_imm', 'B_only_condbranch', 'AND_64_log_imm', 'ORR_64_log_imm', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'DSB_BO_system', 'ISB_BI_system', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'fold_diff': ['ADRP_only_pcreladdr', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'SBFM_64M_bitfield', 'CBZ_32_compbranch', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'ADD_64_addsub_shift', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'ADD_32_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'do_fpsimd_acc': ['RET_64R_branch_reg'], 'task_fork_dl': ['RET_64R_branch_reg'], 'f__check_cs': ['UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'queued_read_lock_slowpath': ['MRS_RS_system', 'LDR_32_ldst_pos', 'ANDS_32S_log_imm', 'B_only_condbranch', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'SUB_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'ADD_64_addsub_imm', 'LDAXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'EOR_32_log_shift', 'CBZ_32_compbranch', 'SEVL_HI_system', 'WFE_HI_system', 'LDAXRH_LR32_ldstexcl', 'LDAR_LR32_ldstexcl', 'AND_32_log_imm', 'SBFM_64M_bitfield', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'RET_64R_branch_reg'], 'show_pte': ['ORR_64_log_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MRS_RS_system', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'RET_64R_branch_reg', 'MOVN_64_movewide', 'UBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'CBZ_64_compbranch', 'TBZ_only_testbranch', 'AND_64_log_imm', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift'], 'device_set_of_node_from_dev': ['LDR_64_ldst_pos', 'LDRB_32_ldst_pos', 'STR_64_ldst_pos', 'ORR_32_log_imm', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'f__check_cc': ['UBFM_64M_bitfield', 'EOR_64_log_imm', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'strcasecmp': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'LDRB_32BL_ldst_regoff', 'ADD_32_addsub_imm', 'LDRB_32B_ldst_regoff', 'TBZ_only_testbranch', 'UBFM_32M_bitfield', 'SUBS_32_addsub_shift', 'CCMP_32_condcmp_imm', 'B_only_condbranch', 'SUB_32_addsub_shift', 'RET_64R_branch_reg'], 'f__sw_hweight64': ['UBFM_64M_bitfield', 'AND_64_log_imm', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'UBFM_32M_bitfield', 'RET_64R_branch_reg'], 'bad_inode_get_link': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'pick_next_pushable_dl_task': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'SUB_64_addsub_imm', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUBS_64_addsub_shift', 'SUBS_32S_addsub_imm', 'TBNZ_only_testbranch', 'UNALLOCATED_18_exception', 'ORR_64_log_shift', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'to_mnt_ns': ['SUB_64_addsub_imm', 'RET_64R_branch_reg'], 'account_idle_ticks': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'MADD_64A_dp_3src', 'CBZ_64_compbranch', 'ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'el2_sync_invalid': ['B_only_branch_imm'], 'irq_forced_secondary_handler': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__remove_inode_hash': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'jiffies_64_to_clock_t': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'MADD_64A_dp_3src', 'UMULH_64_dp_3src', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'seq_hlist_start': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'CBNZ_64_compbranch', 'B_only_branch_imm', 'B_only_condbranch', 'SUBS_64S_addsub_imm', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'mntns_get': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide', 'B_only_branch_imm'], 'clk_gpio_mux_get_parent': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'arch_match_cpu_phys_id': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'inode_set_flags': ['ORN_32_log_shift', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'AND_32_log_shift', 'ORR_32_log_shift', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STLXR_SR32_ldstexcl', 'DMB_BO_system', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'vma_is_stack_for_current': ['MRS_RS_system', 'LDR_64_ldst_pos', 'MOVZ_64_movewide', 'ADD_64_addsub_shift', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'page_mapcount_is_zero': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'TBNZ_only_testbranch', 'LDR_32_ldst_pos', 'LDP_64_ldstpair_post', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'BL_only_branch_imm'], 'of_bus_isa_get_flags': ['LDR_32_ldst_pos', 'MOVZ_32_movewide', 'REV_32_dp_1src', 'ANDS_64S_log_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'f__arm_smccc_smc': ['UNALLOCATED_13_exception', 'LDR_64_ldst_pos', 'STP_64_ldstpair_off', 'CBZ_64_compbranch', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'devm_attr_group_match': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'generic_read_dir': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'lruvec_init': ['ORR_64_log_shift', 'STP_64_ldstpair_off', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'ns_get_owner': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'user_enable_single_step': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'LDR_64_ldst_pos', 'ORR_64_log_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cpu_stop_should_run': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'BL_only_branch_imm', 'LDR_64_ldst_immpre', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__check_mi': ['UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'f__dummy_free': ['RET_64R_branch_reg'], 'init_cpu_online': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'power_supply_set_battery_charged': ['LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'LDR_64_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide'], 'get_filesystem': ['RET_64R_branch_reg'], 'rhashtable_walk_stop': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDR_64_ldst_immpre', 'B_only_branch_imm'], 'memset64': ['MOVZ_64_movewide', 'CBZ_64_compbranch', 'STR_64_ldst_regoff', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'percpu_enable_async': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'open_check_o_direct': ['LDR_32_ldst_pos', 'TBZ_only_testbranch', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'MOVN_32_movewide', 'SUBS_64S_addsub_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'f__hyp_reset_vectors': ['MOVZ_64_movewide', 'UNALLOCATED_13_exception', 'RET_64R_branch_reg'], 'rcutorture_record_test_transition': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'clk_composite_disable': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'devm_attr_groups_remove': ['RET_64R_branch_reg'], 'el1_fiq_invalid_1': ['B_only_branch_imm'], 'get_avenrun': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'LSLV_64_dp_2src', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'hrtimer_forward': ['LDR_64_ldst_pos', 'ORR_64_log_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDRB_32_ldst_pos', 'TBNZ_only_testbranch', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'ADD_64_addsub_shift', 'SUBS_64S_addsub_imm', 'MOVN_64_movewide', 'CCMP_64_condcmp_reg', 'CSINC_32_condsel', 'SUBS_32S_addsub_imm', 'CSEL_64_condsel', 'STP_64_ldstpair_off', 'RET_64R_branch_reg', 'B_only_branch_imm', 'SDIV_64_dp_2src', 'MADD_64A_dp_3src', 'ADD_64_addsub_imm'], 'ns_prune_dentry': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'siphash_3u32': ['ORR_32_log_shift', 'MOVZ_64_movewide', 'ORR_64_log_shift', 'MOVK_64_movewide', 'LDP_64_ldstpair_off', 'EOR_64_log_shift', 'ADD_64_addsub_shift', 'EXTR_64_extract', 'ORR_64_log_imm', 'EOR_64_log_imm', 'RET_64R_branch_reg'], 'early_memremap_pgprot_adjust': ['ORR_64_log_shift', 'RET_64R_branch_reg'], 'attribute_container_add_attrs': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDUR_64_ldst_unscaled', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'CBNZ_64_compbranch', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'B_only_branch_imm', 'ADD_32_addsub_imm', 'LDR_64_ldst_regoff', 'BL_only_branch_imm', 'CBZ_32_compbranch', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'msi_domain_ops_check': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'arch_timer_shutdown_phys': ['MRS_RS_system', 'AND_64_log_imm', 'MSR_SR_system', 'ISB_BI_system', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'next_signal': ['LDR_64_ldst_pos', 'BICS_64_log_shift', 'B_only_condbranch', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'ANDS_64_log_shift', 'CSEL_64_condsel', 'RBIT_64_dp_1src', 'CLZ_64_dp_1src', 'ADD_32_addsub_imm', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'update_cpu_capabilities': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'LDR_32_ldst_pos', 'BLR_64_branch_reg', 'ANDS_32S_log_imm', 'B_only_condbranch', 'LDRH_32_ldst_pos', 'SUBS_32S_addsub_imm', 'LSLV_64_dp_2src', 'CBNZ_64_compbranch', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_post_acpi_subsys_init': ['RET_64R_branch_reg'], 'memblock_get_current_limit': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'initcall_blacklist': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'psci_migrate': ['ADRP_only_pcreladdr', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'STP_64_ldstpair_pre', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'BLR_64_branch_reg', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_32_ldst_regoff', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'siphash_1u32': ['LDP_64_ldstpair_off', 'ORR_32_log_shift', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'EOR_64_log_shift', 'ORR_64_log_imm', 'ADD_64_addsub_shift', 'EXTR_64_extract', 'EOR_64_log_imm', 'RET_64R_branch_reg'], 'klist_add_before': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'AND_64_log_imm', 'STR_32_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'BL_only_branch_imm', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'list_lru_isolate': ['LDP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'RET_64R_branch_reg'], 'debug_locks_off': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'MOVZ_32_movewide', 'CBZ_32_compbranch', 'LDR_32_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'wq_worker_sleeping': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'ANDS_32_log_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'MRS_RS_system', 'LDR_32_ldst_regoff', 'SUBS_32_addsub_shift', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'SUB_32_addsub_imm', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'ORR_64_log_shift', 'LDR_64_ldst_immpre', 'SUBS_64_addsub_shift', 'CBZ_64_compbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'find_suitable_fallback': ['ORR_64_log_shift', 'LDR_64_ldst_pos', 'UBFM_32M_bitfield', 'CBZ_64_compbranch', 'ADRP_only_pcreladdr', 'SBFM_64M_bitfield', 'ADD_64_addsub_imm', 'STRB_32_ldst_pos', 'LDR_32_ldst_regoff', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVZ_64_movewide', 'AND_32_log_imm', 'ADD_64_addsub_ext', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'B_only_branch_imm', 'CBNZ_32_compbranch', 'CBZ_32_compbranch', 'LDR_32_ldst_immpost', 'LDR_64_ldst_regoff', 'SUBS_64_addsub_shift', 'CCMP_32_condcmp_imm', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'MOVN_32_movewide'], 'sg_nents': ['MOVZ_32_movewide', 'CBZ_64_compbranch', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'ADD_32_addsub_imm', 'TBZ_only_testbranch', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'AND_64_log_imm', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'CBNZ_64_compbranch', 'B_only_branch_imm'], 'f__bitmap_xor': ['ORR_32_log_shift', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'UBFM_64M_bitfield', 'CBZ_64_compbranch', 'LDR_64_ldst_regoff', 'EOR_64_log_shift', 'STR_64_ldst_regoff', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'timecounter_init': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'MOVZ_64_movewide', 'LDR_32_ldst_pos', 'LSLV_64_dp_2src', 'SUB_64_addsub_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'debug_kernel': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'irq_percpu_disable': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ORR_32_log_shift', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'el1_sync_1': ['SUBS_64S_addsub_imm', 'B_only_condbranch', 'MSR_SR_system', 'B_only_branch_imm', 'ORR_64_log_shift', 'BR_64_branch_reg', 'LDR_64_loadlit', 'ERET_64E_branch_reg'], 'sys_restart_syscall': ['STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'aarch64_insn_is_nop.part.1': ['AND_32_log_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'jiffies_to_clock_t': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'MADD_64A_dp_3src', 'UMULH_64_dp_3src', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'fwnode_property_read_u64_array': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'file_check_and_advance_wb_err': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'MOVZ_32_movewide', 'ORR_32_log_shift', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'B_only_branch_imm'], 'build_zonelists': ['LDR_32_ldst_pos', 'ORR_64_log_imm', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'MOVK_64_movewide', 'SUB_32_addsub_imm', 'SBFM_64M_bitfield', 'ORR_64_log_shift', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STR_64_ldst_regoff', 'ADD_32_addsub_imm', 'SUB_64_addsub_shift', 'MADD_64A_dp_3src', 'STR_32_ldst_pos', 'CBNZ_32_compbranch', 'ADD_64_addsub_ext', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'SUBS_32_addsub_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'cpu_stop_park': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'irq_default_primary_handler': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'decay_load': ['SUBS_64S_addsub_imm', 'B_only_condbranch', 'ORR_32_log_shift', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_32_ldst_regoff', 'MADD_64A_dp_3src', 'UMULH_64_dp_3src', 'EXTR_64_extract', 'RET_64R_branch_reg', 'MOVZ_64_movewide', 'UBFM_32M_bitfield', 'AND_32_log_imm', 'LSRV_64_dp_2src', 'B_only_branch_imm'], 'ip4_addr_string_sa': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDRB_32_ldst_immpost', 'STRB_32_ldst_pos', 'LDRB_32_ldst_immpre', 'LDRB_32B_ldst_regoff', 'ANDS_64S_log_imm', 'B_only_condbranch', 'SUB_32_addsub_imm', 'SUBS_32S_addsub_imm', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'sys_arm64_personality': ['AND_32_log_imm', 'STP_64_ldstpair_pre', 'SUBS_32S_addsub_imm', 'ADD_64_addsub_imm', 'B_only_condbranch', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'CSINC_32_condsel', 'CBNZ_32_compbranch', 'MOVN_64_movewide', 'B_only_branch_imm', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield'], 'msi_domain_ops_prepare': ['MOVZ_32_movewide', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'psci_cpu_suspend': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'ORR_64_log_shift', 'ORR_32_log_shift', 'LDR_32_ldst_pos', 'LDR_64_ldst_pos', 'MOVZ_64_movewide', 'BLR_64_branch_reg', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_32_ldst_regoff', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'rcu_unexpedite_gp': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'SUB_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'fwnode_property_read_u16_array': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cpu_device_release': ['RET_64R_branch_reg'], 'err_broadcast': ['RET_64R_branch_reg'], 'strpbrk': ['LDRB_32_ldst_pos', 'CBZ_32_compbranch', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ORR_64_log_shift', 'B_only_branch_imm', 'LDRB_32_ldst_immpre', 'CBNZ_32_compbranch', 'MOVZ_64_movewide', 'RET_64R_branch_reg'], 'arch_timer_handler_phys_mem': ['LDUR_64_ldst_unscaled', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post'], 'fpsimd_load_state': ['LDP_Q_ldstpair_off', 'LDP_Q_ldstpair_pre', 'LDR_32_ldst_pos', 'MSR_SR_system', 'MRS_RS_system', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'f__init_swait_queue_head': ['ADD_64_addsub_imm', 'STRH_32_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'special_mapping_name': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__bitmap_set': ['AND_32_log_imm', 'UBFM_64M_bitfield', 'ADD_32_addsub_shift', 'MOVN_64_movewide', 'SUBS_32S_addsub_imm', 'ADD_64_addsub_shift', 'LSLV_64_dp_2src', 'B_only_condbranch', 'UBFM_32M_bitfield', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'STR_64_ldst_immpost', 'SUBS_64_addsub_shift', 'SUB_32_addsub_shift', 'CBZ_32_compbranch', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg', 'ORR_32_log_shift', 'B_only_branch_imm'], 'proc_dointvec': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'sg_miter_get_next_page': ['LDR_32_ldst_pos', 'CBNZ_32_compbranch', 'ADD_64_addsub_imm', 'CBZ_32_compbranch', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'BL_only_branch_imm', 'UBFM_32M_bitfield', 'MOVZ_64_movewide', 'STR_32_ldst_pos', 'ADD_32_addsub_shift', 'LDP_32_ldstpair_off', 'SUB_32_addsub_shift', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide', 'SUB_64_addsub_ext', 'B_only_branch_imm'], 'clk_fixed_rate_recalc_accuracy': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'gic_poke_irq.isra.1': ['STP_64_ldstpair_pre', 'SUBS_32S_addsub_imm', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'LSLV_32_dp_2src', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'UBFM_32M_bitfield', 'UBFM_64M_bitfield', 'LDR_64_ldst_pos', 'ADD_64_addsub_ext', 'ADD_64_addsub_shift', 'STR_32_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MRS_RS_system', 'LDR_64_ldst_regoff'], 'ns_test_super': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'ktime_add_safe': ['ADD_64_addsub_shift', 'MOVN_64_movewide', 'SUBS_64S_addsub_imm', 'CCMP_64_condcmp_reg', 'CSINC_32_condsel', 'SUBS_32S_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'jiffies64_to_nsecs': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'MADD_64A_dp_3src', 'RET_64R_branch_reg'], 'jiffies_read': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'unmask_irq': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'TBZ_only_testbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__check_ls': ['AND_64_log_imm', 'BICS_64_log_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'f__check_lt': ['EOR_64_log_shift', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'calc_global_load_tick': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'SUB_64_addsub_shift', 'TBNZ_only_testbranch', 'LDR_32_ldst_pos', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'STR_64_ldst_pos', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'f__check_le': ['EOR_64_log_shift', 'ORR_64_log_shift', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'errseq_check_and_advance': ['LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ORR_32_log_imm', 'ORR_32_log_shift', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STLXR_SR32_ldstexcl', 'DMB_BO_system', 'AND_32_log_imm', 'STR_32_ldst_pos', 'SUB_32_addsub_shift', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'rcu_segcblist_extract_count': ['LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'task_rq_lock': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'STR_64_ldst_pos', 'LDR_32_ldst_pos', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUBS_32S_addsub_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDR_64_ldst_pos', 'YIELD_HI_system', 'B_only_branch_imm'], 'proc_dopipe_max_size': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'pmd_clear_huge': ['LDR_64_ldst_pos', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STR_64_ldst_pos', 'DSB_BO_system', 'ISB_BI_system', 'ORR_32_log_shift'], 'sys_geteuid': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'is_console_locked': ['ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'read_iter_null': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'may_expand_vm': ['MRS_RS_system', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_64_movewide', 'MOVZ_32_movewide', 'AND_64_log_shift', 'SUBS_64S_addsub_imm', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'CBNZ_64_compbranch', 'ADRP_only_pcreladdr', 'LDRB_32_ldst_pos'], 'dequeue_task_stop': ['LDR_32_ldst_pos', 'SUB_32_addsub_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__kfifo_dma_in_finish_r': ['LDR_32_ldst_pos', 'MOVZ_32_movewide', 'UBFM_32M_bitfield', 'LSLV_32_dp_2src', 'LDR_64_ldst_pos', 'SUB_32_addsub_imm', 'AND_32_log_shift', 'SUBS_32_addsub_shift', 'CSEL_32_condsel', 'SUBS_64S_addsub_imm', 'STRB_32B_ldst_regoff', 'B_only_condbranch', 'ADD_32_addsub_imm', 'ADD_32_addsub_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'vm_area_add_early': ['ADRP_only_pcreladdr', 'LDRB_32_ldst_pos', 'CBNZ_32_compbranch', 'ADD_64_addsub_imm', 'B_only_branch_imm', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_shift', 'CBZ_64_compbranch', 'UNALLOCATED_18_exception', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'rcu_segcblist_insert_done_cbs': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STR_64_ldst_immpost', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'sb_clear_inode_writeback': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], '_raw_spin_lock_bh': ['MRS_RS_system', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'STR_32_ldst_pos', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'EOR_32_log_shift', 'CBZ_32_compbranch', 'SEVL_HI_system', 'WFE_HI_system', 'LDAXRH_LR32_ldstexcl', 'RET_64R_branch_reg'], 'pm_qos_request_active': ['LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'kthread_should_stop': ['MRS_RS_system', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'devm_clk_provider_match': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'add_random_ready_callback': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVN_32_movewide', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'ORR_64_log_shift', 'BL_only_branch_imm', 'ORR_32_log_shift', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'B_only_branch_imm'], 'devres_add': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDUR_64_ldst_unscaled', 'SUB_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'f__clk_get_name': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'rcu_rnp_online_cpus': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'aarch32_insn_mcr_extract_crm': ['AND_32_log_imm', 'RET_64R_branch_reg'], 'change_page_range': ['LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'MOVK_64_movewide', 'BIC_64_log_shift', 'ORR_64_log_shift', 'AND_64_log_shift', 'STR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'DSB_BO_system', 'ISB_BI_system', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__dummy_dma_supported': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'generic_pipe_buf_confirm': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'read_boot_clock64': ['STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'clear_bit': ['AND_32_log_imm', 'EOR_32_log_shift', 'MOVZ_64_movewide', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LSLV_64_dp_2src', 'LDXR_LR64_ldstexcl', 'BIC_64_log_shift', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'cpu_coregroup_mask': ['ADRP_only_pcreladdr', 'SBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'clocksource_resume': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'LDR_64_ldst_immpre', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_imm', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'update_clock_read_data': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDP_64_ldstpair_off', 'STP_64_ldstpair_off', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'DMB_BO_system', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'get_state_synchronize_rcu': ['DMB_BO_system', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDAR_LR64_ldstexcl', 'RET_64R_branch_reg'], 'f__legitimize_mnt': ['DMB_BO_system', 'ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'CBZ_64_compbranch', 'SUB_64_addsub_imm', 'LDR_64_ldst_pos', 'MRS_RS_system', 'ADD_64_addsub_shift', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'TBZ_only_testbranch', 'MOVN_64_movewide', 'ADD_32_addsub_shift', 'MOVN_32_movewide'], 'split_page': ['MOVZ_32_movewide', 'LSLV_32_dp_2src', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUB_32_addsub_imm', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'STR_32_ldst_pos', 'SUBS_64_addsub_shift', 'RET_64R_branch_reg'], 'gic_dist_config': ['SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'STR_32_ldst_pos', 'ADD_32_addsub_imm', 'SUBS_32_addsub_shift', 'MOVK_32_movewide', 'ORR_32_log_shift', 'MOVN_32_movewide', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'proc_doulongvec_minmax': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'tk_set_wall_to_mono': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'SUB_64_addsub_shift', 'BL_only_branch_imm', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MADD_64A_dp_3src', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'SMADDL_64WA_dp_3src', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_64_movewide', 'B_only_branch_imm'], 'c_start': ['LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSINC_64_condsel', 'RET_64R_branch_reg'], 'idle_task': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'queued_write_lock_slowpath': ['ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'EOR_32_log_shift', 'CBZ_32_compbranch', 'SEVL_HI_system', 'WFE_HI_system', 'LDAXRH_LR32_ldstexcl', 'LDR_32_ldst_pos', 'MOVZ_64_movewide', 'LDXR_LR32_ldstexcl', 'LDAR_LR32_ldstexcl', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'SBFM_64M_bitfield', 'EOR_32_log_imm', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'RET_64R_branch_reg'], 'get_cpu_cacheinfo': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'aarch32_insn_is_wide': ['MOVZ_32_movewide', 'SUBS_32_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'setup_forced_irqthreads': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'kset_init': ['ADDS_64S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STR_32_ldst_pos', 'LDRB_32_ldst_pos', 'AND_32_log_imm', 'ORR_32_log_shift', 'STRB_32_ldst_pos', 'STRH_32_ldst_pos', 'RET_64R_branch_reg'], 'sys_umask': ['MRS_RS_system', 'LDR_64_ldst_pos', 'AND_64_log_imm', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'SBFM_64M_bitfield', 'RET_64R_branch_reg'], 'enqueue_top_rt_rq': ['LDR_32_ldst_pos', 'SUB_64_addsub_imm', 'CBNZ_32_compbranch', 'CBZ_32_compbranch', 'ADD_32_addsub_shift', 'SUBS_32S_addsub_imm', 'CCMP_32_condcmp_imm', 'STR_32_ldst_pos', 'B_only_condbranch', 'LDR_64_ldst_pos', 'LDRB_32_ldst_pos', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'rcu_end_inkernel_boot': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'SUB_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'gic_irq_domain_unmap': ['RET_64R_branch_reg'], 'd_set_d_op': ['STR_64_ldst_pos', 'LDR_32_ldst_pos', 'CBZ_64_compbranch', 'LDR_64_ldst_pos', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'simple_align_resource': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'cpu_die_early': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDR_32_ldst_regoff', 'BL_only_branch_imm', 'MOVZ_64_movewide', 'STR_64_ldst_pos', 'DSB_BO_system', 'WFE_HI_system', 'WFI_HI_system', 'B_only_branch_imm'], 'ntp_notify_cmos_timer': ['RET_64R_branch_reg'], 'rhashtable_walk_start': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'CBZ_64_compbranch', 'LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'STR_64_ldst_pos', 'MOVK_64_movewide', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'set_dumpable.part.7': ['SBFM_64M_bitfield', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'AND_64_log_imm', 'ORR_64_log_shift', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STLXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'f__pgd_error': ['RET_64R_branch_reg'], 'set_sched_topology': ['ADRP_only_pcreladdr', 'LDRB_32_ldst_pos', 'CBNZ_32_compbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__pi___dma_unmap_area': ['ADD_64_addsub_shift', 'MRS_RS_system', 'NOP_HI_system', 'UBFM_64M_bitfield', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'SUB_64_addsub_imm', 'ANDS_64_log_shift', 'BIC_64_log_shift', 'B_only_condbranch', 'SYS_CR_system', 'B_only_branch_imm', 'SUBS_64_addsub_shift', 'DSB_BO_system', 'RET_64R_branch_reg', 'SUBS_32S_addsub_imm'], 'dt_mem_next_cell': ['LDR_64_ldst_pos', 'ORR_32_log_shift', 'MOVZ_64_movewide', 'ADD_64_addsub_ext', 'STR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDR_32_ldst_regoff', 'ADD_64_addsub_imm', 'REV_32_dp_1src', 'ORR_64_log_shift', 'B_only_branch_imm', 'RET_64R_branch_reg'], 'rhashtable_jhash2': ['MOVZ_32_movewide', 'SUBS_32S_addsub_imm', 'MOVK_32_movewide', 'ORR_64_log_shift', 'ADD_32_addsub_shift', 'ORR_32_log_shift', 'B_only_condbranch', 'LDP_32_ldstpair_off', 'SUB_32_addsub_imm', 'LDR_32_ldst_immpost', 'SUB_32_addsub_shift', 'EOR_32_log_shift', 'RET_64R_branch_reg', 'LDR_32_ldst_pos', 'EXTR_32_extract'], 'partition_translate_id': ['LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'B_only_branch_imm', 'LDUR_64_ldst_unscaled', 'ADD_32_addsub_imm', 'ORR_64_log_shift', 'SUBS_32_addsub_shift', 'MOVN_32_movewide', 'RET_64R_branch_reg', 'SUBS_64S_addsub_imm', 'CSEL_32_condsel'], 'clk_hw_is_prepared': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDR_32_ldst_pos'], 'sha_transform': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'LDP_32_ldstpair_off', 'LDR_32_ldst_pos', 'REV_32_dp_1src', 'EOR_32_log_shift', 'STR_32_ldst_pos', 'AND_32_log_shift', 'EXTR_32_extract', 'ADD_32_addsub_shift'], 'cap_vm_enough_memory': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'MOVZ_32_movewide', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'task_tick_idle': ['RET_64R_branch_reg'], 'klist_init': ['ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STRH_32_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'rcutorture_record_progress': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'choose_memblock_flags': ['ADRP_only_pcreladdr', 'LDRB_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CSINC_64_condsel', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'free_rt_sched_group': ['RET_64R_branch_reg'], 'test_and_set_bit': ['AND_32_log_imm', 'EOR_32_log_shift', 'MOVZ_64_movewide', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LSLV_64_dp_2src', 'LDXR_LR64_ldstexcl', 'LSRV_64_dp_2src', 'ORR_64_log_shift', 'STLXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'AND_64_log_imm', 'RET_64R_branch_reg'], 'user_shm_lock': ['STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'ADD_64_addsub_shift', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'MOVZ_32_movewide', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'bad_inode_get_acl': ['MOVN_64_movewide', 'RET_64R_branch_reg'], '_local_bh_enable': ['MRS_RS_system', 'LDR_32_ldst_pos', 'SUB_32_addsub_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'inode_set_bytes': ['AND_32_log_imm', 'SBFM_64M_bitfield', 'STRH_32_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'clk_ignore_unused_setup': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'strncpy_from_unsafe': ['STP_64_ldstpair_pre', 'SUBS_64S_addsub_imm', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'MRS_RS_system', 'LDR_64_ldst_pos', 'B_only_condbranch', 'ORR_64_log_shift', 'MOVN_64_movewide', 'MOVZ_32_movewide', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'STR_32_ldst_pos', 'ADD_64_addsub_shift', 'B_only_branch_imm', 'SUBS_64_addsub_shift', 'ORR_32_log_shift', 'LDRB_32_ldst_pos', 'SBFM_64M_bitfield', 'UBFM_32M_bitfield', 'CCMP_32_condcmp_imm', 'STRB_32_ldst_immpost', 'STRB_32_ldst_pos', 'SUB_32_addsub_imm', 'SUB_64_addsub_shift', 'CSEL_64_condsel', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'rcutree_dead_cpu': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'SUB_64_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'clk_nodrv_prepare_enable': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'init_admin_reserve': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'UBFM_64M_bitfield', 'SUBS_64_addsub_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'devm_action_match': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'CSINC_32_condsel'], 'task_tick_stop': ['RET_64R_branch_reg'], 'early_init_dt_verify': ['CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'CBZ_32_compbranch', 'MOVZ_32_movewide', 'B_only_branch_imm', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'irq_chip_compose_msi_msg': ['CBZ_64_compbranch', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'CBNZ_64_compbranch', 'MOVN_32_movewide', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'clockevents_switch_state': ['LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ORR_32_log_shift', 'TBNZ_only_testbranch', 'SUBS_32S_addsub_imm', 'ADRP_only_pcreladdr', 'LDRB_32B_ldst_regoff', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'cdev_set_parent': ['STR_64_ldst_pos', 'RET_64R_branch_reg'], 'irq_set_thread_affinity': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'MOVZ_32_movewide', 'BL_only_branch_imm', 'CBNZ_64_compbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'power_supply_get_property': ['LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDRB_32_ldst_pos', 'MOVN_32_movewide', 'CSEL_32_condsel'], 'round_jiffies_relative': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'LDR_32_ldst_regoff', 'MOVK_64_movewide', 'LDR_64_ldst_pos', 'ADD_32_addsub_shift', 'ADD_64_addsub_shift', 'SBFM_64M_bitfield', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'SUB_64_addsub_shift', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'nr_free_zone_pages': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'MOVZ_64_movewide', 'CBNZ_64_compbranch', 'B_only_branch_imm', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'BL_only_branch_imm', 'ORR_64_log_shift', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cntvct_read_handler': ['STP_64_ldstpair_pre', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ISB_BI_system', 'MRS_RS_system', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'STR_64_ldst_regoff', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'el1_error_invalid_1': ['B_only_branch_imm'], 'change_bit': ['AND_32_log_imm', 'EOR_32_log_shift', 'MOVZ_64_movewide', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LSLV_64_dp_2src', 'LDXR_LR64_ldstexcl', 'EOR_64_log_shift', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'ntp_get_next_leap': ['ADRP_only_pcreladdr', 'MOVN_64_movewide', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'RET_64R_branch_reg', 'ADD_64_addsub_imm', 'TBZ_only_testbranch', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'MOVK_64_movewide', 'SUBS_64_addsub_shift', 'MADD_64A_dp_3src'], 'sanity': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'LDP_32_ldstpair_off', 'ADD_32_addsub_shift', 'CBZ_64_compbranch', 'CBZ_32_compbranch', 'SUB_32_addsub_imm', 'AND_32_log_shift', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'SMADDL_64WA_dp_3src', 'SUBS_64_addsub_shift', 'RET_64R_branch_reg'], 'rcutree_dying_cpu': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'SUB_64_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'hsiphash_1u32': ['LDP_64_ldstpair_off', 'ORR_32_log_shift', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'EOR_64_log_shift', 'ORR_64_log_imm', 'ADD_64_addsub_shift', 'EXTR_64_extract', 'EOR_64_log_imm', 'EOR_32_log_shift', 'RET_64R_branch_reg'], 'strcmp': ['EOR_64_log_shift', 'ORR_64_log_imm', 'ANDS_64S_log_imm', 'B_only_condbranch', 'LDR_64_ldst_immpost', 'SUB_64_addsub_shift', 'BIC_64_log_shift', 'ORR_64_log_shift', 'CBZ_64_compbranch', 'B_only_branch_imm', 'AND_64_log_imm', 'UBFM_64M_bitfield', 'MOVN_64_movewide', 'LSRV_64_dp_2src', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'LDRB_32_ldst_immpost', 'SUBS_64S_addsub_imm', 'CCMP_32_condcmp_imm', 'CCMP_32_condcmp_reg', 'CBNZ_64_compbranch', 'SUBS_32S_addsub_imm', 'RET_64R_branch_reg', 'ADD_64_addsub_shift', 'LDR_64_ldst_regoff', 'REV_64_dp_1src', 'CLZ_64_dp_1src', 'LSLV_64_dp_2src'], 'del_random_ready_callback': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'clocks_calc_max_nsecs': ['ADD_32_addsub_shift', 'MOVN_64_movewide', 'SUB_32_addsub_shift', 'UDIV_64_dp_2src', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'MADD_64A_dp_3src', 'LSRV_64_dp_2src', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'set_secondary_fwnode': ['CBZ_64_compbranch', 'MOVN_64_movewide', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'ADDS_64S_addsub_imm', 'B_only_condbranch', 'RET_64R_branch_reg'], 'gic_irq_set_vcpu_affinity': ['LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'MOVZ_32_movewide', 'AND_32_log_imm'], 'nr_iowait_cpu': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'SBFM_64M_bitfield', 'RET_64R_branch_reg'], 'driver_allows_async_probing': ['LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'oom_killer_enable': ['ADRP_only_pcreladdr', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'sched_clock': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'DMB_BO_system', 'AND_32_log_imm', 'UMADDL_64WA_dp_3src', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDR_64_ldst_regoff', 'LDP_32_ldstpair_off', 'LDP_64_ldstpair_off', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'ORR_32_log_shift', 'AND_64_log_shift', 'MADD_64A_dp_3src', 'LSRV_64_dp_2src', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'single_start': ['LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSINC_64_condsel', 'RET_64R_branch_reg'], 'iov_iter_pipe': ['SUBS_32S_addsub_imm', 'B_only_condbranch', 'STR_64_ldst_pos', 'STR_32_ldst_pos', 'LDP_32_ldstpair_off', 'LDR_32_ldst_pos', 'STP_64_ldstpair_off', 'ADD_32_addsub_shift', 'SUB_32_addsub_imm', 'AND_32_log_shift', 'STP_32_ldstpair_off', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'bad_inode_fiemap': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'can_do_mlock': ['MRS_RS_system', 'LDR_64_ldst_pos', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'radix_tree_init_maxnodes': ['SUB_64_addsub_imm', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'MOVN_64_movewide', 'SUBS_32S_addsub_imm', 'LSRV_64_dp_2src', 'SUB_32_addsub_imm', 'CSEL_64_condsel', 'STR_64_ldst_regoff', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'ORR_32_log_shift', 'UBFM_64M_bitfield', 'CBZ_32_compbranch', 'LDR_64_ldst_regoff', 'ADD_64_addsub_ext', 'LDUR_64_ldst_unscaled', 'ADD_64_addsub_shift', 'B_only_branch_imm', 'RET_64R_branch_reg'], 'noop': ['RET_64R_branch_reg'], 'notifier_call_chain': ['LDR_64_ldst_pos', 'SUBS_32S_addsub_imm', 'CCMP_64_condcmp_imm', 'B_only_condbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'SUB_32_addsub_imm', 'BLR_64_branch_reg', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'STR_32_ldst_pos', 'TBNZ_only_testbranch', 'SUBS_64S_addsub_imm', 'CCMP_32_condcmp_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'get_files_struct': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'bad_chained_irq': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'sighand_ctor': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STRH_32_ldst_pos', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cmp_ex_search': ['LDRSW_64_ldst_pos', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'CSINV_32_condsel', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'arch_release_thread_stack': ['RET_64R_branch_reg'], 'generic_swap': ['MOVZ_64_movewide', 'LDRB_32BL_ldst_regoff', 'STRB_32BL_ldst_regoff', 'ADD_64_addsub_imm', 'SUB_32_addsub_shift', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'RET_64R_branch_reg'], 'round_jiffies': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'MRS_RS_system', 'ADD_64_addsub_imm', 'MOVK_64_movewide', 'LDR_32_ldst_regoff', 'ADD_32_addsub_shift', 'SBFM_64M_bitfield', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'SUB_64_addsub_shift', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'LDR_64_ldst_pos', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'clockevents_resume': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_imm', 'B_only_branch_imm', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'user_namespace_sysctl_init': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__init_rwsem': ['ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STRH_32_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'set_security_override_from_ctx': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'f__dummy_unmap_sg': ['RET_64R_branch_reg'], 'arch_timer_set_next_event_virt_mem': ['LDUR_64_ldst_unscaled', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'AND_64_log_imm', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'update_vsyscall_tz': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'STP_32_ldstpair_off', 'RET_64R_branch_reg'], 'trivial_online': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'c_stop': ['RET_64R_branch_reg'], 'bit_waitqueue': ['SBFM_64M_bitfield', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'MADD_64A_dp_3src', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'noop_fsync': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'memblock_remove_region': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'ADD_64_addsub_shift', 'LDP_64_ldstpair_off', 'UBFM_64M_bitfield', 'LDR_64_ldst_pos', 'SUB_64_addsub_shift', 'SUB_64_addsub_imm', 'BL_only_branch_imm', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'MOVZ_64_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__ctzdi2': ['RBIT_64_dp_1src', 'CLZ_64_dp_1src', 'RET_64R_branch_reg'], 'f__init_waitqueue_head': ['ADD_64_addsub_imm', 'STRH_32_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'move_expired_inodes': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'AND_32_log_imm', 'STR_64_ldst_pos', 'TBNZ_only_testbranch', 'LDR_64_ldst_pos', 'MOVZ_32_movewide', 'MOVZ_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'CBZ_64_compbranch', 'LDUR_64_ldst_unscaled', 'SUB_64_addsub_shift', 'LDP_64_ldstpair_off', 'ADD_32_addsub_imm', 'SUB_64_addsub_imm', 'CBNZ_32_compbranch', 'CBZ_32_compbranch', 'B_only_branch_imm', 'BL_only_branch_imm', 'CBNZ_64_compbranch', 'ORR_32_log_shift', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDRB_32_ldst_pos', 'ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'MADD_32A_dp_3src', 'STR_64_ldst_immpre'], 'clk_multiplier_recalc_rate': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'DSB_BO_system', 'LDRB_32_ldst_pos', 'MOVZ_32_movewide', 'MOVN_64_movewide', 'SUB_32_addsub_shift', 'LSRV_32_dp_2src', 'LSRV_64_dp_2src', 'AND_32_log_shift', 'CBNZ_64_compbranch', 'AND_64_log_imm', 'MADD_64A_dp_3src', 'RET_64R_branch_reg'], 'f__irq_put_desc_unlock': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'UBFM_32M_bitfield', 'BL_only_branch_imm', 'CBZ_32_compbranch', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'BLR_64_branch_reg', 'B_only_branch_imm'], 'platform_drv_remove': ['LDR_64_ldst_pos', 'LDUR_64_ldst_unscaled', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'SUB_64_addsub_imm', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'radix_tree_tagged': ['ADD_32_addsub_imm', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'LSLV_32_dp_2src', 'AND_32_log_shift', 'RET_64R_branch_reg'], 'f__cpu_setup': ['SYS_CR_system', 'DSB_BO_system', 'MOVZ_64_movewide', 'MSR_SR_system', 'ISB_BI_system', 'MSR_SI_system', 'MRS_RS_system', 'SBFM_64M_bitfield', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'LDR_64_loadlit', 'ADR_only_pcreladdr', 'LDP_32_ldstpair_off', 'BIC_64_log_shift', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'BFM_64M_bitfield', 'RET_64R_branch_reg'], 'work_for_cpu_fn': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'LDP_64_ldstpair_off', 'BLR_64_branch_reg', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'pagecache_write_begin': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'run_timer_softirq': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'MRS_RS_system', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'STRB_32_ldst_pos', 'SUB_64_addsub_shift', 'TBNZ_only_testbranch', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'BL_only_branch_imm', 'MOVZ_32_movewide', 'AND_32_log_imm', 'ADD_32_addsub_shift', 'ADD_32_addsub_imm', 'SBFM_32M_bitfield', 'LSLV_64_dp_2src', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'BIC_64_log_shift', 'ANDS_64_log_shift', 'STR_64_ldst_regoff', 'B_only_condbranch', 'STR_64_ldst_pos', 'CBZ_64_compbranch', 'ANDS_64S_log_imm', 'UBFM_64M_bitfield', 'SUBS_32S_addsub_imm', 'SUB_32_addsub_imm', 'ADDS_32S_addsub_imm', 'ADD_64_addsub_ext', 'LDP_64_ldstpair_off', 'LDR_32_ldst_pos', 'TBZ_only_testbranch', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'BLR_64_branch_reg', 'SUBS_32_addsub_shift', 'STR_32_ldst_pos', 'B_only_branch_imm', 'MSR_SI_system', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'device_add_groups': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'dev_uevent_filter': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'SUB_64_addsub_imm', 'CBNZ_64_compbranch', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel'], 'rcu_test_sync_prims': ['RET_64R_branch_reg'], 'f__round_jiffies_up_relative': ['ADRP_only_pcreladdr', 'ADD_32_addsub_shift', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'ADD_64_addsub_imm', 'ADD_64_addsub_ext', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'SUB_64_addsub_shift', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'vmacache_update': ['MRS_RS_system', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'STR_64_ldst_pos'], 'f__is_ram': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'fwnode_property_read_string_array': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'ADDS_32S_addsub_imm', 'B_only_condbranch', 'ADDS_64S_addsub_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'address_space_init_once': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'MOVK_32_movewide', 'STP_64_ldstpair_off', 'STR_32_ldst_pos', 'BL_only_branch_imm', 'STRH_32_ldst_pos', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'hrtimer_init_sleeper': ['ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'pud_clear_huge': ['LDR_64_ldst_pos', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STR_64_ldst_pos', 'DSB_BO_system', 'ISB_BI_system', 'ORR_32_log_shift'], 'gic_eoi_irq_1': ['LDR_32_ldst_pos', 'MSR_SR_system', 'ISB_BI_system', 'RET_64R_branch_reg'], 'mask_irq': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'exact_match': ['ORR_64_log_shift', 'RET_64R_branch_reg'], 'jiffies_to_timespec64': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'MADD_64A_dp_3src', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'MSUB_64A_dp_3src', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'cap_inode_setxattr': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'tick_get_broadcast_mask': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'finish_no_open': ['STR_64_ldst_pos', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'load_default_modules': ['RET_64R_branch_reg'], 'set_pageblock_order': ['RET_64R_branch_reg'], 'set_wb_congested': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'SUBS_32S_addsub_imm', 'ORR_64_log_shift', 'CSINC_32_condsel', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'ADRP_only_pcreladdr', 'ADD_64_addsub_ext', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'readwrite': ['LDRB_32_ldst_pos', 'CBNZ_32_compbranch', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'AND_32_log_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'phys_mem_access_prot_allowed': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__dummy_mmap': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'nsec_to_clock_t': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'UMULH_64_dp_3src', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'u32_swap': ['LDR_32_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__memblock_dump_all': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'RET_64R_branch_reg', 'MOVZ_32_movewide', 'ADD_32_addsub_imm', 'SUBS_64S_addsub_ext', 'B_only_condbranch', 'B_only_branch_imm'], 'ntp_tick_length': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'kobj_child_ns_ops': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'jiffies_to_usecs': ['MOVZ_32_movewide', 'MADD_32A_dp_3src', 'RET_64R_branch_reg'], 'take_dentry_name_snapshot': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_off', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'STR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'SUB_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch'], 'ihold': ['ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'RET_64R_branch_reg'], 'idmap_cpu_replace_ttbr1': ['MRS_RS_system', 'MSR_SI_system', 'ADRP_only_pcreladdr', 'MSR_SR_system', 'ISB_BI_system', 'SYS_CR_system', 'DSB_BO_system', 'RET_64R_branch_reg'], 'power_supply_powers': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'set_nohugeiomap': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'timespec_trunc': ['SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'SUBS_32_addsub_shift', 'SUB_32_addsub_imm', 'ORR_32_log_shift', 'SDIV_64_dp_2src', 'MSUB_64A_dp_3src', 'SUB_64_addsub_shift', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'ioremap_huge_init': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_32_ldst_pos', 'CBNZ_32_compbranch', 'BL_only_branch_imm', 'CBZ_32_compbranch', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'early_debug_disable': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'machine_shutdown': ['RET_64R_branch_reg'], 'dev_driver_string': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'RET_64R_branch_reg', 'CBNZ_64_compbranch', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm'], 'rcu_irq_enter_disabled': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDRB_32BL_ldst_regoff', 'UBFM_32M_bitfield', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'fwnode_property_read_u8_array': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'pgd_clear_bad': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'MOVZ_32_movewide', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'uao_thread_switch': ['RET_64R_branch_reg'], 'mem_devnode': ['CBZ_64_compbranch', 'LDR_32_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'LDRH_32_ldst_pos', 'CBZ_32_compbranch', 'STRH_32_ldst_pos', 'MOVZ_64_movewide', 'RET_64R_branch_reg'], 'early_fixmap_init': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'SUB_64_addsub_shift', 'ORR_64_log_imm', 'STR_64_ldst_pos', 'DSB_BO_system', 'ISB_BI_system', 'CBZ_64_compbranch', 'TBZ_only_testbranch', 'AND_64_log_imm', 'ADD_64_addsub_shift', 'SUB_64_addsub_imm', 'TBNZ_only_testbranch', 'UNALLOCATED_18_exception', 'RET_64R_branch_reg'], 'arch_cpu_idle_exit': ['RET_64R_branch_reg'], 'generic_file_llseek_size': ['STP_64_ldstpair_pre', 'SUB_32_addsub_imm', 'SUBS_32S_addsub_imm', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'LDRB_32B_ldst_regoff', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'setup_profiling_timer': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'timespec64_to_jiffies': ['LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_imm', 'RET_64R_branch_reg', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'MADD_64A_dp_3src'], 'dec_node_page_state': ['ADRP_only_pcreladdr', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'MRS_RS_system', 'LDRB_32BL_ldst_regoff', 'UBFM_32M_bitfield', 'SBFM_64M_bitfield', 'SBFM_32M_bitfield', 'SUB_64_addsub_imm', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'SUB_32_addsub_shift', 'ADD_64_addsub_ext', 'B_only_condbranch', 'MOVZ_64_movewide', 'AND_64_log_imm', 'PRFM_P_ldst_pos', 'LDXRB_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXRB_SR32_ldstexcl', 'SUBS_64S_addsub_ext', 'CBZ_64_compbranch', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'RET_64R_branch_reg'], 'user_fastforward_single_step': ['LDR_64_ldst_pos', 'TBZ_only_testbranch', 'AND_64_log_imm', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'devm_percpu_match': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'init_setup': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STR_64_ldst_immpost', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__clzsi2': ['MOVZ_32_movewide', 'CLZ_32_dp_1src', 'SUBS_32S_addsub_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'clk_nodrv_set_parent': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'rht_bucket_nested': ['LDP_32_ldstpair_off', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'LSLV_32_dp_2src', 'LSRV_32_dp_2src', 'SUB_32_addsub_imm', 'AND_32_log_shift', 'LDR_64_ldst_regoff', 'SUBS_64S_addsub_imm', 'CCMP_32_condcmp_reg', 'B_only_condbranch', 'AND_64_log_imm', 'UBFM_32M_bitfield', 'CBZ_64_compbranch', 'ADD_64_addsub_ext', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm'], 'arch_setup_new_exec': ['MRS_RS_system', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'irq_chip_eoi_parent': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'set_rq_offline': ['LDR_32_ldst_pos', 'CBZ_32_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'CBNZ_64_compbranch', 'BL_only_branch_imm', 'STR_32_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'disable_randmaps': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'arch_ioremap_pud_supported': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'amba_shutdown': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cpu_report_state': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'LDR_32_ldst_regoff', 'RET_64R_branch_reg'], 'early_ioremap_reset': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'ip6_string': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'LDRB_32_ldst_immpost', 'AND_32_log_imm', 'UBFM_32M_bitfield', 'LDRB_32B_ldst_regoff', 'STRB_32_ldst_pos', 'LDURB_32_ldst_unscaled', 'LDRB_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CCMP_32_condcmp_imm', 'B_only_condbranch', 'ADD_32_addsub_imm', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'f__check_ne': ['UBFM_64M_bitfield', 'EOR_64_log_imm', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'refcount_inc_not_zero': ['LDR_32_ldst_pos', 'ORR_32_log_shift', 'ADD_32_addsub_imm', 'CBZ_32_compbranch', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXR_SR32_ldstexcl', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'unmask_irq.part.4': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDR_32_ldst_pos', 'AND_32_log_imm', 'STR_32_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'smp_spin_table_cpu_boot': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'LDR_64_ldst_regoff', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'SEV_HI_system', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'noop_ret': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'cpus_are_stuck_in_kernel': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDR_32_ldst_pos', 'CSINC_32_condsel'], 'f__dl_clear_params': ['LDRB_32_ldst_pos', 'AND_32_log_imm', 'STRB_32_ldst_pos', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'init_rt_rq': ['ADD_64_addsub_imm', 'MOVZ_32_movewide', 'MOVZ_64_movewide', 'SBFM_32M_bitfield', 'STR_64_ldst_pos', 'LSLV_64_dp_2src', 'SBFM_64M_bitfield', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'LDR_64_ldst_regoff', 'BIC_64_log_shift', 'STR_64_ldst_regoff', 'B_only_condbranch', 'LDR_64_ldst_pos', 'STR_32_ldst_pos', 'ORR_64_log_imm', 'STRH_32_ldst_pos', 'RET_64R_branch_reg'], 'generic_pipe_buf_nosteal': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'lockref_put_or_lock': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'SUBS_32S_addsub_ext', 'B_only_condbranch', 'SBFM_64M_bitfield', 'SUBS_32S_addsub_imm', 'ORR_64_log_shift', 'SUB_32_addsub_imm', 'BFM_64M_bitfield', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'SUBS_64_addsub_shift', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'YIELD_HI_system', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'STR_32_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'B_only_branch_imm'], 'devm_ioremap_match': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'simple_statfs': ['LDR_64_ldst_pos', 'MOVZ_64_movewide', 'MOVZ_32_movewide', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'hyp_offset_low': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ORR_64_log_imm', 'LDR_64_ldst_pos', 'MOVZ_32_movewide', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MRS_RS_system', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'cpu_is_hotpluggable': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'CSEL_32_condsel', 'ADD_64_addsub_imm', 'SBFM_32M_bitfield', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'LSRV_64_dp_2src', 'TBZ_only_testbranch', 'CBZ_64_compbranch', 'LDUR_32_ldst_unscaled', 'CSINC_32_condsel', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'msi_domain_prepare_irqs': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ORR_32_log_shift', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'CBNZ_32_compbranch', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_update_cpu_topology': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'arch_asym_cpu_priority': ['SUB_32_addsub_shift', 'RET_64R_branch_reg'], 'driver_remove_file': ['RET_64R_branch_reg'], 'memset32': ['MOVZ_64_movewide', 'CBZ_64_compbranch', 'STR_32_ldst_regoff', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'of_fwnode_put': ['RET_64R_branch_reg'], 'early_ioremap_shutdown': ['RET_64R_branch_reg'], 'f__ktime_get_real_seconds': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'ctr_read_handler': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'UBFM_64M_bitfield', 'SUBS_64S_addsub_imm', 'LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'AND_64_log_shift', 'ORR_64_log_shift', 'B_only_condbranch', 'STR_64_ldst_regoff', 'MRS_RS_system', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'set_close_on_exec': ['STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'CSEL_32_condsel', 'AND_32_log_imm', 'SBFM_32M_bitfield', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'LSRV_64_dp_2src', 'TBZ_only_testbranch', 'SUBS_32_addsub_shift', 'MOVZ_64_movewide', 'CSNEG_32_condsel', 'LSLV_64_dp_2src', 'BIC_64_log_shift', 'STR_64_ldst_regoff', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'ORR_64_log_shift'], 'inode_get_bytes': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDRH_32_ldst_pos', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'fwnode_get_next_child_node': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'platform_drv_shutdown': ['LDR_64_ldst_pos', 'LDUR_64_ldst_unscaled', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'SUB_64_addsub_imm', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'bad_inode_link': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'select_task_rq_stop': ['LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'sys_sched_get_priority_min': ['SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVN_64_movewide', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDRB_32B_ldst_regoff', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'ktime_get_real_fast_ns': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'AND_32_log_imm', 'UMADDL_64WA_dp_3src', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_32_ldstpair_off', 'LDP_64_ldstpair_off', 'DMB_BO_system', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'ORR_32_log_shift', 'AND_64_log_shift', 'MADD_64A_dp_3src', 'LSRV_64_dp_2src', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cpus_share_cache': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'LDR_32_ldst_regoff', 'SUBS_32_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'compare_single': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'check_early_ioremap_leak': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'LDR_64_ldst_regoff', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'B_only_condbranch', 'SUBS_32S_addsub_imm', 'RET_64R_branch_reg'], 'f__fget': ['ORR_32_log_shift', 'MRS_RS_system', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_regoff', 'CBZ_64_compbranch', 'ANDS_32_log_shift', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STLXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'SUBS_64_addsub_shift', 'ORR_64_log_shift', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'param_array_get': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'MOVZ_32_movewide', 'LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'B_only_branch_imm', 'ADD_64_addsub_ext', 'LDR_32_ldst_pos', 'MADD_32A_dp_3src', 'ADD_32_addsub_imm', 'ADD_64_addsub_shift', 'BLR_64_branch_reg', 'ADD_32_addsub_shift', 'TBNZ_only_testbranch', 'CBZ_64_compbranch', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'CBZ_32_compbranch', 'STURB_32_ldst_unscaled', 'ORR_32_log_shift', 'STRB_32B_ldst_regoff', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'early_ioremap_debug_setup': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__inode_add_bytes': ['LDRH_32_ldst_pos', 'AND_64_log_imm', 'LDR_64_ldst_pos', 'ADD_32_addsub_shift', 'UBFM_32M_bitfield', 'ADD_64_addsub_shift', 'SUBS_32S_addsub_imm', 'STRH_32_ldst_pos', 'STR_64_ldst_pos', 'B_only_condbranch', 'ADD_64_addsub_imm', 'SUB_32_addsub_imm', 'RET_64R_branch_reg'], 'save_return_addr': ['LDR_32_ldst_pos', 'CBZ_32_compbranch', 'SUB_32_addsub_imm', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg', 'LDR_64_ldst_pos', 'STR_64_ldst_pos'], 'its_build_invall_cmd': ['MOVZ_64_movewide', 'STRB_32_ldst_pos', 'LDR_64_ldst_pos', 'LDRH_32_ldst_pos', 'STRH_32_ldst_pos', 'RET_64R_branch_reg'], 'inode_sub_bytes': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'AND_64_log_imm', 'LDRH_32_ldst_pos', 'SUB_64_addsub_shift', 'SUBS_64S_addsub_ext', 'STR_64_ldst_pos', 'B_only_condbranch', 'ADD_32_addsub_imm', 'SUB_64_addsub_imm', 'UBFM_32M_bitfield', 'SUB_32_addsub_shift', 'STRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'sha_init': ['MOVZ_32_movewide', 'MOVK_32_movewide', 'STP_32_ldstpair_off', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'tick_get_broadcast_device': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'bad_inode_create': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'rcu_set_runtime_mode': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'memblock_reserved_memory_within': ['ADRP_only_pcreladdr', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'MOVZ_32_movewide', 'MOVZ_64_movewide', 'LDP_64_ldstpair_off', 'ADD_32_addsub_imm', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'SMADDL_64WA_dp_3src', 'CCMP_64_condcmp_reg', 'CSINC_32_condsel', 'SUBS_32S_addsub_imm', 'CSEL_64_condsel', 'SUBS_64S_addsub_ext', 'B_only_condbranch', 'RET_64R_branch_reg'], 'dec_zone_page_state': ['LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ORR_32_log_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'MRS_RS_system', 'LDRB_32BL_ldst_regoff', 'UBFM_32M_bitfield', 'SBFM_64M_bitfield', 'SBFM_32M_bitfield', 'SUB_64_addsub_imm', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'SUB_32_addsub_shift', 'ADD_64_addsub_ext', 'B_only_condbranch', 'MOVZ_64_movewide', 'AND_64_log_imm', 'PRFM_P_ldst_pos', 'LDXRB_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXRB_SR32_ldstexcl', 'SUBS_64S_addsub_ext', 'CBZ_64_compbranch', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'RET_64R_branch_reg'], 'int_sqrt': ['SUBS_64S_addsub_imm', 'B_only_condbranch', 'CLZ_64_dp_1src', 'MOVZ_64_movewide', 'SUB_64_addsub_shift', 'AND_32_log_imm', 'LSLV_64_dp_2src', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'SUBS_64_addsub_shift', 'CBNZ_64_compbranch', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'class_create_file_ns': ['MOVN_32_movewide', 'SUBS_64S_addsub_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'cpu_set_state_online': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'RET_64R_branch_reg'], 'platform_msi_get_host_data': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'register_step_hook': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'STLR_SL64_ldstexcl', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_cpu_idle_prepare': ['RET_64R_branch_reg'], 'should_remove_suid': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'rcu_batches_started_bh': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'strnlen': ['CBZ_64_compbranch', 'ORR_64_log_imm', 'AND_64_log_imm', 'ANDS_64S_log_imm', 'B_only_condbranch', 'SUB_64_addsub_imm', 'UBFM_64M_bitfield', 'LDP_64_ldstpair_post', 'SUB_64_addsub_shift', 'BIC_64_log_shift', 'SUBS_64S_addsub_imm', 'ORR_64_log_shift', 'CCMP_64_condcmp_imm', 'REV_64_dp_1src', 'CLZ_64_dp_1src', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'RET_64R_branch_reg', 'MOVN_64_movewide', 'LSRV_64_dp_2src', 'CSINV_64_condsel', 'B_only_branch_imm'], 'devm_clk_hw_match': ['CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'f__getnstimeofday64': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'DMB_BO_system', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'ORR_32_log_shift', 'AND_64_log_shift', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'MADD_64A_dp_3src', 'LSRV_64_dp_2src', 'SUBS_64_addsub_shift', 'MOVN_64_movewide', 'MOVZ_32_movewide', 'ADD_64_addsub_shift', 'ADD_32_addsub_imm', 'MOVN_32_movewide', 'SUBS_32S_addsub_imm', 'CSEL_32_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'YIELD_HI_system', 'B_only_branch_imm'], 'llist_add_batch': ['LDR_64_ldst_pos', 'STR_64_ldst_pos', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STLXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'rcu_batches_completed_bh': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'current_is_async': ['MRS_RS_system', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'MOVK_32_movewide', 'ANDS_32_log_shift', 'B_only_condbranch', 'TBNZ_only_testbranch', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'CBZ_64_compbranch', 'LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'SUBS_64_addsub_shift', 'LDP_64_ldstpair_post', 'B_only_branch_imm'], 'irq_calc_affinity_vectors': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'LDP_32_ldstpair_off', 'ADD_32_addsub_shift', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'ORR_32_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'SUB_32_addsub_shift', 'CSEL_32_condsel', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'show_rcu_gp_kthreads': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'SUB_64_addsub_imm', 'B_only_condbranch', 'RET_64R_branch_reg'], 'gen_pool_virt_to_phys': ['LDR_64_ldst_immpre', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'MOVN_64_movewide', 'RET_64R_branch_reg', 'ADD_64_addsub_shift', 'SUB_64_addsub_shift'], 'account_steal_time': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'mntns_owner': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__bitmap_subset': ['UBFM_32M_bitfield', 'CBZ_32_compbranch', 'LDR_64_ldst_pos', 'BICS_64_log_shift', 'B_only_condbranch', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'B_only_branch_imm', 'LDR_64_ldst_immpost', 'ADD_32_addsub_imm', 'SUBS_32_addsub_shift', 'ANDS_64S_log_imm', 'SUB_32_addsub_shift', 'MOVN_64_movewide', 'LDR_64_ldst_regoff', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'CSINC_32_condsel', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'shmem_unlock_mapping': ['RET_64R_branch_reg'], 'f__kfifo_init': ['ORR_32_log_shift', 'UDIV_64_dp_2src', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'CLZ_64_dp_1src', 'MOVZ_64_movewide', 'SUB_64_addsub_shift', 'ADD_32_addsub_imm', 'STP_32_ldstpair_off', 'STR_32_ldst_pos', 'STR_64_ldst_pos', 'LSLV_64_dp_2src', 'SUBS_32S_addsub_imm', 'SUB_32_addsub_imm', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'set_rq_online.part.15': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'CBNZ_64_compbranch', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'refcount_dec_not_one': ['LDR_32_ldst_pos', 'ADDS_32S_addsub_imm', 'B_only_condbranch', 'SUBS_32S_addsub_imm', 'SUB_32_addsub_imm', 'SUBS_32_addsub_shift', 'ORR_32_log_shift', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STLXR_SR32_ldstexcl', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'ORR_64_log_shift', 'B_only_branch_imm'], 'clear_page': ['MRS_RS_system', 'AND_32_log_imm', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'SYS_CR_system', 'ADD_64_addsub_shift', 'ANDS_64S_log_imm', 'B_only_condbranch', 'RET_64R_branch_reg'], 'f__pud_error': ['RET_64R_branch_reg'], 'clk_hw_get_num_parents': ['LDR_64_ldst_pos', 'LDRB_32_ldst_pos', 'RET_64R_branch_reg'], 'cpu_do_switch_mm': ['LDR_64_ldst_pos', 'BFM_64M_bitfield', 'MSR_SR_system', 'ISB_BI_system', 'RET_64R_branch_reg'], 'f__mnt_drop_write': ['LDR_64_ldst_pos', 'MOVN_64_movewide', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_shift', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'cpu_cpu_mask': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'strrchr': ['MOVZ_64_movewide', 'AND_32_log_imm', 'LDRB_32_ldst_immpost', 'CBZ_32_compbranch', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_imm', 'B_only_branch_imm', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'f__hyp_stub_vectors': ['B_only_branch_imm'], 'strchrnul': ['LDRB_32_ldst_pos', 'CBZ_32_compbranch', 'AND_32_log_imm', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDRB_32_ldst_immpre', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'of_bus_default_map': ['SUB_32_addsub_imm', 'CBZ_32_compbranch', 'ORR_32_log_shift', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'LDR_32_ldst_immpost', 'ADDS_32S_addsub_imm', 'REV_32_dp_1src', 'B_only_condbranch', 'SBFM_64M_bitfield', 'ADD_64_addsub_ext', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'MOVN_64_movewide', 'RET_64R_branch_reg', 'CBNZ_32_compbranch', 'SUB_64_addsub_shift', 'CSINV_64_condsel', 'B_only_branch_imm'], 'devm_region_match': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'CSINC_32_condsel'], 'init_wait_entry': ['ADD_64_addsub_imm', 'ADRP_only_pcreladdr', 'STR_32_ldst_pos', 'MRS_RS_system', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'partition_irq_unmask': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDR_32_ldst_regoff', 'LDR_64_ldst_pos', 'SUBS_32S_addsub_imm', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'CSEL_32_condsel', 'SBFM_32M_bitfield', 'ADD_64_addsub_shift', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'LSRV_64_dp_2src', 'TBZ_only_testbranch', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'no_open': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'device_create_bin_file': ['MOVN_32_movewide', 'SUBS_64S_addsub_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'vma_interval_tree_subtree_search': ['LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_shift', 'CBNZ_64_compbranch', 'LDP_64_ldstpair_off', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'MOVZ_64_movewide', 'RET_64R_branch_reg'], 'mmap_min_addr_handler': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'ADRP_only_pcreladdr', 'LDP_64_ldstpair_post', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__iget': ['ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'cpu_check_up_prepare': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'STR_32_ldst_regoff', 'RET_64R_branch_reg'], 'tls_preserve_current_state': ['MRS_RS_system', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'inode_init_owner': ['MRS_RS_system', 'LDR_64_ldst_pos', 'UBFM_32M_bitfield', 'LDR_32_ldst_pos', 'STR_32_ldst_pos', 'CBZ_64_compbranch', 'LDRH_32_ldst_pos', 'TBNZ_only_testbranch', 'STRH_32_ldst_pos', 'RET_64R_branch_reg', 'AND_32_log_imm', 'SUBS_32S_addsub_imm', 'ORR_32_log_imm', 'CSEL_32_condsel'], 'arch_timer_handler_virt': ['MRS_RS_system', 'TBNZ_only_testbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ORR_32_log_imm', 'ADD_64_addsub_imm', 'MSR_SR_system', 'ISB_BI_system', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post'], 'radix_tree_iter_tag_set': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'AND_32_log_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rcu_segcblist_ready_cbs': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'account_user_time': ['LDR_32_ldst_pos', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'SUB_32_addsub_imm', 'ADD_64_addsub_shift', 'SUBS_32S_addsub_imm', 'MRS_RS_system', 'STR_64_ldst_pos', 'CSINC_64_condsel', 'LDR_64_ldst_regoff', 'STR_64_ldst_regoff', 'RET_64R_branch_reg'], 'lruvec_lru_size': ['ADRP_only_pcreladdr', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'ADD_32_addsub_imm', 'LDR_64_ldst_regoff', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVN_64_movewide', 'ADD_64_addsub_shift', 'SBFM_64M_bitfield', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'SUB_64_addsub_shift', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'fpsimd_bind_to_cpu': ['MRS_RS_system', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_64_ldst_regoff', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'STRB_32_ldst_pos', 'LDR_32_ldst_regoff', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'unregister_fair_sched_group': ['RET_64R_branch_reg'], 'fpsimd_init': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'init_cfs_bandwidth': ['RET_64R_branch_reg'], 'platform_drv_probe_fail': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'clk_fixed_rate_recalc_rate': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'its_build_inv_cmd': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'AND_64_log_imm', 'ORR_64_log_imm', 'LDRH_32_ldst_regoff', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'ORR_64_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'of_msi_map_rid': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'do_bad': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'el1_sync_invalid_1': ['B_only_branch_imm'], 'driver_create_file': ['MOVN_32_movewide', 'SUBS_64S_addsub_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'arch_remove_reservations': ['RET_64R_branch_reg'], 'f__dummy_map_page': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'sys_getuid': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'irqfixup_setup': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'handle_guest_sea': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'inc_zone_page_state': ['LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ORR_32_log_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'MRS_RS_system', 'LDRB_32BL_ldst_regoff', 'UBFM_32M_bitfield', 'SBFM_64M_bitfield', 'SBFM_32M_bitfield', 'SUB_32_addsub_shift', 'SUBS_64_addsub_shift', 'SUB_64_addsub_shift', 'MOVZ_64_movewide', 'B_only_condbranch', 'AND_64_log_imm', 'PRFM_P_ldst_pos', 'LDXRB_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXRB_SR32_ldstexcl', 'SUBS_64S_addsub_ext', 'CBZ_64_compbranch', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'RET_64R_branch_reg'], 'add_taint': ['STP_64_ldstpair_pre', 'SUBS_32S_addsub_imm', 'ADD_64_addsub_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'suspended_sched_clock_read': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'DMB_BO_system', 'AND_64_log_imm', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'radix_tree_iter_tag_clear': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'AND_32_log_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'csum_tcpudp_nofold': ['ADD_32_addsub_ext', 'ORR_32_log_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_ext', 'ADD_64_addsub_shift', 'ADD_32_addsub_shift', 'RET_64R_branch_reg'], 'rcu_panic': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__iowrite64_copy': ['ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_imm', 'LDR_64_ldst_immpost', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'is_empty_dir_inode': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'CSINC_32_condsel'], 'f__mnt_drop_write_file': ['LDR_64_ldst_pos', 'MOVN_64_movewide', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_shift', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'u64_swap': ['LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'class_compat_remove_link': ['RET_64R_branch_reg'], 'f__balance_callback': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDP_64_ldstpair_off', 'BLR_64_branch_reg', 'CBNZ_64_compbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'clocksource_mark_unstable': ['RET_64R_branch_reg'], 'group_open_release': ['RET_64R_branch_reg'], 'prandom_warmup': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'account_idle_time': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'task_curr': ['LDR_32_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'release_thread': ['RET_64R_branch_reg'], 'fdt_get_mem_rsv': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ORR_32_log_shift', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'LDR_32_ldst_pos', 'ADD_64_addsub_ext', 'REV_32_dp_1src', 'LDR_64_ldst_regoff', 'REV_64_dp_1src', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'get_taint': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'simple_open': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'get_state_synchronize_sched': ['DMB_BO_system', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDAR_LR64_ldstexcl', 'RET_64R_branch_reg'], 'd_set_mounted': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'STR_32_ldst_pos', 'DMB_BO_system', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'B_only_branch_imm', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'CBNZ_64_compbranch', 'MOVN_32_movewide', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'CBZ_64_compbranch', 'TBZ_only_testbranch', 'ORR_32_log_imm', 'MOVZ_32_movewide'], 'device_create_file': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'rdinit_setup': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STR_64_ldst_immpost', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'ktime_get_raw': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'DMB_BO_system', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'ORR_32_log_shift', 'AND_64_log_shift', 'MADD_64A_dp_3src', 'LSRV_64_dp_2src', 'ADD_64_addsub_shift', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'YIELD_HI_system', 'B_only_branch_imm'], 'srcu_batches_completed': ['LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'post_alloc_hook': ['MOVZ_32_movewide', 'STR_64_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'cpu_switch_to': ['MOVZ_64_movewide', 'ADD_64_addsub_shift', 'ADD_64_addsub_imm', 'STP_64_ldstpair_post', 'STR_64_ldst_pos', 'LDP_64_ldstpair_post', 'LDR_64_ldst_pos', 'MSR_SR_system', 'RET_64R_branch_reg'], 'empty_dir_listxattr': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'rcu_sync_enter_start': ['LDR_32_ldst_pos', 'MOVZ_32_movewide', 'ADD_32_addsub_imm', 'STP_32_ldstpair_off', 'RET_64R_branch_reg'], 'root_data_setup': ['ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'kthread_should_park': ['MRS_RS_system', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'f__follow_pte_pmd.isra.7': ['UBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'CBZ_64_compbranch', 'TBZ_only_testbranch', 'ADRP_only_pcreladdr', 'AND_64_log_imm', 'LDR_64_ldst_pos', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'ORR_64_log_imm', 'STP_64_ldstpair_pre', 'SUBS_64S_addsub_imm', 'CCMP_64_condcmp_imm', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'B_only_condbranch', 'ORR_64_log_shift', 'BL_only_branch_imm', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'ANDS_64_log_shift', 'MOVZ_32_movewide', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'CBNZ_64_compbranch', 'B_only_branch_imm', 'MOVN_32_movewide', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl'], 'msi_get_domain_info': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'free_unref_page_prepare': ['ORR_64_log_shift', 'LDR_64_ldst_pos', 'ANDS_64S_log_imm', 'B_only_condbranch', 'STR_64_ldst_pos', 'ADRP_only_pcreladdr', 'UBFM_64M_bitfield', 'AND_64_log_imm', 'CBZ_64_compbranch', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'MOVZ_32_movewide', 'UBFM_32M_bitfield', 'SUB_32_addsub_shift', 'LSRV_64_dp_2src', 'RET_64R_branch_reg', 'MOVZ_64_movewide', 'B_only_branch_imm'], 'f__calc_delta': ['LDR_32_ldst_pos', 'UBFM_64M_bitfield', 'CBZ_32_compbranch', 'CBNZ_64_compbranch', 'ORR_32_log_shift', 'MOVZ_32_movewide', 'MADD_64A_dp_3src', 'CBZ_64_compbranch', 'SUB_32_addsub_imm', 'UMULH_64_dp_3src', 'ORN_32_log_shift', 'ANDS_64S_log_imm', 'LSRV_64_dp_2src', 'LSLV_64_dp_2src', 'ORR_64_log_shift', 'CSEL_64_condsel', 'RET_64R_branch_reg', 'LDR_64_ldst_pos', 'ORR_64_log_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'UDIV_64_dp_2src', 'STR_32_ldst_pos', 'B_only_branch_imm', 'MOVZ_64_movewide', 'MOVN_32_movewide'], 'f__destroy_inode': ['LDR_32_ldst_pos', 'CBNZ_32_compbranch', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'SUB_64_addsub_imm', 'STXR_SR64_ldstexcl', 'ADRP_only_pcreladdr', 'MOVN_64_movewide', 'MRS_RS_system', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'rcu_segcblist_disable': ['LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'dma_debug_do_init': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'strchr': ['AND_32_log_imm', 'LDRB_32_ldst_immpost', 'SUBS_32_addsub_shift', 'CCMP_32_condcmp_reg', 'B_only_condbranch', 'SUB_64_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'psci_cpu_on': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'LDR_32_ldst_pos', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_32_ldst_regoff', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'f__round_jiffies_relative': ['ADRP_only_pcreladdr', 'ADD_32_addsub_shift', 'MOVZ_64_movewide', 'SBFM_64M_bitfield', 'MOVK_64_movewide', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'SUB_64_addsub_shift', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'ADD_64_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'f__enable_mmu': ['MRS_RS_system', 'UBFM_64M_bitfield', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'MOVZ_64_movewide', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'DMB_BO_system', 'SYS_CR_system', 'MSR_SR_system', 'ISB_BI_system', 'DSB_BO_system', 'RET_64R_branch_reg', 'WFE_HI_system', 'WFI_HI_system', 'B_only_branch_imm'], 'cap_mmap_addr': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'LDR_32_ldst_pos', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'LDP_64_ldstpair_post'], 'irq_domain_hierarchical_is_msi_remap': ['CBNZ_64_compbranch', 'B_only_branch_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'TBZ_only_testbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'base_probe': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'its_parse_indirect_baser': ['STP_64_ldstpair_pre', 'ORR_32_log_shift', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'UBFM_64M_bitfield', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'LSLV_64_dp_2src', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_imm', 'SUB_64_addsub_shift', 'MOVK_64_movewide', 'MOVZ_64_movewide', 'SBFM_64M_bitfield', 'MADD_64A_dp_3src', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'TBZ_only_testbranch', 'UDIV_32_dp_2src', 'CBZ_32_compbranch', 'CLZ_32_dp_1src', 'SUB_32_addsub_shift', 'SUB_32_addsub_imm', 'SUB_64_addsub_imm', 'CBZ_64_compbranch', 'CLZ_64_dp_1src', 'ADD_32_addsub_imm', 'SUBS_32_addsub_shift', 'CSEL_32_condsel', 'STR_32_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'update_vsyscall': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'LDRB_32_ldst_pos', 'EOR_32_log_imm', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'STR_32_ldst_pos', 'DMB_BO_system', 'STR_64_ldst_pos', 'LSRV_64_dp_2src', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'type_show': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVN_64_movewide', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'LDUR_64_ldst_unscaled', 'STR_64_ldst_pos', 'STUR_64_ldst_unscaled', 'LDRB_32_ldst_pos', 'STRB_32_ldst_pos', 'LDUR_32_ldst_unscaled', 'STR_32_ldst_pos', 'STUR_32_ldst_unscaled'], 'fprop_local_destroy_single': ['RET_64R_branch_reg'], 'driver_add_groups': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'init_timer_list_procfs': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'dmam_match': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'no_llseek': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'init_dl_bandwidth': ['STRH_32_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'its_build_discard_cmd': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'AND_64_log_imm', 'ORR_64_log_imm', 'LDRH_32_ldst_regoff', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'ORR_64_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'fwnode_property_read_u32_array': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'init_timer_key': ['STR_64_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDR_32_ldst_regoff', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'cdev_purge': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'driver_remove_groups': ['RET_64R_branch_reg'], 'f__bitmap_clear': ['AND_32_log_imm', 'UBFM_64M_bitfield', 'ADD_32_addsub_shift', 'MOVN_64_movewide', 'SUBS_32S_addsub_imm', 'ADD_64_addsub_shift', 'LSLV_64_dp_2src', 'B_only_condbranch', 'UBFM_32M_bitfield', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BIC_64_log_shift', 'STR_64_ldst_immpost', 'SUBS_64_addsub_shift', 'SUB_32_addsub_shift', 'CBZ_32_compbranch', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg', 'ORR_64_log_shift', 'ORR_32_log_shift', 'B_only_branch_imm'], 'clk_gpio_gate_disable': ['RET_64R_branch_reg'], 'cpu_idle_poll_setup': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'register_undef_hook': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'strnlen_user': ['SUBS_64S_addsub_imm', 'B_only_condbranch', 'MRS_RS_system', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'SUB_64_addsub_shift', 'AND_64_log_imm', 'CSEL_64_condsel', 'ADD_64_addsub_shift', 'MOVZ_32_movewide', 'CBNZ_32_compbranch', 'UBFM_32M_bitfield', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'ORR_64_log_imm', 'SUB_64_addsub_imm', 'ORR_64_log_shift', 'MOVK_64_movewide', 'BIC_64_log_shift', 'ANDS_64S_log_imm', 'ADD_64_addsub_imm', 'ORR_32_log_shift', 'CBZ_32_compbranch', 'RET_64R_branch_reg', 'CSINC_64_condsel', 'UBFM_64M_bitfield', 'CBZ_64_compbranch', 'CLZ_64_dp_1src', 'ADD_32_addsub_imm', 'SBFM_32M_bitfield', 'ADD_64_addsub_ext'], 'cache_get_priv_group': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'fwnode_graph_get_next_endpoint': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'f__raise_softirq_irqoff': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDRSW_64_ldst_regoff', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'UBFM_64M_bitfield', 'LDR_32_ldst_regoff', 'ORR_32_log_shift', 'STR_32_ldst_regoff', 'RET_64R_branch_reg'], 'irq_chip_pm_put': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'valid_mmap_phys_addr_range': ['ADD_64_addsub_shift', 'ANDS_64S_log_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'aarch64_insn_gen_load_store_reg': ['CBZ_32_compbranch', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDRB_32B_ldst_regoff', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'f__check_hi': ['AND_64_log_imm', 'BICS_64_log_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'early_platform_add_devices': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_regoff', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'LDRB_32_ldst_pos', 'ORR_32_log_imm', 'TBNZ_only_testbranch', 'STRH_32_ldst_pos', 'STRB_32_ldst_pos', 'STR_64_ldst_pos', 'B_only_branch_imm', 'RET_64R_branch_reg'], 'f__dummy_alloc': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'f__atomic_notifier_call_chain': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'prandom_u32_state': ['LDP_32_ldstpair_off', 'AND_32_log_imm', 'EOR_32_log_shift', 'UBFM_32M_bitfield', 'ORR_32_log_shift', 'STP_32_ldstpair_off', 'RET_64R_branch_reg'], 'compute_batch_value': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'UBFM_32M_bitfield', 'MOVZ_32_movewide', 'SUBS_32_addsub_shift', 'CSEL_32_condsel', 'STR_32_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rhashtable_walk_exit': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'CBZ_64_compbranch', 'LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'STP_64_ldstpair_off', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'sigaction_compat_abi': ['RET_64R_branch_reg'], 'd_set_fallthru': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'simple_get_link': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'device_links_read_lock': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__ioread32_copy': ['ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'STR_32_ldst_immpost', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'jiffies_to_msecs': ['UBFM_32M_bitfield', 'RET_64R_branch_reg'], 'rcu_segcblist_entrain': ['LDR_64_ldst_pos', 'UBFM_32M_bitfield', 'CBZ_64_compbranch', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'CBNZ_32_compbranch', 'DMB_BO_system', 'LDP_64_ldstpair_off', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'CSINC_32_condsel', 'ADD_64_addsub_ext', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'wake_q_add': ['ADD_64_addsub_imm', 'MOVZ_64_movewide', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STLXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'CBZ_64_compbranch', 'RET_64R_branch_reg', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'LDR_64_ldst_pos', 'STR_64_ldst_pos'], 'notify_die': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'STP_32_ldstpair_off', 'MOVZ_64_movewide', 'STR_64_ldst_pos', 'MOVN_32_movewide', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_disable_smp_support': ['RET_64R_branch_reg'], 'd_flags_for_inode': ['CBZ_64_compbranch', 'LDRH_32_ldst_pos', 'AND_32_log_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'TBZ_only_testbranch', 'MOVZ_32_movewide', 'CSEL_32_condsel', 'LDR_32_ldst_pos', 'ORR_32_log_imm', 'ANDS_64S_log_imm', 'RET_64R_branch_reg', 'TBNZ_only_testbranch', 'LDR_64_ldst_pos', 'STRH_32_ldst_pos', 'B_only_branch_imm', 'CBNZ_64_compbranch'], 'seq_list_start_head': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUBS_64S_addsub_imm', 'SUB_64_addsub_imm', 'B_only_branch_imm', 'ADDS_64S_addsub_imm', 'MOVZ_64_movewide', 'RET_64R_branch_reg', 'ORR_64_log_shift'], 'keep_bootcon_setup': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'psci_sys_poweroff': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'MOVK_64_movewide', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'gic_mask_irq': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'UBFM_32M_bitfield', 'LSLV_32_dp_2src', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__clk_get_flags': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'class_remove_file_ns': ['RET_64R_branch_reg'], 'rcu_init_percpu_data': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'CBZ_64_compbranch', 'MOVZ_64_movewide', 'MRS_RS_system', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'LDRH_32_ldst_pos', 'STLRH_SL32_ldstexcl', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'STR_64_ldst_regoff', 'SUB_64_addsub_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'get_task_pid': ['CBZ_32_compbranch', 'LDR_64_ldst_pos', 'ORR_32_log_shift', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'CBZ_64_compbranch', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'memblock_end_of_DRAM': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'SUB_32_addsub_imm', 'SMADDL_64WA_dp_3src', 'ADD_64_addsub_shift', 'LDR_64_ldst_regoff', 'RET_64R_branch_reg'], 'aarch64_insn_decode_register': ['SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDRB_32B_ldst_regoff', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'init_reserve_notifier': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'async_unregister_domain': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDRB_32_ldst_pos', 'TBZ_only_testbranch', 'LDR_64_ldst_pos', 'AND_32_log_imm', 'STRB_32_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'MSR_SI_system', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'idle_inject_timer_fn': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'MRS_RS_system', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'group_close_release': ['RET_64R_branch_reg'], 'vmalloc_sync_all': ['RET_64R_branch_reg'], 'bad_inode_mkdir': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'tlb_gather_mmu': ['ADD_64_addsub_imm', 'MOVZ_32_movewide', 'ORR_64_log_shift', 'SUBS_64S_addsub_imm', 'LDRB_32_ldst_pos', 'CSINC_32_condsel', 'STP_64_ldstpair_off', 'BFM_32M_bitfield', 'AND_32_log_imm', 'STP_32_ldstpair_off', 'STRB_32_ldst_pos', 'TBNZ_only_testbranch', 'MOVZ_64_movewide', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg', 'MOVN_64_movewide'], '_raw_spin_lock': ['PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'EOR_32_log_shift', 'CBZ_32_compbranch', 'SEVL_HI_system', 'WFE_HI_system', 'LDAXRH_LR32_ldstexcl', 'RET_64R_branch_reg'], 'vma_interval_tree_augment_rotate': ['SUB_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'LDUR_64_ldst_unscaled', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'memset16': ['UBFM_32M_bitfield', 'MOVZ_64_movewide', 'CBZ_64_compbranch', 'STRH_32_ldst_regoff', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'f__clear_user': ['NOP_HI_system', 'ORR_64_log_shift', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'STR_64_ldst_immpost', 'ADDS_64S_addsub_imm', 'STR_32_ldst_immpost', 'SUB_64_addsub_imm', 'STRH_32_ldst_immpost', 'STRB_32_ldst_immpost', 'MOVZ_64_movewide', 'RET_64R_branch_reg'], 'rcu_cpu_stall_reset': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MOVN_64_movewide', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'SUB_64_addsub_imm', 'B_only_condbranch', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'fdt_move': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'LDR_32_ldst_pos', 'MOVN_32_movewide', 'REV_32_dp_1src', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'power_supply_get_drvdata': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'swiotlb_dma_supported': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'its_build_mapc_cmd': ['MOVZ_64_movewide', 'STRB_32_ldst_pos', 'LDR_64_ldst_pos', 'AND_64_log_imm', 'LDRH_32_ldst_pos', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CSINC_64_condsel', 'RET_64R_branch_reg'], 'cap_settime': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'fdt_reserved_mem_save_node': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'SBFM_64M_bitfield', 'MOVZ_64_movewide', 'ADD_32_addsub_imm', 'STR_32_ldst_pos', 'MADD_64A_dp_3src', 'ADD_64_addsub_shift', 'STR_64_ldst_regoff', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'detach_if_pending': ['LDR_64_ldst_pos', 'UBFM_32M_bitfield', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'CBNZ_32_compbranch', 'MOVZ_64_movewide', 'MOVZ_32_movewide', 'MOVK_64_movewide', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'B_only_branch_imm', 'LDR_32_ldst_pos', 'ADD_64_addsub_imm', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'CBZ_32_compbranch', 'LSLV_64_dp_2src', 'LDR_64_ldst_regoff', 'BIC_64_log_shift', 'STR_64_ldst_regoff', 'LDP_64_ldstpair_off', 'CBNZ_64_compbranch'], 'cpuhp_create': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'STR_32_ldst_pos', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'class_attr_store': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_64_movewide'], '_raw_spin_lock_irqsave': ['MRS_RS_system', 'MSR_SI_system', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'EOR_32_log_shift', 'CBZ_32_compbranch', 'SEVL_HI_system', 'WFE_HI_system', 'LDAXRH_LR32_ldstexcl', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'timekeeping_max_deferment': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'DMB_BO_system', 'LDR_64_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'YIELD_HI_system', 'B_only_branch_imm'], 'siphash_1u64': ['LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'EOR_64_log_shift', 'ADD_64_addsub_shift', 'EXTR_64_extract', 'EOR_64_log_imm', 'RET_64R_branch_reg'], 'tlb_remove_table_smp_sync': ['RET_64R_branch_reg'], 'reboot_setup': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'STR_32_ldst_pos', 'LDRB_32_ldst_pos', 'SUB_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDRB_32B_ldst_regoff', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'pmd_clear_bad': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'DSB_BO_system', 'ISB_BI_system', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'irq_chip_mask_parent': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'idle_cpu': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'LDR_32_ldst_pos', 'CBNZ_32_compbranch', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel'], 'its_build_vmapti_cmd': ['LDRB_32_ldst_pos', 'MOVZ_64_movewide', 'CBZ_32_compbranch', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'UBFM_64M_bitfield', 'LDP_64_ldstpair_off', 'AND_64_log_imm', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'class_compat_create_link': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], '_raw_spin_lock_irq': ['MSR_SI_system', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'EOR_32_log_shift', 'CBZ_32_compbranch', 'SEVL_HI_system', 'WFE_HI_system', 'LDAXRH_LR32_ldstexcl', 'RET_64R_branch_reg'], 'memblock_phys_mem_size': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'simple_getattr': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'MOVZ_32_movewide', 'UBFM_64M_bitfield', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__sg_page_iter_next': ['LDR_32_ldst_pos', 'CBZ_32_compbranch', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'UBFM_32M_bitfield', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'plist_del': ['LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDUR_64_ldst_unscaled', 'SUB_64_addsub_imm', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'RET_64R_branch_reg', 'STP_64_ldstpair_off', 'B_only_branch_imm'], 'simple_xattr_list_add': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'xattr_getsecurity': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'prandom_bytes_state': ['STP_64_ldstpair_pre', 'SUBS_64S_addsub_imm', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'B_only_condbranch', 'SUB_64_addsub_imm', 'AND_64_log_imm', 'ADD_64_addsub_shift', 'BL_only_branch_imm', 'STR_32_ldst_immpost', 'SUBS_64_addsub_shift', 'CBNZ_64_compbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'STRB_32_ldst_immpost', 'UBFM_32M_bitfield', 'B_only_branch_imm'], 'hook_debug_fault_code': ['SUBS_32S_addsub_imm', 'B_only_condbranch', 'UNALLOCATED_18_exception', 'SBFM_64M_bitfield', 'MOVZ_64_movewide', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MADD_64A_dp_3src', 'ADD_64_addsub_shift', 'STR_64_ldst_regoff', 'STP_32_ldstpair_off', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], '_fdt_packblocks': ['STP_64_ldstpair_pre', 'SBFM_64M_bitfield', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'ADD_32_addsub_imm', 'ORR_32_log_shift', 'LDR_32_ldst_pos', 'ADD_32_addsub_shift', 'REV_32_dp_1src', 'ADD_64_addsub_shift', 'BL_only_branch_imm', 'MOVZ_32_movewide', 'ADD_64_addsub_ext', 'STR_32_ldst_pos', 'LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'current_umask': ['MRS_RS_system', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'rcu_segcblist_extract_pend_cbs': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'f__register_binfmt': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXR_SR32_ldstexcl', 'MOVZ_32_movewide', 'STLRB_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'BL_only_branch_imm', 'B_only_branch_imm', 'UNALLOCATED_18_exception'], 'generic_fillattr': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'MOVZ_64_movewide', 'LDR_32_ldst_pos', 'STR_32_ldst_pos', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'STRH_32_ldst_pos', 'LDP_64_ldstpair_off', 'STP_64_ldstpair_off', 'LSLV_32_dp_2src', 'ANDS_64_log_shift', 'B_only_condbranch', 'AND_32_log_imm', 'TBZ_only_testbranch', 'ORR_64_log_imm', 'RET_64R_branch_reg'], 'ip6_addr_string_sa': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDRB_32_ldst_immpost', 'STRB_32_ldst_pos', 'LDRB_32_ldst_immpre', 'LDRB_32B_ldst_regoff', 'ANDS_64S_log_imm', 'B_only_condbranch', 'SUB_32_addsub_imm', 'SUBS_32S_addsub_imm', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'atomic_notifier_call_chain': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'MOVN_32_movewide', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'el2_error_invalid': ['B_only_branch_imm'], 'of_clk_hw_onecell_get': ['LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_ext', 'LDR_64_ldst_pos', 'RET_64R_branch_reg', 'MOVN_64_movewide'], 'attach_entity_load_avg': ['LDR_32_ldst_pos', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'ADD_32_addsub_shift', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'MADD_32A_dp_3src', 'UBFM_64M_bitfield', 'STP_32_ldstpair_off', 'CBZ_64_compbranch', 'AND_64_log_imm', 'MADD_64A_dp_3src', 'UDIV_64_dp_2src', 'ADD_64_addsub_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__clk_get_hw': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'clock_was_set': ['RET_64R_branch_reg'], 'si_meminfo': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'STP_64_ldstpair_off', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'shmem_get_unmapped_area': ['STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__raw_notifier_call_chain': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'mntget': ['CBZ_64_compbranch', 'MRS_RS_system', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'f__ptrace_link': ['LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'STR_64_ldst_pos', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'devm_clk_match': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'f__clk_get_enable_count': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'f__put_unused_fd': ['SUBS_32S_addsub_imm', 'ADD_32_addsub_imm', 'LDR_64_ldst_pos', 'CSEL_32_condsel', 'SUBS_32_addsub_shift', 'AND_32_log_imm', 'MOVZ_64_movewide', 'SBFM_32M_bitfield', 'CSNEG_32_condsel', 'UBFM_32M_bitfield', 'SBFM_64M_bitfield', 'LSLV_64_dp_2src', 'UBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'BIC_64_log_shift', 'STR_64_ldst_regoff', 'LDR_32_ldst_pos', 'B_only_condbranch', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'wq_clamp_max_active.isra.4': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'MOVZ_32_movewide', 'TBZ_only_testbranch', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'UBFM_32M_bitfield', 'SUBS_32_addsub_shift', 'CSEL_32_condsel', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'pgd_cache_init': ['RET_64R_branch_reg'], 'kernel_neon_end': ['ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'ADD_64_addsub_imm', 'CSINC_32_condsel', 'CBNZ_32_compbranch', 'MRS_RS_system', 'STRB_32BL_ldst_regoff', 'RET_64R_branch_reg', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'B_only_branch_imm'], 'switched_to_stop': ['UNALLOCATED_18_exception'], 'f__mod_node_page_state': ['LDR_64_ldst_pos', 'ORR_32_log_shift', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'LDRSB_64BL_ldst_regoff', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'SBFM_32M_bitfield', 'STRB_32BL_ldst_regoff', 'RET_64R_branch_reg', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide'], 'bad_inode_atomic_open': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'timespec64_add_safe': ['MOVZ_64_movewide', 'ADD_64_addsub_shift', 'MOVK_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVN_64_movewide', 'ADD_64_addsub_imm', 'ORR_64_log_shift', 'TBZ_only_testbranch', 'SUB_64_addsub_imm', 'ADDS_64_addsub_shift', 'CCMP_64_condcmp_reg', 'CSINC_32_condsel', 'CSEL_64_condsel', 'SUBS_32S_addsub_imm', 'RET_64R_branch_reg'], 'get_next_ino': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDR_32_ldst_regoff', 'ANDS_64S_log_imm', 'B_only_condbranch', 'ADD_32_addsub_imm', 'ADDS_32S_addsub_imm', 'CSEL_32_condsel', 'STR_32_ldst_regoff', 'RET_64R_branch_reg', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'STLXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'SUB_32_addsub_imm'], 'bus_get_kset': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'rcu_gp_is_normal': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'fs_names_setup': ['ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'devm_pages_match': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'arch_counter_get_cntvct_mem': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ORR_32_log_shift', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'of_fwnode_get': ['CBZ_64_compbranch', 'ADDS_64S_addsub_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'MOVZ_64_movewide', 'RET_64R_branch_reg', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel'], 'retire_userns_sysctls': ['RET_64R_branch_reg'], 'set_normalized_timespec64': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVN_64_movewide', 'ADD_64_addsub_shift', 'ADD_64_addsub_imm', 'TBZ_only_testbranch', 'ADDS_64_addsub_shift', 'SUB_64_addsub_imm', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'sg_init_table': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'UBFM_64M_bitfield', 'SUB_32_addsub_imm', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'BL_only_branch_imm', 'LDR_64_ldst_regoff', 'AND_64_log_imm', 'ORR_64_log_imm', 'STR_64_ldst_regoff', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'vfs_llseek': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'TBZ_only_testbranch', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr'], 'devm_clk_match_1': ['CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'device_remove_file_self': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'proc_dostring': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'device_is_bound': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'memory_open': ['LDR_32_ldst_pos', 'AND_32_log_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'SBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'STP_64_ldstpair_pre', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide', 'MOVN_32_movewide'], 'set_handle_irq': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'parameqn': ['CBZ_64_compbranch', 'MOVZ_64_movewide', 'MOVZ_32_movewide', 'B_only_branch_imm', 'SUBS_32S_addsub_imm', 'CSEL_32_condsel', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'LDRB_32BL_ldst_regoff', 'RET_64R_branch_reg'], 'pipe_proc_fn': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'vma_interval_tree_iter_first': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUB_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'clk_composite_recalc_rate': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__mutex_init': ['ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STRH_32_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'search_cmp_ftr_reg': ['LDR_32_ldst_pos', 'SUB_32_addsub_shift', 'RET_64R_branch_reg'], 'rcu_segcblist_accelerate': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDP_64_ldstpair_off', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'TBNZ_only_testbranch', 'STP_64_ldstpair_off', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STR_64_ldst_pos', 'B_only_branch_imm'], 'proc_dointvec_minmax': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'iov_iter_single_seg_count': ['LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'f__srcu_notifier_call_chain': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ORR_32_log_shift', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rcu_exp_batches_completed': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'irq_nested_primary_handler': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'refcount_dec_if_one': ['MOVZ_64_movewide', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'EOR_32_log_imm', 'CBNZ_32_compbranch', 'STLXR_SR32_ldstexcl', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'pm_generic_runtime_resume': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'clocksource_suspend': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_imm', 'ORR_64_log_shift', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'alarm_expires_remaining': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'LDR_32_ldst_pos', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'BLR_64_branch_reg', 'SUB_64_addsub_shift', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'strncmp': ['CBZ_64_compbranch', 'EOR_64_log_shift', 'ORR_64_log_imm', 'ANDS_64S_log_imm', 'B_only_condbranch', 'SUB_64_addsub_imm', 'UBFM_64M_bitfield', 'LDR_64_ldst_immpost', 'SUBS_64S_addsub_imm', 'SUB_64_addsub_shift', 'CSINV_64_condsel', 'BICS_64_log_shift', 'CCMP_64_condcmp_imm', 'TBZ_only_testbranch', 'MOVN_64_movewide', 'LSLV_64_dp_2src', 'BIC_64_log_shift', 'ORR_64_log_shift', 'B_only_branch_imm', 'AND_64_log_imm', 'LSRV_64_dp_2src', 'ADD_64_addsub_shift', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'LDRB_32_ldst_immpost', 'CCMP_32_condcmp_imm', 'CCMP_32_condcmp_reg', 'CBNZ_64_compbranch', 'SUBS_32S_addsub_imm', 'RET_64R_branch_reg', 'LDR_64_ldst_regoff', 'REV_64_dp_1src', 'CLZ_64_dp_1src', 'MOVZ_64_movewide'], 'dirty_background_bytes_handler': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'CCMP_32_condcmp_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__of_find_all_nodes.part.0': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'flush_icache_range': ['MRS_RS_system', 'NOP_HI_system', 'UBFM_64M_bitfield', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'SUB_64_addsub_imm', 'BIC_64_log_shift', 'SYS_CR_system', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'DSB_BO_system', 'AND_64_log_imm', 'ISB_BI_system', 'RET_64R_branch_reg'], 'rcu_sysrq_start': ['ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'CBNZ_32_compbranch', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'arch_send_call_function_single_ipi': ['UBFM_64M_bitfield', 'ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'SUB_64_addsub_shift', 'MOVZ_32_movewide', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'skip_atoi': ['ORR_64_log_shift', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ADD_32_addsub_shift', 'LDRB_32_ldst_pos', 'LDURB_32_ldst_unscaled', 'SUB_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'RET_64R_branch_reg'], 'sys_rt_sigreturn_wrapper': ['ADD_64_addsub_imm', 'B_only_branch_imm'], 'f__page_mapcount': ['ORR_64_log_shift', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'TBZ_only_testbranch', 'ADD_32_addsub_shift', 'RET_64R_branch_reg'], 'SyS_sched_get_priority_max': ['SUBS_32S_addsub_imm', 'B_only_condbranch', 'MOVN_64_movewide', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDRB_32B_ldst_regoff', 'ADR_only_pcreladdr', 'ADD_64_addsub_ext', 'BR_64_branch_reg'], 'fwnode_handle_put': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'gic_peek_irq.isra.0': ['SUBS_32S_addsub_imm', 'MOVZ_32_movewide', 'LSLV_32_dp_2src', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'UBFM_32M_bitfield', 'UBFM_64M_bitfield', 'ADD_64_addsub_ext', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'ANDS_32_log_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MRS_RS_system', 'LDR_64_ldst_regoff', 'ADD_64_addsub_imm', 'B_only_branch_imm'], 'gic_peek_irq.isra.1': ['LDR_64_ldst_pos', 'UBFM_32M_bitfield', 'UBFM_64M_bitfield', 'ADD_64_addsub_ext', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'LSLV_32_dp_2src', 'ANDS_32_log_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'is_bad_inode': ['LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'setup_slab_nomerge': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'io_schedule_finish': ['MRS_RS_system', 'LDRB_32_ldst_pos', 'BFM_32M_bitfield', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'iov_iter_kvec': ['TBZ_only_testbranch', 'STR_32_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'init_mmap_min_addr': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'round_jiffies_up_relative': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'LDR_32_ldst_regoff', 'MOVK_64_movewide', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'ADD_32_addsub_shift', 'ADD_64_addsub_ext', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'SUB_64_addsub_shift', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'special_mapping_close': ['RET_64R_branch_reg'], 'irq_domain_alloc_irqs_hierarchy': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'aarch64_insn_gen_data1': ['SUBS_32S_addsub_imm', 'B_only_condbranch', 'CBZ_32_compbranch', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'AND_32_log_imm', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'B_only_branch_imm', 'ORR_32_log_imm'], 'iov_iter_bvec': ['TBZ_only_testbranch', 'STR_32_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'bad_inode_permission': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'anon_pipe_buf_steal': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'SUB_64_addsub_imm', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'ORR_64_log_imm', 'STR_64_ldst_pos'], 'clk_hw_get_flags': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'seq_putc': ['LDR_64_ldst_pos', 'UBFM_32M_bitfield', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STRB_32BL_ldst_regoff', 'RET_64R_branch_reg'], 'get_close_on_exec': ['MRS_RS_system', 'LDR_64_ldst_pos', 'SUBS_32S_addsub_imm', 'ADD_32_addsub_imm', 'CSEL_32_condsel', 'SBFM_32M_bitfield', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'LSRV_64_dp_2src', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'dev_fwnode': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'pick_next_task_stop': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'MOVZ_64_movewide', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'STR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'arch_timer_shutdown_virt': ['MRS_RS_system', 'AND_64_log_imm', 'MSR_SR_system', 'ISB_BI_system', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'update_curr_stop': ['RET_64R_branch_reg'], 'cmp_ex_sort': ['LDRSW_64_ldst_pos', 'MOVZ_32_movewide', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'CSINV_32_condsel', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'fwnode_property_read_string': ['STP_64_ldstpair_pre', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'CSEL_32_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cpudl_set_freecpu': ['STP_64_ldstpair_pre', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'percpu_ref_noop_confirm_switch': ['RET_64R_branch_reg'], 'cpu_subsys_match': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'sys_vhangup': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'boot_cpu_state_init': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDRSW_64_ldst_regoff', 'MOVZ_32_movewide', 'LDR_64_ldst_regoff', 'STR_32_ldst_regoff', 'RET_64R_branch_reg'], 'invalid_mkclean_vma': ['LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'EOR_64_log_imm', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'fdt_bus_default_map': ['ORR_32_log_shift', 'MOVZ_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDR_32_ldst_regoff', 'ADD_64_addsub_imm', 'REV_32_dp_1src', 'ORR_64_log_shift', 'B_only_branch_imm', 'SBFM_64M_bitfield', 'ADD_64_addsub_ext', 'ADD_64_addsub_shift', 'MOVN_64_movewide', 'SUB_64_addsub_shift', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'no_blink': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'proc_dointvec_ms_jiffies': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'memblock_allow_resize': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'arch_early_irq_init': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'umount_check': ['MOVZ_32_movewide', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'inc_node_state': ['LDR_64_ldst_pos', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'MRS_RS_system', 'LDRB_32BL_ldst_regoff', 'UBFM_32M_bitfield', 'SBFM_64M_bitfield', 'SBFM_32M_bitfield', 'SUB_32_addsub_shift', 'SUBS_64_addsub_shift', 'SUB_64_addsub_shift', 'MOVZ_64_movewide', 'B_only_condbranch', 'AND_64_log_imm', 'PRFM_P_ldst_pos', 'LDXRB_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXRB_SR32_ldstexcl', 'SUBS_64S_addsub_ext', 'CBZ_64_compbranch', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'ADRP_only_pcreladdr', 'RET_64R_branch_reg'], 'f__radix_tree_lookup': ['MOVZ_64_movewide', 'LDR_64_ldst_pos', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'LDRB_32_ldst_pos', 'LSLV_64_dp_2src', 'SUB_64_addsub_imm', 'SUBS_64_addsub_shift', 'LSRV_64_dp_2src', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'RET_64R_branch_reg', 'CBNZ_64_compbranch', 'B_only_branch_imm'], 'rhashtable_walk_enter': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STP_32_ldstpair_off', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'LDR_64_ldst_immpre', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'clk_composite_set_parent': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'set_task_cpu': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'ORR_64_log_shift', 'LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'STR_64_ldst_pos', 'DMB_BO_system', 'STR_32_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'clk_enable_unlock.part.7': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'init_user_reserve': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'UBFM_64M_bitfield', 'SUBS_64_addsub_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'f': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'empty_dir_getattr': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'switched_from_rt': ['LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'RET_64R_branch_reg', 'CBNZ_32_compbranch', 'LDRSW_64_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'CBNZ_64_compbranch', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'STR_64_ldst_regoff'], 'lazy_max_pages': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'CBZ_32_compbranch', 'CLZ_32_dp_1src', 'MOVZ_32_movewide', 'SUB_32_addsub_shift', 'UBFM_64M_bitfield', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'setup_nr_cpu_ids': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'BL_only_branch_imm', 'ADD_32_addsub_imm', 'LDP_64_ldstpair_post', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__show_regs': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'CSEL_32_condsel', 'SUB_32_addsub_imm', 'TBZ_only_testbranch', 'ADDS_32S_addsub_imm', 'ORR_32_log_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'SUBS_32S_addsub_imm'], 'of_dma_deconfigure': ['RET_64R_branch_reg'], 'gcd': ['SUBS_64S_addsub_imm', 'ORR_64_log_shift', 'CCMP_64_condcmp_reg', 'B_only_condbranch', 'RBIT_64_dp_1src', 'CLZ_64_dp_1src', 'LSRV_64_dp_2src', 'SUBS_64_addsub_shift', 'SUB_64_addsub_shift', 'AND_64_log_shift', 'RET_64R_branch_reg', 'LSLV_64_dp_2src'], 'f__srcu_read_unlock': ['DMB_BO_system', 'LDR_64_ldst_pos', 'SBFM_64M_bitfield', 'ADD_64_addsub_imm', 'MRS_RS_system', 'ADD_64_addsub_shift', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'wq_worker_waking_up': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'ANDS_32_log_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'tick_broadcast_init': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'alarmtimer_resume': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'calibrate_delay_is_known': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'clk_gpio_gate_is_enabled': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'fwnode_property_get_reference_args': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide'], 'set_cpus_allowed_common': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'STR_32_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rcu_batches_completed': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'sd_degenerate': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'ANDS_32_log_shift', 'SUBS_64_addsub_shift', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'ANDS_64S_log_imm', 'CSINC_32_condsel'], 'f__anon_vma_interval_tree_subtree_search': ['LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_shift', 'CBNZ_64_compbranch', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'MOVZ_64_movewide', 'RET_64R_branch_reg'], 'strnchr': ['CBZ_64_compbranch', 'LDRB_32_ldst_pos', 'CBZ_32_compbranch', 'AND_32_log_imm', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_shift', 'B_only_branch_imm', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'MOVZ_64_movewide', 'RET_64R_branch_reg'], 'task_will_free_mem': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'TBZ_only_testbranch', 'SUBS_32S_addsub_imm', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'SUB_64_addsub_imm', 'LDR_64_ldst_immpre', 'CBNZ_64_compbranch', 'CCMP_64_condcmp_reg', 'B_only_branch_imm'], 'arch_timer_set_next_event_phys': ['ORR_64_log_shift', 'MRS_RS_system', 'AND_64_log_imm', 'MSR_SR_system', 'ISB_BI_system', 'ORR_64_log_imm', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__clean_dcache_area_pou': ['MRS_RS_system', 'NOP_HI_system', 'UBFM_64M_bitfield', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'ADD_64_addsub_shift', 'SUB_64_addsub_imm', 'BIC_64_log_shift', 'SYS_CR_system', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'DSB_BO_system', 'RET_64R_branch_reg'], 'arch_timer_get_rate': ['ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'find_vmap_area': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDUR_64_ldst_unscaled', 'SUB_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'CBNZ_64_compbranch', 'MOVZ_64_movewide', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'put_prev_task_stop': ['LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'pm_qos_read_value': ['LDR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__dummy_map_sg': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'arch_probe_nr_irqs': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'its_build_movi_cmd': ['LDR_64_ldst_pos', 'LDR_32_ldst_pos', 'AND_64_log_imm', 'ORR_64_log_imm', 'LDRH_32_ldst_regoff', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'ORR_64_log_shift', 'STR_32_ldst_pos', 'LDRH_32_ldst_pos', 'STRH_32_ldst_pos', 'RET_64R_branch_reg'], 'f__bitmap_equal': ['UBFM_32M_bitfield', 'CBZ_32_compbranch', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'B_only_branch_imm', 'LDR_64_ldst_immpost', 'ADD_32_addsub_imm', 'SUBS_32_addsub_shift', 'ANDS_64S_log_imm', 'SUB_32_addsub_shift', 'LDR_64_ldst_regoff', 'MOVN_64_movewide', 'LSRV_64_dp_2src', 'EOR_64_log_shift', 'ANDS_64_log_shift', 'CSINC_32_condsel', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'f__dummy_mapping_error': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'timecounter_read': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'SUB_64_addsub_shift', 'LDR_32_ldst_pos', 'AND_64_log_shift', 'MADD_64A_dp_3src', 'LSRV_64_dp_2src', 'ADD_64_addsub_shift', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_timer_handler_virt_mem': ['LDUR_64_ldst_unscaled', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post'], 'arch_cpu_idle_enter': ['RET_64R_branch_reg'], 'f__hyp_set_vectors': ['ORR_64_log_shift', 'MOVZ_64_movewide', 'UNALLOCATED_13_exception', 'RET_64R_branch_reg'], 'iommu_is_span_boundary': ['CBZ_64_compbranch', 'SUB_64_addsub_imm', 'ANDS_64_log_shift', 'B_only_condbranch', 'ADD_64_addsub_ext', 'AND_64_log_shift', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'prep_compound_page': ['ADD_64_addsub_imm', 'MOVZ_32_movewide', 'STP_32_ldstpair_off', 'LSLV_32_dp_2src', 'SUBS_32S_addsub_imm', 'LDR_64_ldst_pos', 'ORR_64_log_imm', 'STR_64_ldst_pos', 'B_only_condbranch', 'SUB_32_addsub_imm', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'ADD_64_addsub_shift', 'STR_32_ldst_pos', 'STUR_64_ldst_unscaled', 'SUBS_64_addsub_shift', 'MOVN_32_movewide', 'RET_64R_branch_reg'], 'ns_to_timespec64': ['CBZ_64_compbranch', 'MOVZ_64_movewide', 'SBFM_64M_bitfield', 'MOVK_64_movewide', 'SMULH_64_dp_3src', 'SUB_64_addsub_shift', 'ORR_64_log_shift', 'MSUB_64A_dp_3src', 'ORR_32_log_shift', 'TBNZ_only_testbranch', 'RET_64R_branch_reg', 'SUB_64_addsub_imm', 'ADD_32_addsub_shift', 'B_only_branch_imm'], 'f__sw_hweight16': ['MOVZ_32_movewide', 'AND_32_log_shift', 'SUB_32_addsub_shift', 'ADD_32_addsub_shift', 'UBFM_32M_bitfield', 'RET_64R_branch_reg'], 'tick_is_broadcast_device': ['CBZ_64_compbranch', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'gup_fast_permitted': ['SBFM_64M_bitfield', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'ntp_update_frequency': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'ADD_64_addsub_shift', 'MADD_64A_dp_3src', 'SUB_64_addsub_shift', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'dirty_background_ratio_handler': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'CCMP_32_condcmp_imm', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'task_active_pid_ns': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'ADD_64_addsub_shift', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'fdt_string': ['LDR_32_ldst_pos', 'REV_32_dp_1src', 'ADD_64_addsub_ext', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'nsecs_to_jiffies64': ['MOVZ_64_movewide', 'MOVK_64_movewide', 'UMULH_64_dp_3src', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'mutex_trylock': ['LDR_64_ldst_pos', 'MRS_RS_system', 'ANDS_64S_log_imm', 'ORR_64_log_shift', 'B_only_condbranch', 'SUBS_64_addsub_shift', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'TBZ_only_testbranch', 'AND_64_log_imm', 'PRFM_P_ldst_pos', 'LDAXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'MOVZ_32_movewide'], 'f__mnt_is_readonly': ['LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'LDR_64_ldst_pos', 'AND_32_log_imm', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'kthread_data': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'single_next': ['LDR_64_ldst_pos', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__ctzsi2': ['SBFM_64M_bitfield', 'RBIT_64_dp_1src', 'CLZ_64_dp_1src', 'RET_64R_branch_reg'], 'arch_dynirq_lower_bound': ['RET_64R_branch_reg'], 'workingset_activation': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'poll_initwait': ['ADRP_only_pcreladdr', 'MOVN_64_movewide', 'ADD_64_addsub_imm', 'STP_32_ldstpair_off', 'MRS_RS_system', 'STP_64_ldstpair_off', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'arch_vma_name': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'proc_douintvec': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'merge': ['STP_64_ldstpair_pre', 'SUBS_64S_addsub_imm', 'CCMP_64_condcmp_imm', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'B_only_condbranch', 'B_only_branch_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'SUBS_32S_addsub_imm', 'CSEL_64_condsel', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'el2_setup': ['MSR_SI_system', 'MRS_RS_system', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'AND_64_log_imm', 'MSR_SR_system', 'MOVZ_32_movewide', 'ISB_BI_system', 'RET_64R_branch_reg', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'CBZ_64_compbranch', 'ORR_64_log_imm', 'CBNZ_64_compbranch', 'UBFM_64M_bitfield', 'TBZ_only_testbranch', 'SBFM_64M_bitfield', 'CSEL_64_condsel', 'B_only_branch_imm', 'MOVK_64_movewide', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ERET_64E_branch_reg'], 'sg_miter_stop': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'LDP_32_ldstpair_off', 'LDR_32_ldst_pos', 'ADD_32_addsub_shift', 'SUB_32_addsub_shift', 'STP_32_ldstpair_off', 'TBZ_only_testbranch', 'SUB_64_addsub_imm', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'MRS_RS_system', 'SUB_32_addsub_imm', 'STR_32_ldst_pos', 'STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'arch_counter_get_cntpct': ['ISB_BI_system', 'MRS_RS_system', 'RET_64R_branch_reg'], 'vm_get_page_prot': ['ADRP_only_pcreladdr', 'AND_64_log_imm', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'RET_64R_branch_reg'], 'resource_alignment': ['LDR_64_ldst_pos', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'RET_64R_branch_reg', 'MOVZ_64_movewide', 'LDP_64_ldstpair_off', 'ADD_64_addsub_imm', 'SUB_64_addsub_shift'], 'hrtimers_prepare_cpu': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ORR_64_log_shift', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'STR_32_ldst_pos', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'fwnode_graph_get_remote_endpoint': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'its_irq_compose_msi_msg': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'STR_32_ldst_pos', 'UBFM_64M_bitfield', 'SUB_32_addsub_shift', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'pagevec_remove_exceptionals': ['LDR_64_ldst_pos', 'CBZ_32_compbranch', 'MOVZ_32_movewide', 'ADD_64_addsub_ext', 'ADD_32_addsub_imm', 'TBNZ_only_testbranch', 'STR_64_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SBFM_64M_bitfield', 'RET_64R_branch_reg', 'MOVZ_64_movewide', 'B_only_branch_imm'], 'of_bus_isa_count_cells': ['CBZ_64_compbranch', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'memscan': ['CBZ_64_compbranch', 'LDRB_32_ldst_pos', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_shift', 'B_only_branch_imm', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'f__next_reserved_mem_region': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'SUB_64_addsub_imm', 'RET_64R_branch_reg', 'MOVN_64_movewide'], 'init_cpu_present': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'drop_nlink': ['LDR_32_ldst_pos', 'SUB_32_addsub_imm', 'STR_32_ldst_pos', 'CBNZ_32_compbranch', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'RET_64R_branch_reg'], 'f__get_task_comm': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'klist_add_head': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'BL_only_branch_imm', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cpu_stop_init_done': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'STR_32_ldst_immpost', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'dump_mem_limit': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'account_system_index_time': ['LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'ADD_64_addsub_ext', 'MRS_RS_system', 'LDR_64_ldst_regoff', 'STR_64_ldst_regoff', 'RET_64R_branch_reg'], 'f__round_jiffies': ['ADD_32_addsub_shift', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'SBFM_64M_bitfield', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'UMULH_64_dp_3src', 'SUB_64_addsub_shift', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'ADD_64_addsub_imm', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'get_rr_interval_idle': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__anon_vma_interval_tree_augment_rotate': ['SUB_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'LDUR_64_ldst_unscaled', 'LDP_64_ldstpair_off', 'SUB_64_addsub_shift', 'ADD_64_addsub_shift', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'rcu_cblist_init': ['STP_64_ldstpair_off', 'RET_64R_branch_reg'], 'klist_node_attached': ['LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'sys_getgid': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'sparse_decode_mem_map': ['AND_64_log_imm', 'ADD_64_addsub_shift', 'RET_64R_branch_reg'], 'devm_kmalloc_release': ['RET_64R_branch_reg'], 'simple_transaction_set': ['SUBS_64S_addsub_imm', 'LDR_64_ldst_pos', 'B_only_condbranch', 'DMB_BO_system', 'STR_64_ldst_pos', 'RET_64R_branch_reg', 'UNALLOCATED_18_exception'], 'drain_zonestat': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDRSB_32_ldst_pos', 'SBFM_64M_bitfield', 'CBZ_32_compbranch', 'STRB_32_ldst_pos', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'ADD_64_addsub_shift', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'set_cpu_boot_mode_flag': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'STR_32_ldst_pos', 'DMB_BO_system', 'SYS_CR_system', 'RET_64R_branch_reg'], 'cpu_load_update_active': ['LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'MOVZ_32_movewide', 'STR_64_ldst_pos', 'SUB_32_addsub_imm', 'ORR_64_log_shift', 'SUBS_64_addsub_shift', 'SBFM_64M_bitfield', 'B_only_condbranch', 'ADD_64_addsub_shift', 'MADD_64A_dp_3src', 'UBFM_32M_bitfield', 'LSRV_64_dp_2src', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'STR_64_ldst_immpost', 'STP_64_ldstpair_pre', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'put_dec_full8': ['MOVZ_32_movewide', 'MOVZ_64_movewide', 'MOVK_32_movewide', 'MOVK_64_movewide', 'UMADDL_64WA_dp_3src', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'ORR_64_log_shift', 'UBFM_64M_bitfield', 'MADD_64A_dp_3src', 'MSUB_32A_dp_3src', 'LDRH_32_ldst_regoff', 'MADD_32A_dp_3src', 'STRH_32_ldst_pos', 'UBFM_32M_bitfield', 'RET_64R_branch_reg'], 'bad_inode_set_acl': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'test_and_change_bit': ['AND_32_log_imm', 'EOR_32_log_shift', 'MOVZ_64_movewide', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LSLV_64_dp_2src', 'LDXR_LR64_ldstexcl', 'LSRV_64_dp_2src', 'EOR_64_log_shift', 'STLXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'AND_64_log_imm', 'RET_64R_branch_reg'], 'generic_permission': ['LDRH_32_ldst_pos', 'AND_32_log_imm', 'BICS_32_log_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'SUBS_32S_addsub_imm', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'ORR_64_log_shift', 'TBZ_only_testbranch', 'ANDS_32_log_shift', 'BL_only_branch_imm', 'ANDS_32S_log_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'TBNZ_only_testbranch', 'B_only_branch_imm', 'MOVN_32_movewide'], 'errseq_sample': ['ORR_64_log_shift', 'LDR_32_ldst_pos', 'CBZ_32_compbranch', 'ORR_32_log_imm', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'ORR_32_log_shift', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STLXR_SR32_ldstexcl', 'DMB_BO_system', 'RET_64R_branch_reg'], 'proc_dointvec_userhz_jiffies': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'irq_chip_ack_parent': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'irq_chip_unmask_parent': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'mod_zone_page_state': ['LDR_64_ldst_pos', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'MRS_RS_system', 'LDRB_32BL_ldst_regoff', 'UBFM_32M_bitfield', 'SBFM_64M_bitfield', 'SBFM_32M_bitfield', 'SUB_64_addsub_shift', 'MOVZ_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'AND_64_log_imm', 'PRFM_P_ldst_pos', 'LDXRB_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXRB_SR32_ldstexcl', 'SUBS_64S_addsub_ext', 'CBZ_64_compbranch', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'ADRP_only_pcreladdr', 'RET_64R_branch_reg'], 'of_print_phandle_args': ['RET_64R_branch_reg'], 'preserve_boot_args': ['ORR_64_log_shift', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'DMB_BO_system', 'MOVZ_64_movewide', 'B_only_branch_imm'], 'invalid_migration_vma': ['LDR_64_ldst_pos', 'TBZ_only_testbranch', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'iomem_map_sanity_check': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'ANDS_64S_log_imm', 'B_only_condbranch', 'ADD_64_addsub_shift', 'SUB_64_addsub_imm', 'UBFM_64M_bitfield', 'LDR_64_ldst_pos', 'CBNZ_64_compbranch', 'B_only_branch_imm', 'SUBS_64_addsub_shift', 'TBZ_only_testbranch', 'CBZ_64_compbranch', 'LDXR_LR32_ldstexcl', 'SUB_32_addsub_imm', 'STLXR_SR32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'MOVN_32_movewide'], 'of_dev_node_match': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'bad_inode_unlink': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'rcu_early_boot_tests': ['RET_64R_branch_reg'], 'add_range': ['SUBS_64_addsub_shift', 'CCMP_32_condcmp_reg', 'B_only_condbranch', 'SBFM_64M_bitfield', 'ADD_32_addsub_imm', 'ADD_64_addsub_shift', 'STR_64_ldst_regoff', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'update_fast_timekeeper': ['ADD_64_addsub_imm', 'DMB_BO_system', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'STR_32_ldst_pos', 'LDP_64_ldstpair_off', 'STP_64_ldstpair_off', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'STR_32_ldst_immpost', 'RET_64R_branch_reg'], 'open_softirq': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_64_ldst_regoff', 'RET_64R_branch_reg'], 'device_dma_supported': ['LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'dma_init_reserved_memory': ['STP_64_ldstpair_pre', 'MOVN_32_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'BLR_64_branch_reg', 'CBNZ_32_compbranch', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__dummy_unmap_page': ['RET_64R_branch_reg'], 'drv_attr_store': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_64_movewide'], 'f__getparam_dl': ['ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'STR_32_ldst_pos', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__dummy_sync_single': ['RET_64R_branch_reg'], 'irq_chip_pm_get': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'pud_clear_bad': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'DSB_BO_system', 'ISB_BI_system', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'alloc_rt_sched_group': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'srcu_online_cpu': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'STRB_32BL_ldst_regoff', 'RET_64R_branch_reg'], 'devm_irq_match': ['LDR_32_ldst_pos', 'MOVZ_32_movewide', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel'], 'partition_irq_get_irqchip_state': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDR_32_ldst_regoff', 'LDR_64_ldst_pos', 'SUBS_32S_addsub_imm', 'LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'CSEL_32_condsel', 'ADD_64_addsub_shift', 'SBFM_32M_bitfield', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'LSRV_64_dp_2src', 'TBZ_only_testbranch', 'CBZ_64_compbranch', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'of_get_flat_dt_root': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'cap_ptrace_access_check': ['ORR_64_log_shift', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'bad_inode_mknod': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'kobj_ns_type_registered': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'ORR_64_log_shift', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'MOVZ_32_movewide', 'B_only_condbranch', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'test_and_clear_bit': ['AND_32_log_imm', 'EOR_32_log_shift', 'MOVZ_64_movewide', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LSLV_64_dp_2src', 'LDXR_LR64_ldstexcl', 'LSRV_64_dp_2src', 'BIC_64_log_shift', 'STLXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'AND_64_log_imm', 'RET_64R_branch_reg'], 'gic_cpu_config': ['MOVN_32_movewide', 'ADD_64_addsub_imm', 'STR_32_ldst_pos', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'SBFM_32M_bitfield', 'SBFM_64M_bitfield', 'ADD_64_addsub_shift', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'devm_kmalloc_match': ['SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'nosmp': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_32_ldst_pos', 'BL_only_branch_imm', 'MOVZ_32_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'rcu_gp_is_expedited': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'CBNZ_32_compbranch', 'ADD_64_addsub_imm', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'valid_user_regs': ['LDR_64_ldst_pos', 'TBNZ_only_testbranch', 'AND_64_log_imm', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'MOVZ_32_movewide', 'AND_64_log_shift', 'ANDS_64_log_shift', 'STR_64_ldst_pos', 'B_only_condbranch', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'kernel_active_single_step': ['MRS_RS_system', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'dummy_clock_read': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'attach_pid': ['ORR_32_log_shift', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'STLR_SL64_ldstexcl', 'CBZ_64_compbranch', 'RET_64R_branch_reg'], 'ktime_get_real_seconds': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'task_prio': ['LDR_32_ldst_pos', 'SUB_32_addsub_imm', 'RET_64R_branch_reg'], 'do_set_cpus_allowed': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'B_only_condbranch', 'SUBS_64_addsub_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide', 'B_only_branch_imm'], 'f__kfifo_dma_out_finish_r': ['LDP_32_ldstpair_off', 'SUBS_64S_addsub_imm', 'LDR_64_ldst_pos', 'AND_32_log_shift', 'LDRB_32B_ldst_regoff', 'B_only_condbranch', 'ADD_32_addsub_imm', 'ORR_32_log_shift', 'ADD_32_addsub_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'psci_affinity_info': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'read_persistent_clock64': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'STP_64_ldstpair_off', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cap_task_setioprio': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'kobj_ns_drop': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_32_log_shift', 'ORR_64_log_shift', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'BLR_64_branch_reg'], 'percpu_counter_add_batch': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'MRS_RS_system', 'LDR_64_ldst_pos', 'LDRSW_64_ldst_regoff', 'ADD_64_addsub_shift', 'SUBS_64S_addsub_ext', 'B_only_condbranch', 'SUB_32_addsub_shift', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_shift', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_32_ldst_regoff', 'STR_32_ldst_regoff'], 'dump_cpu_hwcaps': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'kmem_cache_init_late': ['RET_64R_branch_reg'], 'rcu_segcblist_init': ['STP_64_ldstpair_off', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'anon_set_page_dirty': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'prio_changed_stop': ['UNALLOCATED_18_exception'], 'rcu_segcblist_merge': ['STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'STR_64_ldst_immpre', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_imm', 'BL_only_branch_imm', 'ADD_64_addsub_shift', 'STR_64_ldst_immpost', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'smp_send_reschedule': ['UBFM_64M_bitfield', 'ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'SUB_64_addsub_shift', 'MOVZ_32_movewide', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'workingset_eviction': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STLXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'LDRSW_64_ldst_pos', 'LDR_32_ldst_pos', 'LSRV_64_dp_2src', 'ORR_64_log_shift', 'UBFM_64M_bitfield', 'ORR_64_log_imm', 'RET_64R_branch_reg'], 'f__kthread_init_worker': ['ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'can_nice': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__check_eq': ['UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'swiotlb_print_info': ['RET_64R_branch_reg'], 'cpu_enable_trap_ctr_access': ['MRS_RS_system', 'AND_32_log_imm', 'MSR_SR_system', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'class_child_ns_type': ['LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'is_vma_temporary_stack': ['LDR_64_ldst_pos', 'TBZ_only_testbranch', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'swap_setup': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'cap_mmap_file': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'node_dirty_ok': ['ORR_64_log_shift', 'ADD_64_addsub_imm', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ADRP_only_pcreladdr', 'SUB_64_addsub_shift', 'MRS_RS_system', 'UBFM_64M_bitfield', 'MADD_64A_dp_3src', 'UDIV_64_dp_2src', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'B_only_branch_imm', 'MOVK_64_movewide', 'LDRSW_64_ldst_pos', 'UMULH_64_dp_3src'], 'fwnode_property_read_int_array': ['CBZ_64_compbranch', 'LDR_64_ldst_pos', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'ORR_32_log_shift', 'BLR_64_branch_reg', 'ADDS_32S_addsub_imm', 'B_only_condbranch', 'ADDS_64S_addsub_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide', 'B_only_branch_imm'], 'wq_update_unbound_numa': ['RET_64R_branch_reg'], 'setup_elf_hwcaps': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'ORR_64_log_imm', 'STR_64_ldst_pos', 'CBZ_64_compbranch', 'LDR_32_ldst_pos', 'BLR_64_branch_reg', 'ANDS_32S_log_imm', 'B_only_condbranch', 'LDRB_32_ldst_pos', 'SUBS_32S_addsub_imm', 'B_only_branch_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'crc32_generic_shift': ['UBFM_32M_bitfield', 'CBZ_32_compbranch', 'MOVZ_32_movewide', 'ANDS_32S_log_imm', 'ADD_32_addsub_imm', 'CSEL_32_condsel', 'SUBS_32_addsub_shift', 'EOR_32_log_shift', 'B_only_condbranch', 'UBFM_64M_bitfield', 'CBZ_64_compbranch', 'ORR_32_log_shift', 'TBZ_only_testbranch', 'ANDS_64S_log_imm', 'SUBS_32S_addsub_imm', 'B_only_branch_imm', 'RET_64R_branch_reg'], 'simple_nosetlease': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'clk_hw_set_rate_range': ['LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'arm64_skip_faulting_instruction': ['ORR_64_log_shift', 'STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'ktime_get_raw_fast_ns': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'AND_32_log_imm', 'UMADDL_64WA_dp_3src', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_32_ldstpair_off', 'LDP_64_ldstpair_off', 'DMB_BO_system', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'ORR_32_log_shift', 'AND_64_log_shift', 'MADD_64A_dp_3src', 'LSRV_64_dp_2src', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'aarch64_insn_gen_hint': ['MOVZ_32_movewide', 'MOVK_32_movewide', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'kthread_freezable_should_stop': ['CBZ_64_compbranch', 'STRB_32_ldst_pos', 'MRS_RS_system', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'RET_64R_branch_reg'], 'cap_capget': ['ORR_64_log_shift', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'ktime_get_mono_fast_ns': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'AND_32_log_imm', 'UMADDL_64WA_dp_3src', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_32_ldstpair_off', 'LDP_64_ldstpair_off', 'DMB_BO_system', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'ORR_32_log_shift', 'AND_64_log_shift', 'MADD_64A_dp_3src', 'LSRV_64_dp_2src', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__finish_swait': ['MRS_RS_system', 'STR_64_ldst_pos', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_off', 'RET_64R_branch_reg'], 'bitmap_from_u32array': ['ORR_32_log_shift', 'ADD_64_addsub_imm', 'UBFM_64M_bitfield', 'CBZ_64_compbranch', 'SUB_32_addsub_shift', 'MOVN_64_movewide', 'UBFM_32M_bitfield', 'MOVZ_64_movewide', 'MOVZ_32_movewide', 'LSRV_64_dp_2src', 'SUBS_32_addsub_shift', 'ADD_32_addsub_imm', 'B_only_condbranch', 'LDR_32_ldst_regoff', 'ORR_64_log_shift', 'LDR_64_ldst_regoff', 'EOR_64_log_shift', 'AND_64_log_shift', 'STR_64_ldst_regoff', 'SUBS_64_addsub_shift', 'CSEL_32_condsel', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'arch_timer_set_next_event_phys_mem': ['LDUR_64_ldst_unscaled', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'AND_64_log_imm', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'fsstack_copy_inode_size': ['LDR_64_ldst_pos', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'msi_domain_ops_set_desc': ['STR_64_ldst_pos', 'RET_64R_branch_reg'], 'pid_task': ['CBZ_64_compbranch', 'ORR_32_log_shift', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'SUB_64_addsub_shift', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'memblock_set_current_limit': ['ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'bus_attr_store': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'attribute_container_classdev_to_container': ['LDUR_64_ldst_unscaled', 'RET_64R_branch_reg'], 'init_cfs_rq': ['ORR_64_log_imm', 'STRH_32_ldst_pos', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'gfp_pfmemalloc_allowed': ['TBNZ_only_testbranch', 'MOVZ_32_movewide', 'MRS_RS_system', 'LDR_32_ldst_pos', 'ANDS_32S_log_imm', 'B_only_condbranch', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSINC_32_condsel', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'TBZ_only_testbranch'], 'irq_set_default_host': ['ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'arch_cpu_idle_dead': ['RET_64R_branch_reg'], 'find_user': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'PRFM_P_ldst_pos', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'ORR_64_log_shift', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'clk_hw_is_enabled': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'SUBS_32S_addsub_imm', 'CSINC_32_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'LDR_32_ldst_pos'], 'dma_deconfigure': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'swiotlb_set_mem_attributes': ['RET_64R_branch_reg'], 'enqueue_task_stop': ['LDR_32_ldst_pos', 'ADD_32_addsub_imm', 'SUBS_32S_addsub_imm', 'STR_32_ldst_pos', 'B_only_condbranch', 'LDR_64_ldst_pos', 'LDRB_32_ldst_pos', 'CBNZ_32_compbranch', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'f__insert_inode_hash': ['STP_64_ldstpair_pre', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'STR_64_ldst_pos', 'ADD_64_addsub_shift', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'LDP_32_ldstpair_off', 'MADD_64A_dp_3src', 'EOR_64_log_shift', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_regoff', 'CBZ_64_compbranch', 'STR_64_ldst_regoff', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'try_wait_for_completion': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'MOVZ_32_movewide', 'STR_64_ldst_pos', 'LDR_32_ldst_pos', 'CBNZ_32_compbranch', 'ORR_32_log_shift', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'ORR_64_log_shift', 'BL_only_branch_imm', 'CBZ_32_compbranch', 'ADDS_32S_addsub_imm', 'B_only_condbranch', 'SUB_32_addsub_imm', 'STR_32_ldst_pos', 'B_only_branch_imm'], 'gen_pool_size': ['LDR_64_ldst_immpre', 'MOVZ_64_movewide', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_off', 'LDR_64_ldst_pos', 'SUB_64_addsub_shift', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'RET_64R_branch_reg'], 'prepare_to_wait_exclusive': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'SBFM_64M_bitfield', 'LDR_32_ldst_pos', 'ORR_32_log_imm', 'STR_32_ldst_pos', 'BL_only_branch_imm', 'LDR_64_ldst_immpre', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MRS_RS_system', 'DMB_BO_system', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'clockevents_handle_noop': ['RET_64R_branch_reg'], 'setup_kmalloc_cache_index_table': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'ORR_32_log_shift', 'SBFM_64M_bitfield', 'SUBS_64S_addsub_imm', 'STRB_32BL_ldst_regoff', 'B_only_condbranch', 'MOVZ_32_movewide', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'clk_gpio_gate_enable': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'sg_next': ['LDR_64_ldst_pos', 'TBNZ_only_testbranch', 'ADD_64_addsub_imm', 'AND_64_log_imm', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg', 'MOVZ_64_movewide'], 'f__pi___dma_flush_area': ['MRS_RS_system', 'NOP_HI_system', 'UBFM_64M_bitfield', 'MOVZ_64_movewide', 'LSLV_64_dp_2src', 'ADD_64_addsub_shift', 'SUB_64_addsub_imm', 'BIC_64_log_shift', 'SYS_CR_system', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'DSB_BO_system', 'RET_64R_branch_reg'], 'iterate_mounts': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'CBNZ_32_compbranch', 'SUB_64_addsub_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'B_only_branch_imm', 'CBZ_32_compbranch', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'dmam_pool_match': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'f__inc_node_state': ['LDR_64_ldst_pos', 'ORR_32_log_shift', 'MRS_RS_system', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDRB_32BL_ldst_regoff', 'ADD_32_addsub_imm', 'SBFM_32M_bitfield', 'STRB_32BL_ldst_regoff', 'LDRSB_32BL_ldst_regoff', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg', 'ADD_32_addsub_shift', 'SBFM_64M_bitfield', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'ADRP_only_pcreladdr', 'SUB_32_addsub_shift'], 'ktime_get_seconds': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'io_schedule_prepare': ['MRS_RS_system', 'LDRB_32_ldst_pos', 'ORR_32_log_imm', 'UBFM_64M_bitfield', 'STRB_32_ldst_pos', 'RET_64R_branch_reg'], 'sched_clock_init': ['ADRP_only_pcreladdr', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'dev_attr_show': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'SUB_64_addsub_imm', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_64_movewide'], 'radix_tree_tag_set': ['ORR_64_log_shift', 'LDR_64_ldst_pos', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'MOVZ_64_movewide', 'LDRB_32_ldst_pos', 'LSLV_64_dp_2src', 'SUB_64_addsub_imm', 'SUBS_64_addsub_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'LSRV_64_dp_2src', 'AND_32_log_imm', 'ADD_64_addsub_shift', 'CBZ_64_compbranch', 'TBNZ_only_testbranch', 'STR_64_ldst_pos', 'ADD_32_addsub_imm', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'LSLV_32_dp_2src', 'ANDS_32_log_shift', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg', 'B_only_branch_imm', 'UNALLOCATED_18_exception'], 'cpu_psci_cpu_boot': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'LDR_64_ldst_regoff', 'SUB_64_addsub_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'page_anon_vma': ['LDR_64_ldst_pos', 'SUB_64_addsub_imm', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'RET_64R_branch_reg'], 'irq_chip_set_affinity_parent': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'STP_64_ldstpair_pre', 'UBFM_32M_bitfield', 'ADD_64_addsub_imm', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'MOVN_32_movewide'], 'completion_done': ['LDR_32_ldst_pos', 'CBNZ_32_compbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post'], 'privileged_wrt_inode_uidgid': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'calculate_normal_threshold': ['STP_64_ldstpair_pre', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'BL_only_branch_imm', 'ORR_32_log_shift', 'CBZ_32_compbranch', 'CLZ_32_dp_1src', 'MOVZ_32_movewide', 'SUB_32_addsub_shift', 'UBFM_32M_bitfield', 'MADD_32A_dp_3src', 'SUBS_32_addsub_shift', 'CSEL_32_condsel', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'next_online_pgdat': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'c_next': ['LDR_64_ldst_pos', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'unregister_undef_hook': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'STR_64_ldst_pos', 'MOVK_64_movewide', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'inc_node_page_state': ['ADRP_only_pcreladdr', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'MRS_RS_system', 'LDRB_32BL_ldst_regoff', 'UBFM_32M_bitfield', 'SBFM_64M_bitfield', 'SBFM_32M_bitfield', 'SUB_32_addsub_shift', 'SUBS_64_addsub_shift', 'SUB_64_addsub_shift', 'MOVZ_64_movewide', 'B_only_condbranch', 'AND_64_log_imm', 'PRFM_P_ldst_pos', 'LDXRB_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'STXRB_SR32_ldstexcl', 'SUBS_64S_addsub_ext', 'CBZ_64_compbranch', 'LDXR_LR64_ldstexcl', 'STXR_SR64_ldstexcl', 'RET_64R_branch_reg'], 'clk_nodrv_disable_unprepare': ['RET_64R_branch_reg'], 'f__kfifo_len_r': ['SUBS_64S_addsub_imm', 'LDR_64_ldst_pos', 'LDP_32_ldstpair_off', 'AND_32_log_shift', 'LDRB_32B_ldst_regoff', 'B_only_condbranch', 'ADD_32_addsub_imm', 'ORR_32_log_shift', 'RET_64R_branch_reg'], '_fdt_blocks_misordered': ['LDR_32_ldst_pos', 'MOVZ_32_movewide', 'REV_32_dp_1src', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'ADD_32_addsub_shift', 'SUBS_32_addsub_shift', 'CSINC_32_condsel', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'rcu_batches_completed_sched': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'gic_eoi_irq': ['LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'next_zone': ['LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'get_mm_exe_file': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'ADD_64_addsub_imm', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STLXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'B_only_branch_imm', 'ORR_64_log_shift', 'MOVZ_64_movewide', 'RET_64R_branch_reg'], 'rmem_dma_device_release': ['CBZ_64_compbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'usemap_size': ['MOVZ_64_movewide', 'RET_64R_branch_reg'], 'bad_inode_rename2': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'radix_tree_tag_get': ['ORR_64_log_shift', 'ADD_32_addsub_imm', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'LSLV_32_dp_2src', 'ANDS_32_log_shift', 'B_only_condbranch', 'LDR_64_ldst_pos', 'AND_64_log_imm', 'SUBS_64S_addsub_imm', 'MOVZ_64_movewide', 'LDRB_32_ldst_pos', 'LSLV_64_dp_2src', 'SUB_64_addsub_imm', 'SUBS_64_addsub_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'B_only_branch_imm', 'LSRV_64_dp_2src', 'AND_32_log_imm', 'ADD_64_addsub_shift', 'TBZ_only_testbranch', 'RET_64R_branch_reg', 'ORR_32_log_shift'], 'mark_oom_victim': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'MOVZ_32_movewide', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'CBNZ_32_compbranch', 'MOVZ_64_movewide', 'PRFM_P_ldst_pos', 'LDXR_LR64_ldstexcl', 'EOR_64_log_shift', 'CBNZ_64_compbranch', 'STLXR_SR64_ldstexcl', 'DMB_BO_system', 'CBZ_64_compbranch', 'ADRP_only_pcreladdr', 'LDXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'p4d_clear_bad': ['RET_64R_branch_reg'], 'memblock_mem_size': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'MADD_64A_dp_3src', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDP_64_ldstpair_off', 'ADD_64_addsub_shift', 'UBFM_64M_bitfield', 'CSEL_64_condsel', 'SUB_64_addsub_shift', 'B_only_branch_imm', 'RET_64R_branch_reg'], 'percpu_alloc_setup': ['MOVN_32_movewide', 'SUBS_64S_addsub_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'iort_pmsi_get_dev_id': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'fpsimd_save_state': ['STP_Q_ldstpair_off', 'STP_Q_ldstpair_pre', 'MRS_RS_system', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'rcu_sync_dtor': ['LDR_32_ldst_pos', 'CBNZ_32_compbranch', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'BL_only_branch_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'MSR_SI_system', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'ADRP_only_pcreladdr', 'ADD_64_addsub_shift', 'BLR_64_branch_reg', 'CBZ_32_compbranch', 'UNALLOCATED_18_exception', 'MOVZ_32_movewide', 'ORR_32_log_shift', 'STR_32_ldst_pos', 'B_only_branch_imm'], 'generic_file_open': ['LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'LDR_64_ldst_pos', 'ORR_64_log_imm', 'MOVN_32_movewide', 'SUBS_64_addsub_shift', 'CSEL_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'arch_timer_evtstrm_available': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDR_32_ldst_regoff', 'SUBS_32S_addsub_imm', 'ADD_32_addsub_imm', 'CSEL_32_condsel', 'SBFM_32M_bitfield', 'SBFM_64M_bitfield', 'LDR_64_ldst_regoff', 'LSRV_64_dp_2src', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'put_unused_fd': ['STP_64_ldstpair_pre', 'MRS_RS_system', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_32_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'ORR_64_log_shift', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'anon_transport_dummy_function': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'f__attach_mnt': ['LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'LDR_64_ldst_regoff', 'STP_64_ldstpair_off', 'STLR_SL64_ldstexcl', 'CBZ_64_compbranch', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'f__cpu_clear_user_page': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'ktime_get': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'DMB_BO_system', 'LDR_64_ldst_pos', 'ORR_64_log_shift', 'BLR_64_branch_reg', 'LDP_64_ldstpair_off', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'ORR_32_log_shift', 'AND_64_log_shift', 'MADD_64A_dp_3src', 'LSRV_64_dp_2src', 'ADD_64_addsub_shift', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'YIELD_HI_system', 'B_only_branch_imm'], 'cmp_range': ['LDR_64_ldst_pos', 'MOVN_32_movewide', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'srcu_offline_cpu': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'STRB_32BL_ldst_regoff', 'RET_64R_branch_reg'], 'online_fair_sched_group': ['RET_64R_branch_reg'], 'exit_rcu': ['RET_64R_branch_reg'], 'grub_reclaim': ['ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'MOVZ_64_movewide', 'LDP_64_ldstpair_off', 'MADD_64A_dp_3src', 'SUB_64_addsub_shift', 'UBFM_64M_bitfield', 'ADD_64_addsub_shift', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'RET_64R_branch_reg'], 'set_bit': ['AND_32_log_imm', 'EOR_32_log_shift', 'MOVZ_64_movewide', 'ADD_64_addsub_shift', 'PRFM_P_ldst_pos', 'LSLV_64_dp_2src', 'LDXR_LR64_ldstexcl', 'ORR_64_log_shift', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'can_vma_merge_before': ['LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'CBZ_64_compbranch', 'CBNZ_64_compbranch', 'SUBS_64S_addsub_imm', 'CCMP_64_condcmp_reg', 'ORR_64_log_shift', 'LDR_64_ldst_immpre', 'CSINC_32_condsel'], 'aarch64_insn_is_branch_imm': ['MOVZ_32_movewide', 'AND_32_log_imm', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'MOVK_32_movewide', 'AND_32_log_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'unmask_threaded_irq': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'TBNZ_only_testbranch', 'LDR_32_ldst_pos', 'TBZ_only_testbranch', 'BL_only_branch_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'BLR_64_branch_reg', 'B_only_branch_imm'], 'set_dma_reserve': ['ADRP_only_pcreladdr', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'calibration_delay_done': ['RET_64R_branch_reg'], 'inode_add_bytes': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDRH_32_ldst_pos', 'AND_64_log_imm', 'LDR_64_ldst_pos', 'ADD_32_addsub_shift', 'UBFM_32M_bitfield', 'ADD_64_addsub_shift', 'SUBS_32S_addsub_imm', 'STRH_32_ldst_pos', 'STR_64_ldst_pos', 'B_only_condbranch', 'SUB_32_addsub_imm', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'task_user_regset_view': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'RET_64R_branch_reg'], 'core_kernel_text': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'MOVZ_32_movewide', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'ORR_32_log_shift', 'RET_64R_branch_reg', 'CSINC_32_condsel'], 'arch_cpu_idle': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'MSR_SI_system', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__checkparam_dl': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'CBZ_64_compbranch', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'TBNZ_only_testbranch', 'SUBS_64_addsub_shift', 'CCMP_64_condcmp_imm', 'CSINC_32_condsel', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'early_platform_cleanup': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'LDR_64_ldst_immpre', 'SUB_64_addsub_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'B_only_branch_imm', 'RET_64R_branch_reg'], 'f__check_vc': ['UBFM_64M_bitfield', 'EOR_64_log_imm', 'AND_32_log_imm', 'RET_64R_branch_reg'], 'f__sw_hweight32': ['UBFM_32M_bitfield', 'AND_32_log_imm', 'SUB_32_addsub_shift', 'ADD_32_addsub_shift', 'RET_64R_branch_reg'], 'mapping_tagged': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'fget_raw': ['STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'driver_probe_done': ['ADRP_only_pcreladdr', 'MOVN_32_movewide', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'SUBS_32S_addsub_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'fortify_panic': ['UNALLOCATED_18_exception'], 'prio_changed_idle': ['UNALLOCATED_18_exception'], 'set_create_files_as': ['ORR_64_log_shift', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'swiotlb_nr_tbl': ['ADRP_only_pcreladdr', 'LDR_64_ldst_pos', 'RET_64R_branch_reg'], 'strcpy': ['MOVZ_64_movewide', 'LDRB_32BL_ldst_regoff', 'STRB_32BL_ldst_regoff', 'ADD_64_addsub_imm', 'CBNZ_32_compbranch', 'RET_64R_branch_reg'], 'console_init': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ADRP_only_pcreladdr', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'LDR_64_ldst_immpost', 'BLR_64_branch_reg', 'B_only_branch_imm', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'fpsimd_flush_task_state': ['MOVZ_32_movewide', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'alloc_fair_sched_group': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'to_ratio': ['ADDS_64S_addsub_imm', 'ORR_64_log_shift', 'B_only_condbranch', 'MOVZ_64_movewide', 'CBZ_64_compbranch', 'UBFM_64M_bitfield', 'UDIV_64_dp_2src', 'RET_64R_branch_reg'], 'get_rr_interval_stop': ['MOVZ_32_movewide', 'RET_64R_branch_reg'], 'swiotlb_size_or_default': ['ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'LDR_64_ldst_pos', 'UBFM_64M_bitfield', 'SUBS_64S_addsub_imm', 'CSEL_64_condsel', 'RET_64R_branch_reg'], 'irq_domain_xlate_onecell': ['CBZ_32_compbranch', 'LDR_32_ldst_pos', 'MOVZ_32_movewide', 'STR_64_ldst_pos', 'STR_32_ldst_pos', 'RET_64R_branch_reg', 'MOVN_32_movewide'], 'device_remove_file': ['RET_64R_branch_reg'], 'esr_get_class_string': ['ADRP_only_pcreladdr', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'LDR_64_ldst_regoff', 'RET_64R_branch_reg'], 'power_supply_match_device_node': ['LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg', 'MOVZ_32_movewide'], 'msi_domain_deactivate': ['ORR_64_log_shift', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'STR_64_ldst_pos', 'STR_32_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'SyS_personality': ['ADDS_32S_addsub_imm', 'MRS_RS_system', 'LDR_32_ldst_pos', 'B_only_condbranch', 'STR_32_ldst_pos', 'ORR_32_log_shift', 'RET_64R_branch_reg'], '_raw_spin_trylock': ['PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'EOR_32_log_shift', 'CBNZ_32_compbranch', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBZ_32_compbranch', 'MOVZ_32_movewide', 'RET_64R_branch_reg'], 'psci_tos_resident_on': ['ADRP_only_pcreladdr', 'LDR_32_ldst_pos', 'SUBS_32_addsub_shift', 'CSINC_32_condsel', 'RET_64R_branch_reg'], 'f__init_single_page.isra.16': ['MOVZ_32_movewide', 'STP_64_ldstpair_off', 'UBFM_64M_bitfield', 'MOVN_32_movewide', 'STR_32_ldst_pos', 'ADD_64_addsub_imm', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg'], 'node_memmap_size_bytes': ['STP_64_ldstpair_pre', 'ORR_32_log_shift', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'STR_64_ldst_immpre', 'ORR_64_log_shift', 'BL_only_branch_imm', 'ADRP_only_pcreladdr', 'MOVZ_64_movewide', 'LDP_64_ldstpair_off', 'ORR_64_log_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'UBFM_64M_bitfield', 'B_only_condbranch', 'CBNZ_32_compbranch', 'CBZ_64_compbranch', 'LDR_64_ldst_regoff', 'ADDS_64_addsub_shift', 'ANDS_64S_log_imm', 'CSEL_64_condsel', 'B_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__srcu_read_lock': ['LDR_32_ldst_pos', 'ORR_64_log_shift', 'AND_32_log_imm', 'LDR_64_ldst_pos', 'SBFM_64M_bitfield', 'MRS_RS_system', 'ADD_64_addsub_shift', 'LDXR_LR64_ldstexcl', 'ADD_64_addsub_imm', 'STXR_SR64_ldstexcl', 'CBNZ_32_compbranch', 'DMB_BO_system', 'RET_64R_branch_reg'], 'siphash_2u64': ['LDP_64_ldstpair_off', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'EOR_64_log_shift', 'ADD_64_addsub_shift', 'EXTR_64_extract', 'EOR_64_log_imm', 'RET_64R_branch_reg'], 'dma_pool_free': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'BL_only_branch_imm', 'LDR_64_ldst_pos', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'SUB_64_addsub_shift', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'CBZ_64_compbranch', 'LDP_32_ldstpair_off', 'SUB_32_addsub_imm', 'STR_32_ldst_pos'], 'of_phandle_iterator_args': ['LDR_32_ldst_pos', 'MOVZ_64_movewide', 'SUBS_32_addsub_shift', 'CSEL_32_condsel', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'LDR_64_ldst_pos', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'REV_32_dp_1src', 'STR_32_ldst_regoff', 'ORR_32_log_shift', 'RET_64R_branch_reg'], 'its_build_vmapp_cmd': ['LDR_64_ldst_pos', 'ADRP_only_pcreladdr', 'UBFM_64M_bitfield', 'CBZ_64_compbranch', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'MOVZ_64_movewide', 'LDRSW_64_ldst_pos', 'AND_64_log_imm', 'SUB_64_addsub_shift', 'STRB_32_ldst_pos', 'SBFM_64M_bitfield', 'LDR_32_ldst_pos', 'LDRH_32_ldst_pos', 'SUB_32_addsub_imm', 'STRH_32_ldst_pos', 'LDRB_32_ldst_pos', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'RET_64R_branch_reg', 'B_only_branch_imm'], 'f__lookup_mnt': ['ADRP_only_pcreladdr', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'LDR_32_ldst_pos', 'LDR_64_ldst_pos', 'LSRV_64_dp_2src', 'AND_64_log_shift', 'LDR_64_ldst_regoff', 'CBNZ_64_compbranch', 'MOVZ_64_movewide', 'RET_64R_branch_reg', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'CBZ_64_compbranch', 'B_only_branch_imm', 'ORR_64_log_shift'], 'inode_sb_list_add': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STR_64_ldst_pos', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'STP_64_ldstpair_off', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'arch_counter_read_cc': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'bus_sort_breadthfirst': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'LDR_64_ldst_pos', 'BL_only_branch_imm', 'LDR_64_ldst_immpost', 'SUBS_64_addsub_shift', 'SUB_64_addsub_imm', 'B_only_condbranch', 'B_only_branch_imm', 'BLR_64_branch_reg', 'SUBS_32S_addsub_imm', 'LDP_64_ldstpair_off', 'STR_64_ldst_pos', 'LDRH_32_ldst_pos', 'ADD_32_addsub_imm', 'STLRH_SL32_ldstexcl', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'gic_eoimode1_eoi_irq_1': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'SUBS_32_addsub_shift', 'B_only_condbranch', 'LDR_32_ldst_pos', 'TBNZ_only_testbranch', 'AND_64_log_imm', 'MSR_SR_system', 'ISB_BI_system', 'RET_64R_branch_reg'], 'mktime64': ['SUB_32_addsub_imm', 'SUBS_32S_addsub_imm', 'B_only_condbranch', 'ADD_32_addsub_imm', 'MOVZ_32_movewide', 'MOVK_32_movewide', 'MADD_32A_dp_3src', 'UMADDL_64WA_dp_3src', 'ORR_32_log_shift', 'UBFM_64M_bitfield', 'UBFM_32M_bitfield', 'ADD_32_addsub_shift', 'SUB_32_addsub_shift', 'ADD_64_addsub_shift', 'SUB_64_addsub_imm', 'SUB_64_addsub_shift', 'RET_64R_branch_reg'], 'sys_clock_adjtime': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'do_no_restart_syscall': ['MOVN_64_movewide', 'RET_64R_branch_reg'], 'device_remove_bin_file': ['RET_64R_branch_reg'], 'bad_inode_tmpfile': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'crc32_le': ['STP_64_ldstpair_pre', 'ANDS_64S_log_imm', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'B_only_condbranch', 'UBFM_64M_bitfield', 'SUB_64_addsub_imm', 'AND_64_log_imm', 'CBZ_64_compbranch', 'ADRP_only_pcreladdr', 'ORR_64_log_shift', 'ADD_64_addsub_shift', 'MOVZ_64_movewide', 'LDR_32_ldst_pos', 'LDR_32_ldst_immpre', 'EOR_32_log_shift', 'ADD_64_addsub_ext', 'UBFM_32M_bitfield', 'LDR_32_ldst_regoff', 'SUBS_64_addsub_shift', 'LDRB_32_ldst_immpre', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'B_only_branch_imm', 'LDRB_32_ldst_immpost', 'SUBS_64S_addsub_imm'], 'ksoftirqd_should_run': ['ADRP_only_pcreladdr', 'MRS_RS_system', 'ADD_64_addsub_imm', 'LDRSW_64_ldst_regoff', 'UBFM_64M_bitfield', 'LDR_32_ldst_regoff', 'RET_64R_branch_reg'], 'bin2hex': ['CBZ_64_compbranch', 'ADRP_only_pcreladdr', 'ADD_64_addsub_shift', 'ORR_64_log_shift', 'ADD_64_addsub_imm', 'LDRB_32_ldst_immpost', 'AND_32_log_imm', 'SUBS_64_addsub_shift', 'UBFM_32M_bitfield', 'LDRB_32B_ldst_regoff', 'STRB_32_ldst_immpost', 'STURB_32_ldst_unscaled', 'B_only_condbranch', 'RET_64R_branch_reg'], 'gic_unmask_irq': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'UBFM_32M_bitfield', 'LSLV_32_dp_2src', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'f__mnt_want_write_file': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'LDR_32_ldst_pos', 'LDR_64_ldst_pos', 'TBZ_only_testbranch', 'BL_only_branch_imm', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'cpu_psci_cpu_prepare': ['ADRP_only_pcreladdr', 'MOVN_32_movewide', 'LDR_64_ldst_pos', 'SUBS_64S_addsub_imm', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'cpu_do_idle': ['DSB_BO_system', 'WFI_HI_system', 'RET_64R_branch_reg'], 'proc_doulongvec_ms_jiffies_minmax': ['MOVN_32_movewide', 'RET_64R_branch_reg'], 'hrtimers_init': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDR_32_ldst_regoff', 'LDR_64_ldst_regoff', 'ADD_64_addsub_shift', 'STR_64_ldst_pos', 'STP_64_ldstpair_off', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'gic_eoimode1_mask_irq': ['LDR_64_ldst_pos', 'MOVZ_32_movewide', 'UBFM_32M_bitfield', 'LSLV_32_dp_2src', 'UBFM_64M_bitfield', 'ADD_64_addsub_imm', 'ADD_64_addsub_shift', 'STR_32_ldst_pos', 'LDR_32_ldst_pos', 'TBZ_only_testbranch', 'RET_64R_branch_reg'], 'lookup_resource': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'ADRP_only_pcreladdr', 'PRFM_P_ldst_pos', 'LDAXR_LR32_ldstexcl', 'ADD_32_addsub_imm', 'STXR_SR32_ldstexcl', 'CBNZ_32_compbranch', 'ANDS_64S_log_imm', 'B_only_condbranch', 'LDR_64_ldst_pos', 'CBZ_64_compbranch', 'SUBS_64_addsub_shift', 'B_only_branch_imm', 'CBNZ_64_compbranch', 'LDXR_LR32_ldstexcl', 'SUB_32_addsub_imm', 'STLXR_SR32_ldstexcl', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg', 'STR_64_ldst_pos', 'BL_only_branch_imm'], 'rcu_bh_qs': ['ADRP_only_pcreladdr', 'ADD_64_addsub_imm', 'MRS_RS_system', 'LDRH_32_ldst_regoff', 'CBZ_32_compbranch', 'STRB_32BL_ldst_regoff', 'RET_64R_branch_reg'], 'gen_pool_for_each_chunk': ['STP_64_ldstpair_pre', 'ADD_64_addsub_imm', 'STP_64_ldstpair_off', 'ORR_64_log_shift', 'STR_64_ldst_pos', 'LDR_64_ldst_immpre', 'SUBS_64_addsub_shift', 'B_only_condbranch', 'BLR_64_branch_reg', 'LDR_64_ldst_pos', 'LDP_64_ldstpair_off', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg'], 'f__sg_page_iter_start': ['STR_64_ldst_pos', 'STP_32_ldstpair_off', 'STR_32_ldst_pos', 'RET_64R_branch_reg'], 'bitmap_to_u32array': ['CBZ_32_compbranch', 'ORR_32_log_shift', 'SUB_32_addsub_shift', 'ADD_64_addsub_imm', 'MOVN_64_movewide', 'AND_32_log_imm', 'UBFM_32M_bitfield', 'LSRV_64_dp_2src', 'UBFM_64M_bitfield', 'MOVZ_32_movewide', 'SUBS_64_addsub_shift', 'MOVZ_64_movewide', 'B_only_condbranch', 'LDR_64_ldst_regoff', 'SUBS_32_addsub_shift', 'ADD_32_addsub_imm', 'AND_64_log_shift', 'CSEL_64_condsel', 'STR_32_ldst_regoff', 'STR_32_ldst_immpost', 'CSEL_32_condsel', 'RET_64R_branch_reg'], 'clk_core_get_boundaries': ['LDR_64_ldst_pos', 'STR_64_ldst_pos', 'CBZ_64_compbranch', 'SUBS_64S_addsub_imm', 'B_only_condbranch', 'B_only_branch_imm', 'SUBS_64_addsub_shift', 'CSEL_64_condsel', 'CBNZ_64_compbranch', 'RET_64R_branch_reg'], 'tick_broadcast': ['ADRP_only_pcreladdr', 'STP_64_ldstpair_pre', 'MOVZ_32_movewide', 'ADD_64_addsub_imm', 'LDR_64_ldst_pos', 'BLR_64_branch_reg', 'LDP_64_ldstpair_post', 'RET_64R_branch_reg']}


fnc_inst_cnt_dict = {'rcu_sync_exit': 52, 'enqueue_timer': 29, 'vfs_setpos': 16, 'devm_action_release': 6, 'platform_get_resource': 22, 'f__internal_add_timer': 13, 'arch_timer_handler_phys': 15, 'bad_inode_setattr': 2, 'pick_next_task_idle': 11, 'clk_enable_lock': 38, 'boot_cpu_init': 26, '_raw_spin_unlock_irqrestore': 5, 'f__rmem_cmp': 7, 'write_null': 2, 'get_seconds': 3, 'bus_uevent_filter': 6, 'do_nothing': 1, 'pagecache_write_end': 7, 'f__check_ge': 5, 'topology_set_cpu_scale': 7, 'f__check_gt': 6, 'f__check_sticky': 2, 'arch_timer_shutdown_virt_mem': 7, 'lockref_mark_dead': 9, 'refcount_sub_and_test': 38, 'f__dummy_sync_sg': 1, 'class_attr_show': 10, 'mminit_validate_memmodel_limits': 12, 'clk_mux_get_parent': 54, 'inode_owner_or_capable': 2, 'proc_douintvec_minmax': 2, 'umount_one': 26, 'find_inode_nowait': 58, 'vfs_statfs': 46, 'f__wake_up_common': 83, 'pm_qos_request': 6, 'f__bitmap_andnot': 28, 'its_irq_get_msi_base': 5, 'no_blkdev_open': 2, 'clk_factor_set_rate': 2, 'finish_wait': 30, 'clear_zone_contiguous': 2, 'create_debug_debugfs_entry': 2, 'swiotlb_update_mem_attributes': 41, 'cap_task_setnice': 5, 'vm_memory_committed': 5, 'memblock_insert_region.isra.2': 39, 'tick_get_device': 7, 'pmd_set_huge': 11, 'is_valid_bugaddr': 2, 'down_write_trylock': 15, 'rootwait_setup': 9, 'transfer_pid': 22, 'bad_inode_getattr': 2, 'arch_tlb_gather_mmu': 21, 'prepare_to_wait': 30, 'irq_domain_reset_irq_data': 6, 'adjust_managed_page_count': 32, 'f__match_devt': 5, 'gic_get_kvm_info': 3, 'bad_inode_update_time': 2, 'has_mismatched_cache_line_size': 10, 'el1_irq': 69, 'page_move_anon_rmap': 8, 'down_trylock': 16, 'do_trace_rcu_torture_read': 1, 'write_full': 2, 'switched_to_idle': 1, 'override_creds': 11, 'f__pi_memchr': 10, 'random_poll': 36, 'its_read_baser': 12, 'nonseekable_open': 5, 'oops_may_print': 5, 'console_suspend_disable': 4, 'memblock_reserved_size': 3, 'jiffies_to_timeval': 19, 'f__dec_zone_state': 37, 'rcu_exp_batches_completed_sched': 3, 'first_online_pgdat': 3, 'mnt_clone_write': 19, 'jiffy_sched_clock_read': 6, 'cd_forget': 23, 'el2_fiq_invalid': 1, 'set_smp_cross_call': 3, 'panic_smp_self_stop': 2, 'of_get_next_child': 26, 'check_preempt_curr_stop': 1, 'class_dir_child_ns_type': 3, 'bad_inode_listxattr': 2, 'fwnode_get_named_child_node': 12, 'mount_root': 1, 'ptep_clear_flush': 27, 'device_remove_groups': 1, 'free_fair_sched_group': 1, 'update_max_interval': 15, 'f__section_nr': 31, 'calculate_pressure_threshold': 17, 'inode_init_always': 72, 'rcu_segcblist_first_cb': 6, 'f__bitmap_weight': 43, 'SEQ_printf.constprop.7': 12, 'clk_composite_is_enabled': 14, 'strcspn': 22, 'irq_wait_for_poll': 44, 'f__vma_link_list': 14, 'bad_inode_rmdir': 2, 'unuse_mm': 17, 'swiotlb_set_max_segment': 10, 'smp_setup_processor_id': 10, 'mincore_hugetlb': 1, 'f__bitmap_or': 14, 'vdso_mremap': 16, 'platform_msi_set_desc': 7, 'update_curr_idle': 1, 'f__bitmap_intersects': 33, 'clk_gpio_mux_set_parent': 2, 'generic_pipe_buf_get': 12, 'strncpy': 10, 'f__check_pl': 4, 'f__kfifo_skip_r': 5, 'arch_timer_get_kvm_info': 4, 'its_build_vmovi_cmd': 31, 'aarch64_insn_extract_system_reg': 2, 'radix_tree_iter_resume': 6, 'user_disable_single_step': 7, 'arch_ioremap_pmd_supported': 2, 'memcmp': 110, 'f__hsiphash_aligned': 99, 'f__hrtimer_init': 26, 'rcu_expedite_gp': 9, 'mem_encrypt_init': 1, 'its_build_mapti_cmd': 30, 'capable_wrt_inode_uidgid': 2, 'copy_page': 43, 'arch_counter_get_cntvct': 3, 'invalid_page_referenced_vma': 2, 'rcu_segcblist_insert_count': 9, 'empty_dir_lookup': 2, 'psci_migrate_info_type': 12, 'flush_signal_handlers': 14, 'rcu_sync_init': 19, 'gen_pool_avail': 12, 'skip_spaces': 9, 'wait_bit_init': 25, 'arch_send_call_function_ipi_mask': 8, 'smp_irq_stat_cpu': 13, 'f__bitmap_and': 28, 'shmem_unuse': 2, 'f__gic_update_vlpi_properties': 14, 'unregister_binfmt': 30, 'iter_div_u64_rem': 11, 'disable_pid_allocation': 18, 'fdt_bus_default_translate': 45, 'fwnode_get_parent': 12, 'f__invoke_psci_fn_hvc': 14, 'timeval_to_jiffies': 24, 'clockevents_suspend': 27, 'list_lru_count_one': 15, 'has_no_hw_prefetch': 15, 'f__siphash_aligned': 128, 'sys_getegid': 2, 'overcommit_kbytes_handler': 13, 'clk_hw_get_name': 3, 'test_taint': 12, 'f__pi___flush_dcache_area': 14, 'single_task_running': 8, '_mix_pool_bytes': 65, 'hsiphash_3u32': 81, 'f__gic_populate_rdist': 33, 'of_get_flat_dt_size': 5, 'cpu_psci_cpu_init': 2, 'rb_replace_node': 28, 'clk_factor_recalc_rate': 4, 'file_caps_disable': 4, 'put_filesystem': 1, 'devm_memremap_match': 4, 'set_curr_task_idle': 1, 'raw_notifier_call_chain': 7, 'f__iowrite32_copy': 10, 'siphash_3u64': 150, 'reset_node_managed_pages': 8, 'cpudl_clear_freecpu': 8, 'remove_wait_queue': 20, 'thread_stack_cache_init': 1, 'round_jiffies_up': 25, 'f__do_once_start': 26, 'mangle_path': 54, 'rcupdate_announce_bootup_oddness': 1, 'hrtimers_resume': 1, 'tasklet_init': 4, 'vprintk_func': 2, 'get_user_arg_ptr': 16, 'rcu_is_watching': 7, 'unhandled_signal': 16, 'swiotlb_dma_mapping_error': 7, 'runs_at_el2': 4, 'strcat': 11, 'device_links_read_unlock': 8, 'mm_compute_batch_init': 24, 'klist_add_behind': 32, 'set_curr_task_stop': 4, 'f__sw_hweight8': 10, 'statfs_by_dentry': 30, 'inode_nohighmem': 5, 'finish_swait': 30, 'alarmtimer_suspend': 2, 'arch_timer_starting_cpu': 50, 'f__pi_strlen': 33, 'rcu_dynticks_snap': 9, 'init_cpu_possible': 4, 'files_maxfiles_init': 22, 'clk_composite_set_rate': 14, 'clear_inode': 32, 'clk_composite_enable': 14, 'lockref_get_or_lock': 50, 'proc_dointvec_jiffies': 2, 'noop_llseek': 2, 'put_prev_task_idle': 1, 'f__pi___dma_map_area': 39, 'read_persistent_clock': 2, 'irq_percpu_enable': 25, 'sched_idle_set_state': 1, 'vm_commit_limit': 16, 'gic_check_gicv2': 9, 'of_get_next_parent': 20, 'prandom_u32': 9, 'our_mnt': 7, 'rcu_dynticks_curr_cpu_in_eqs': 8, 'devm_attr_group_remove': 1, 'partition_irq_mask': 26, 'write_policy_show': 22, 'idle_thread_set_boot_cpu': 12, 'f__request_resource': 39, 'f__get_cached_msi_msg': 5, 'fiemap_check_flags': 9, 'f__check_al': 2, 'update_min_vruntime': 19, 'add_mm_counter_fast.part.6': 11, 'el1_irq_invalid_1': 1, 'select_task_rq_idle': 2, 'add_wait_queue': 24, 'init_entity_runnable_average': 8, 'rb_replace_node_cached': 13, 'init_currently_empty_zone': 24, 'list_lru_count_node': 5, 'memblock_start_of_DRAM': 4, 'f__round_jiffies_up': 21, 'psci_cpu_off': 20, 'hsiphash_4u32': 93, 'yield_task_stop': 1, 'clocks_calc_mult_shift': 22, 'cap_task_setscheduler': 5, 'rcu_batches_started_sched': 3, 'rcu_dynticks_eqs_exit': 20, 'kmem_cache_flags': 2, 'prepare_to_swait': 31, 'cpuhp_should_run': 6, 'page_evictable': 19, 'mod_node_page_state': 53, 'clear_os_lock': 4, 'sys_epoll_wait': 2, 'memzero_explicit': 10, 'seq_list_next': 7, 'el2_irq_invalid': 1, 'has_cpu_slab': 9, 'clk_composite_round_rate': 14, 'slab_is_available': 5, 'inode_needs_sync': 22, 'generic_delete_inode': 2, 'of_clk_hw_simple_get': 2, 'rcu_segcblist_advance': 22, 'bus_get_device_klist': 3, 'irq_domain_free_irqs_parent': 11, 'fprop_local_init_single': 7, 'device_property_read_string_array': 12, 'sysctl_max_threads': 58, 'klist_iter_init': 2, 'list_lru_del': 35, 'gic_set_kvm_info': 6, 'get_max_files': 3, 'arch_timer_set_next_event_virt': 11, 'lcm': 16, 'gic_enable_quirks': 25, 'sg_miter_start': 8, 'seq_hlist_start_rcu': 11, 'f__bitmap_complement': 15, 'f__setparam_dl': 24, 'siphash_4u64': 172, 'clocksource_touch_watchdog': 1, 'cap_ptrace_traceme': 4, '_bin2bcd': 9, 'pin_insert_group': 34, 'f__inode_sub_bytes': 14, 'mem_init_print_info': 3, 'f__tick_broadcast_oneshot_control': 10, 'gic_dist_supports_lpis': 6, 'alarmtimer_get_rtcdev': 2, 'kobject_namespace': 28, 'its_build_vinvall_cmd': 7, 'f__pi___clean_dcache_area_pop': 14, 'its_build_vmovp_cmd': 31, 'always_delete_dentry': 2, 'f__check_vs': 2, 'tsk_fork_get_node': 2, 'of_clk_src_onecell_get': 9, 'srcu_bootup_announce': 2, 'f__current_kernel_time': 8, 'swap_ex': 13, 'rcu_eqs_enter_common.isra.36': 35, 'klist_add_tail': 30, 'page_address_in_vma': 42, 'f__power_supply_find_supply_from_node': 5, 'current_is_workqueue_rescuer': 21, 'rcu_segcblist_enqueue': 14, 'clk_nodrv_set_rate': 2, 'clk_composite_get_parent': 14, 'psci_sys_reset': 12, 'pm_generic_runtime_suspend': 2, 'wb_io_lists_populated.part.4': 19, 'pipe_to_null': 2, 'empty_dir_setattr': 2, 'list_lru_isolate_move': 11, 'aarch64_get_insn_class': 5, 'f__pick_first_entity': 6, 'user_rewind_single_step': 7, 'set_task_stack_end_magic': 5, 'rcu_batches_started': 3, 'kmem_cache_size': 2, 'readonly': 10, '_bcd2bin': 6, 'memblock_is_reserved': 26, 'bad_inode_lookup': 2, 'clock_t_to_jiffies': 17, 'msi_domain_activate': 18, 'init_zero_pfn': 37, 'task_fpsimd_load': 12, 'add_page_wait_queue': 35, 'f__task_pid_nr_ns': 43, 'nsecs_to_jiffies': 7, 'get_pipe_info': 10, 'null_lseek': 3, 'get_iowait_load': 10, 'cpu_enable_cache_maint_trap': 5, 'irqpoll_setup': 5, 'current_kernel_time64': 16, 'of_bus_default_get_flags': 2, 'its_build_clear_cmd': 21, 'device_property_present': 12, 'vmemmap_populate_print_last': 1, 'its_init_v4': 10, 'sync_mm_rss': 22, 'devm_resource_match': 4, 'plist_add': 40, 'clear_nlink': 11, 'no_action': 2, 'aarch32_insn_extract_reg_num': 5, 'fsstack_copy_attr_all': 24, 'rcu_segcblist_insert_pend_cbs': 8, 'clocksource_default_clock': 3, 'pcpu_dump_alloc_info.isra.7': 32, 'make_empty_dir_inode': 26, 'arch_setup_pdev_archdata': 1, 'gic_eoimode1_eoi_irq': 9, 'f_getown': 28, 'quiet_kernel': 5, 'anon_vma_ctor': 15, 'sched_avg_update': 16, 'rcu_cpu_starting': 49, 'vfs_get_link': 16, 'arch_task_cache_init': 1, 'is_vmalloc_or_module_addr': 8, 'devices_kset_move_last': 27, 'arch_timer_shutdown_phys_mem': 7, 'of_clk_src_simple_get': 2, 'bad_inode_readlink': 2, 'set_security_override': 2, 'setup_userns_sysctls': 2, 'pcpu_next_md_free_region': 54, 'fixup_red_left': 2, 'early_ioremap_setup': 28, 'pipe_poll': 40, 'ns_to_timeval': 31, 'bad_inode_symlink': 2, 'its_build_int_cmd': 21, 'arch_release_task_struct': 1, 'rcutorture_get_gp_data': 14, 'single_stop': 1, 'dev_attr_store': 10, 'device_get_next_child_node': 14, 'shmem_lock': 2, 'f__arm_smccc_hvc': 11, 'lcm_not_zero': 19, 'read_null': 2, 'request_resource_conflict': 28, 'noirqdebug_setup': 5, 'aarch32_insn_mcr_extract_opc2': 2, 'hsiphash_2u32': 79, 'set_binfmt': 4, 'register_break_hook': 24, 'platform_msi_write_msg': 10, 'dump_kernel_offset': 2, 'cpu_idle_nopoll_setup': 4, 'aarch64_insn_gen_nop': 3, 'percpu_counter_cpu_dead': 2, 'mask_irq.part.2': 17, 'set_reset_devices': 5, 'f__invoke_psci_fn_smc': 14, 'add_wait_queue_exclusive': 24, 'radix_tree_node_ctor': 16, 'lock_hrtimer_base.isra.1': 28, 'bad_file_open': 2, 'fget': 6, 'rb_first_postorder': 10, 'overcommit_ratio_handler': 13, 'f__kfifo_max_r': 7, 'msi_domain_ops_get_hwirq': 2, 'aarch64_insn_gen_load_store_pair': 12, 'abort': 1, 'strncat': 18, 'swiotlb_max_segment': 3, 'ramfs_mmu_get_unmapped_area': 8, 'f__pmd_error': 1, 'proc_nr_files': 2, 'pud_set_huge': 11, 'fold_diff': 35, 'do_fpsimd_acc': 1, 'task_fork_dl': 1, 'f__check_cs': 2, 'queued_read_lock_slowpath': 55, 'show_pte': 32, 'device_set_of_node_from_dev': 6, 'f__check_cc': 4, 'strcasecmp': 19, 'f__sw_hweight64': 14, 'bad_inode_get_link': 2, 'pick_next_pushable_dl_task': 24, 'to_mnt_ns': 2, 'account_idle_ticks': 22, 'el2_sync_invalid': 1, 'irq_forced_secondary_handler': 2, 'f__remove_inode_hash': 29, 'jiffies_64_to_clock_t': 10, 'seq_hlist_start': 11, 'mntns_get': 24, 'clk_gpio_mux_get_parent': 2, 'arch_match_cpu_phys_id': 7, 'inode_set_flags': 16, 'vma_is_stack_for_current': 21, 'page_mapcount_is_zero': 17, 'of_bus_isa_get_flags': 7, 'f__arm_smccc_smc': 11, 'devm_attr_group_match': 4, 'generic_read_dir': 2, 'lruvec_init': 16, 'ns_get_owner': 2, 'user_enable_single_step': 15, 'cpu_stop_should_run': 22, 'f__check_mi': 2, 'f__dummy_free': 1, 'init_cpu_online': 4, 'power_supply_set_battery_charged': 16, 'get_filesystem': 1, 'rhashtable_walk_stop': 31, 'memset64': 7, 'percpu_enable_async': 5, 'open_check_o_direct': 14, 'f__hyp_reset_vectors': 3, 'rcutorture_record_test_transition': 6, 'clk_composite_disable': 14, 'devm_attr_groups_remove': 1, 'el1_fiq_invalid_1': 1, 'get_avenrun': 15, 'hrtimer_forward': 47, 'ns_prune_dentry': 5, 'siphash_3u32': 110, 'early_memremap_pgprot_adjust': 2, 'attribute_container_add_attrs': 30, 'msi_domain_ops_check': 2, 'arch_timer_shutdown_phys': 6, 'next_signal': 14, 'update_cpu_capabilities': 30, 'arch_post_acpi_subsys_init': 1, 'memblock_get_current_limit': 3, 'initcall_blacklist': 2, 'psci_migrate': 20, 'siphash_1u32': 86, 'klist_add_before': 32, 'list_lru_isolate': 9, 'debug_locks_off': 20, 'wq_worker_sleeping': 39, 'find_suitable_fallback': 36, 'sg_nents': 14, 'f__bitmap_xor': 14, 'timecounter_init': 21, 'debug_kernel': 5, 'irq_percpu_disable': 25, 'el1_sync_1': 17, 'sys_restart_syscall': 8, 'aarch64_insn_is_nop.part.1': 16, 'jiffies_to_clock_t': 10, 'fwnode_property_read_u64_array': 8, 'file_check_and_advance_wb_err': 35, 'build_zonelists': 82, 'cpu_stop_park': 8, 'irq_default_primary_handler': 2, 'decay_load': 18, 'ip4_addr_string_sa': 32, 'sys_arm64_personality': 25, 'msi_domain_ops_prepare': 4, 'psci_cpu_suspend': 20, 'rcu_unexpedite_gp': 9, 'fwnode_property_read_u16_array': 8, 'cpu_device_release': 1, 'err_broadcast': 1, 'strpbrk': 18, 'arch_timer_handler_phys_mem': 16, 'fpsimd_load_state': 24, 'f__init_swait_queue_head': 6, 'special_mapping_name': 3, 'f__bitmap_set': 32, 'proc_dointvec': 2, 'sg_miter_get_next_page': 37, 'clk_fixed_rate_recalc_accuracy': 2, 'gic_poke_irq.isra.1': 33, 'ns_test_super': 4, 'ktime_add_safe': 9, 'jiffies64_to_nsecs': 4, 'jiffies_read': 3, 'unmask_irq': 9, 'f__check_ls': 4, 'f__check_lt': 3, 'calc_global_load_tick': 25, 'f__check_le': 4, 'errseq_check_and_advance': 22, 'rcu_segcblist_extract_count': 10, 'task_rq_lock': 48, 'proc_dopipe_max_size': 2, 'pmd_clear_huge': 11, 'sys_geteuid': 2, 'is_console_locked': 3, 'read_iter_null': 2, 'may_expand_vm': 31, 'dequeue_task_stop': 4, 'f__kfifo_dma_in_finish_r': 23, 'vm_area_add_early': 25, 'rcu_segcblist_insert_done_cbs': 19, 'sb_clear_inode_writeback': 29, '_raw_spin_lock_bh': 17, 'pm_qos_request_active': 4, 'kthread_should_stop': 5, 'devm_clk_provider_match': 9, 'add_random_ready_callback': 39, 'devres_add': 26, 'f__clk_get_name': 6, 'rcu_rnp_online_cpus': 2, 'aarch32_insn_mcr_extract_crm': 2, 'change_page_range': 16, 'f__dummy_dma_supported': 2, 'generic_pipe_buf_confirm': 2, 'read_boot_clock64': 2, 'clear_bit': 11, 'cpu_coregroup_mask': 6, 'clocksource_resume': 20, 'update_clock_read_data': 26, 'get_state_synchronize_rcu': 6, 'f__legitimize_mnt': 36, 'split_page': 13, 'gic_dist_config': 39, 'proc_doulongvec_minmax': 2, 'tk_set_wall_to_mono': 38, 'c_start': 4, 'idle_task': 8, 'queued_write_lock_slowpath': 54, 'get_cpu_cacheinfo': 8, 'aarch32_insn_is_wide': 4, 'setup_forced_irqthreads': 5, 'kset_init': 16, 'sys_umask': 11, 'enqueue_top_rt_rq': 21, 'rcu_end_inkernel_boot': 15, 'gic_irq_domain_unmap': 1, 'd_set_d_op': 38, 'simple_align_resource': 2, 'cpu_die_early': 17, 'ntp_notify_cmos_timer': 1, 'rhashtable_walk_start': 31, 'set_dumpable.part.7': 15, 'f__pgd_error': 1, 'set_sched_topology': 6, 'f__pi___dma_unmap_area': 25, 'dt_mem_next_cell': 15, 'rhashtable_jhash2': 70, 'partition_translate_id': 25, 'clk_hw_is_prepared': 16, 'sha_transform': 256, 'cap_vm_enough_memory': 13, 'task_tick_idle': 1, 'klist_init': 7, 'rcutorture_record_progress': 6, 'choose_memblock_flags': 6, 'free_rt_sched_group': 1, 'test_and_set_bit': 14, 'user_shm_lock': 30, 'bad_inode_get_acl': 2, '_local_bh_enable': 7, 'inode_set_bytes': 5, 'clk_ignore_unused_setup': 5, 'strncpy_from_unsafe': 64, 'rcutree_dead_cpu': 13, 'clk_nodrv_prepare_enable': 2, 'init_admin_reserve': 12, 'devm_action_match': 11, 'task_tick_stop': 1, 'early_init_dt_verify': 17, 'irq_chip_compose_msi_msg': 23, 'clockevents_switch_state': 18, 'cdev_set_parent': 2, 'irq_set_thread_affinity': 15, 'power_supply_get_property': 16, 'round_jiffies_relative': 32, 'nr_free_zone_pages': 39, 'cntvct_read_handler': 15, 'el1_error_invalid_1': 1, 'change_bit': 11, 'ntp_get_next_leap': 20, 'sanity': 29, 'rcutree_dying_cpu': 13, 'hsiphash_1u32': 67, 'strcmp': 85, 'del_random_ready_callback': 23, 'clocks_calc_max_nsecs': 12, 'set_secondary_fwnode': 12, 'gic_irq_set_vcpu_affinity': 15, 'nr_iowait_cpu': 9, 'driver_allows_async_probing': 4, 'oom_killer_enable': 3, 'sched_clock': 34, 'single_start': 4, 'iov_iter_pipe': 13, 'bad_inode_fiemap': 2, 'can_do_mlock': 5, 'radix_tree_init_maxnodes': 34, 'noop': 1, 'notifier_call_chain': 36, 'get_files_struct': 20, 'bad_chained_irq': 2, 'sighand_ctor': 13, 'cmp_ex_search': 8, 'arch_release_thread_stack': 1, 'generic_swap': 10, 'round_jiffies': 29, 'clockevents_resume': 27, 'user_namespace_sysctl_init': 2, 'f__init_rwsem': 9, 'set_security_override_from_ctx': 2, 'f__dummy_unmap_sg': 1, 'arch_timer_set_next_event_virt_mem': 10, 'update_vsyscall_tz': 8, 'trivial_online': 2, 'c_stop': 1, 'bit_waitqueue': 13, 'noop_fsync': 2, 'memblock_remove_region': 38, 'f__ctzdi2': 3, 'f__init_waitqueue_head': 6, 'move_expired_inodes': 108, 'clk_multiplier_recalc_rate': 16, 'f__irq_put_desc_unlock': 17, 'platform_drv_remove': 12, 'radix_tree_tagged': 6, 'f__cpu_setup': 28, 'work_for_cpu_fn': 10, 'pagecache_write_begin': 7, 'run_timer_softirq': 112, 'device_add_groups': 2, 'dev_uevent_filter': 16, 'rcu_test_sync_prims': 1, 'f__round_jiffies_up_relative': 24, 'vmacache_update': 12, 'f__is_ram': 2, 'fwnode_property_read_string_array': 42, 'address_space_init_once': 34, 'hrtimer_init_sleeper': 5, 'pud_clear_huge': 11, 'gic_eoi_irq_1': 4, 'mask_irq': 9, 'exact_match': 2, 'jiffies_to_timespec64': 15, 'cap_inode_setxattr': 2, 'tick_get_broadcast_mask': 4, 'finish_no_open': 3, 'load_default_modules': 1, 'set_pageblock_order': 1, 'set_wb_congested': 21, 'readwrite': 10, 'phys_mem_access_prot_allowed': 2, 'f__dummy_mmap': 2, 'nsec_to_clock_t': 7, 'u32_swap': 5, 'f__memblock_dump_all': 18, 'ntp_tick_length': 3, 'kobj_child_ns_ops': 12, 'jiffies_to_usecs': 3, 'take_dentry_name_snapshot': 38, 'ihold': 8, 'idmap_cpu_replace_ttbr1': 12, 'power_supply_powers': 2, 'set_nohugeiomap': 5, 'timespec_trunc': 18, 'ioremap_huge_init': 20, 'early_debug_disable': 4, 'machine_shutdown': 1, 'dev_driver_string': 13, 'rcu_irq_enter_disabled': 9, 'fwnode_property_read_u8_array': 8, 'pgd_clear_bad': 9, 'uao_thread_switch': 1, 'mem_devnode': 11, 'early_fixmap_init': 36, 'arch_cpu_idle_exit': 1, 'generic_file_llseek_size': 13, 'setup_profiling_timer': 2, 'timespec64_to_jiffies': 20, 'dec_node_page_state': 57, 'user_fastforward_single_step': 7, 'devm_percpu_match': 4, 'init_setup': 11, 'f__clzsi2': 5, 'clk_nodrv_set_parent': 2, 'rht_bucket_nested': 26, 'arch_setup_new_exec': 4, 'irq_chip_eoi_parent': 9, 'set_rq_offline': 23, 'disable_randmaps': 4, 'arch_ioremap_pud_supported': 2, 'amba_shutdown': 7, 'cpu_report_state': 8, 'early_ioremap_reset': 8, 'ip6_string': 31, 'f__check_ne': 4, 'refcount_inc_not_zero': 20, 'unmask_irq.part.4': 17, 'smp_spin_table_cpu_boot': 14, 'noop_ret': 2, 'cpus_are_stuck_in_kernel': 16, 'f__dl_clear_params': 10, 'init_rt_rq': 32, 'generic_pipe_buf_nosteal': 2, 'lockref_put_or_lock': 50, 'devm_ioremap_match': 4, 'simple_statfs': 8, 'hyp_offset_low': 13, 'cpu_is_hotpluggable': 28, 'msi_domain_prepare_irqs': 27, 'arch_update_cpu_topology': 2, 'arch_asym_cpu_priority': 2, 'driver_remove_file': 1, 'memset32': 7, 'of_fwnode_put': 1, 'early_ioremap_shutdown': 1, 'f__ktime_get_real_seconds': 3, 'ctr_read_handler': 19, 'set_close_on_exec': 61, 'inode_get_bytes': 16, 'fwnode_get_next_child_node': 12, 'platform_drv_shutdown': 11, 'bad_inode_link': 2, 'select_task_rq_stop': 2, 'sys_sched_get_priority_min': 10, 'ktime_get_real_fast_ns': 36, 'cpus_share_cache': 11, 'compare_single': 2, 'check_early_ioremap_leak': 13, 'f__fget': 43, 'param_array_get': 51, 'early_ioremap_debug_setup': 2, 'f__inode_add_bytes': 15, 'save_return_addr': 10, 'its_build_invall_cmd': 7, 'inode_sub_bytes': 27, 'sha_init': 14, 'tick_get_broadcast_device': 3, 'bad_inode_create': 2, 'rcu_set_runtime_mode': 5, 'memblock_reserved_memory_within': 25, 'dec_zone_page_state': 62, 'int_sqrt': 19, 'class_create_file_ns': 4, 'cpu_set_state_online': 14, 'platform_msi_get_host_data': 3, 'register_step_hook': 23, 'arch_cpu_idle_prepare': 1, 'should_remove_suid': 2, 'rcu_batches_started_bh': 3, 'strnlen': 48, 'devm_clk_hw_match': 6, 'f__getnstimeofday64': 56, 'llist_add_batch': 14, 'rcu_batches_completed_bh': 3, 'current_is_async': 24, 'irq_calc_affinity_vectors': 22, 'show_rcu_gp_kthreads': 15, 'gen_pool_virt_to_phys': 18, 'account_steal_time': 8, 'mntns_owner': 2, 'f__bitmap_subset': 33, 'shmem_unlock_mapping': 1, 'f__kfifo_init': 26, 'set_rq_online.part.15': 21, 'refcount_dec_not_one': 40, 'clear_page': 9, 'f__pud_error': 1, 'clk_hw_get_num_parents': 3, 'cpu_do_switch_mm': 5, 'f__mnt_drop_write': 10, 'cpu_cpu_mask': 3, 'strrchr': 10, 'f__hyp_stub_vectors': 1, 'strchrnul': 9, 'of_bus_default_map': 49, 'devm_region_match': 15, 'init_wait_entry': 9, 'partition_irq_unmask': 26, 'no_open': 2, 'device_create_bin_file': 4, 'vma_interval_tree_subtree_search': 27, 'mmap_min_addr_handler': 9, 'f__iget': 7, 'cpu_check_up_prepare': 10, 'tls_preserve_current_state': 4, 'inode_init_owner': 22, 'arch_timer_handler_virt': 15, 'radix_tree_iter_tag_set': 8, 'rcu_segcblist_ready_cbs': 8, 'account_user_time': 15, 'lruvec_lru_size': 30, 'fpsimd_bind_to_cpu': 16, 'unregister_fair_sched_group': 1, 'fpsimd_init': 2, 'init_cfs_bandwidth': 1, 'platform_drv_probe_fail': 2, 'clk_fixed_rate_recalc_rate': 2, 'its_build_inv_cmd': 21, 'of_msi_map_rid': 5, 'do_bad': 2, 'el1_sync_invalid_1': 1, 'driver_create_file': 4, 'arch_remove_reservations': 1, 'f__dummy_map_page': 2, 'sys_getuid': 2, 'irqfixup_setup': 5, 'handle_guest_sea': 2, 'inc_zone_page_state': 62, 'add_taint': 18, 'suspended_sched_clock_read': 10, 'radix_tree_iter_tag_clear': 8, 'csum_tcpudp_nofold': 11, 'rcu_panic': 5, 'f__iowrite64_copy': 10, 'is_empty_dir_inode': 13, 'f__mnt_drop_write_file': 11, 'u64_swap': 5, 'class_compat_remove_link': 1, 'f__balance_callback': 23, 'clocksource_mark_unstable': 1, 'group_open_release': 1, 'prandom_warmup': 24, 'account_idle_time': 18, 'task_curr': 11, 'release_thread': 1, 'fdt_get_mem_rsv': 26, 'get_taint': 3, 'simple_open': 5, 'get_state_synchronize_sched': 6, 'd_set_mounted': 69, 'device_create_file': 2, 'rdinit_setup': 11, 'ktime_get_raw': 34, 'srcu_batches_completed': 2, 'post_alloc_hook': 4, 'cpu_switch_to': 21, 'empty_dir_listxattr': 2, 'rcu_sync_enter_start': 5, 'root_data_setup': 4, 'kthread_should_park': 5, 'f__follow_pte_pmd.isra.7': 80, 'msi_get_domain_info': 2, 'free_unref_page_prepare': 32, 'f__calc_delta': 54, 'f__destroy_inode': 21, 'rcu_segcblist_disable': 3, 'dma_debug_do_init': 2, 'strchr': 9, 'psci_cpu_on': 20, 'f__round_jiffies_relative': 28, 'f__enable_mmu': 30, 'cap_mmap_addr': 21, 'irq_domain_hierarchical_is_msi_remap': 11, 'base_probe': 2, 'its_parse_indirect_baser': 62, 'update_vsyscall': 45, 'type_show': 34, 'fprop_local_destroy_single': 1, 'driver_add_groups': 2, 'init_timer_list_procfs': 2, 'dmam_match': 5, 'no_llseek': 2, 'init_dl_bandwidth': 4, 'its_build_discard_cmd': 21, 'fwnode_property_read_u32_array': 8, 'init_timer_key': 9, 'cdev_purge': 27, 'driver_remove_groups': 1, 'f__bitmap_clear': 32, 'clk_gpio_gate_disable': 1, 'cpu_idle_poll_setup': 5, 'register_undef_hook': 21, 'strnlen_user': 56, 'cache_get_priv_group': 2, 'fwnode_graph_get_next_endpoint': 12, 'f__raise_softirq_irqoff': 13, 'irq_chip_pm_put': 2, 'valid_mmap_phys_addr_range': 4, 'aarch64_insn_gen_load_store_reg': 22, 'f__check_hi': 4, 'early_platform_add_devices': 26, 'f__dummy_alloc': 2, 'f__atomic_notifier_call_chain': 6, 'prandom_u32_state': 24, 'compute_batch_value': 14, 'rhashtable_walk_exit': 25, 'sigaction_compat_abi': 1, 'd_set_fallthru': 16, 'simple_get_link': 2, 'device_links_read_lock': 7, 'f__ioread32_copy': 10, 'jiffies_to_msecs': 2, 'rcu_segcblist_entrain': 36, 'wake_q_add': 22, 'notify_die': 15, 'arch_disable_smp_support': 1, 'd_flags_for_inode': 36, 'seq_list_start_head': 18, 'keep_bootcon_setup': 5, 'psci_sys_poweroff': 12, 'gic_mask_irq': 11, 'f__clk_get_flags': 6, 'class_remove_file_ns': 1, 'rcu_init_percpu_data': 75, 'get_task_pid': 15, 'memblock_end_of_DRAM': 12, 'aarch64_insn_decode_register': 10, 'init_reserve_notifier': 2, 'async_unregister_domain': 21, 'idle_inject_timer_fn': 11, 'group_close_release': 1, 'vmalloc_sync_all': 1, 'bad_inode_mkdir': 2, 'tlb_gather_mmu': 33, '_raw_spin_lock': 13, 'vma_interval_tree_augment_rotate': 21, 'memset16': 8, 'f__clear_user': 21, 'rcu_cpu_stall_reset': 17, 'fdt_move': 20, 'power_supply_get_drvdata': 2, 'swiotlb_dma_supported': 8, 'its_build_mapc_cmd': 22, 'cap_settime': 2, 'fdt_reserved_mem_save_node': 16, 'detach_if_pending': 41, 'cpuhp_create': 28, 'class_attr_store': 10, '_raw_spin_lock_irqsave': 16, 'timekeeping_max_deferment': 14, 'siphash_1u64': 106, 'tlb_remove_table_smp_sync': 1, 'reboot_setup': 23, 'pmd_clear_bad': 15, 'irq_chip_mask_parent': 9, 'idle_cpu': 19, 'its_build_vmapti_cmd': 34, 'class_compat_create_link': 2, '_raw_spin_lock_irq': 14, 'memblock_phys_mem_size': 3, 'simple_getattr': 16, 'f__sg_page_iter_next': 12, 'plist_del': 29, 'simple_xattr_list_add': 18, 'xattr_getsecurity': 2, 'prandom_bytes_state': 31, 'hook_debug_fault_code': 13, '_fdt_packblocks': 44, 'current_umask': 4, 'rcu_segcblist_extract_pend_cbs': 15, 'f__register_binfmt': 50, 'generic_fillattr': 43, 'ip6_addr_string_sa': 34, 'atomic_notifier_call_chain': 8, 'el2_error_invalid': 1, 'of_clk_hw_onecell_get': 9, 'attach_entity_load_avg': 38, 'f__clk_get_hw': 6, 'clock_was_set': 1, 'si_meminfo': 18, 'shmem_get_unmapped_area': 8, 'f__raw_notifier_call_chain': 5, 'mntget': 9, 'f__ptrace_link': 19, 'devm_clk_match': 8, 'f__clk_get_enable_count': 6, 'f__put_unused_fd': 28, 'wq_clamp_max_active.isra.4': 20, 'pgd_cache_init': 1, 'kernel_neon_end': 20, 'switched_to_stop': 1, 'f__mod_node_page_state': 43, 'bad_inode_atomic_open': 2, 'timespec64_add_safe': 30, 'get_next_ino': 27, 'bus_get_kset': 2, 'rcu_gp_is_normal': 9, 'fs_names_setup': 4, 'devm_pages_match': 5, 'arch_counter_get_cntvct_mem': 12, 'of_fwnode_get': 13, 'retire_userns_sysctls': 1, 'set_normalized_timespec64': 18, 'sg_init_table': 17, 'vfs_llseek': 15, 'devm_clk_match_1': 6, 'device_remove_file_self': 2, 'proc_dostring': 2, 'device_is_bound': 12, 'memory_open': 26, 'set_handle_irq': 6, 'parameqn': 24, 'pipe_proc_fn': 5, 'vma_interval_tree_iter_first': 18, 'clk_composite_recalc_rate': 14, 'f__mutex_init': 8, 'search_cmp_ftr_reg': 3, 'rcu_segcblist_accelerate': 26, 'proc_dointvec_minmax': 2, 'iov_iter_single_seg_count': 22, 'f__srcu_notifier_call_chain': 32, 'rcu_exp_batches_completed': 3, 'irq_nested_primary_handler': 2, 'refcount_dec_if_one': 10, 'pm_generic_runtime_resume': 2, 'clocksource_suspend': 21, 'alarm_expires_remaining': 15, 'strncmp': 130, 'dirty_background_bytes_handler': 13, 'f__of_find_all_nodes.part.0': 7, 'flush_icache_range': 27, 'rcu_sysrq_start': 6, 'arch_send_call_function_single_ipi': 15, 'skip_atoi': 16, 'sys_rt_sigreturn_wrapper': 2, 'f__page_mapcount': 17, 'SyS_sched_get_priority_max': 10, 'fwnode_handle_put': 11, 'gic_peek_irq.isra.0': 20, 'gic_peek_irq.isra.1': 11, 'is_bad_inode': 6, 'setup_slab_nomerge': 5, 'io_schedule_finish': 5, 'iov_iter_kvec': 6, 'init_mmap_min_addr': 6, 'round_jiffies_up_relative': 28, 'special_mapping_close': 1, 'irq_domain_alloc_irqs_hierarchy': 7, 'aarch64_insn_gen_data1': 31, 'iov_iter_bvec': 6, 'bad_inode_permission': 2, 'anon_pipe_buf_steal': 19, 'clk_hw_get_flags': 3, 'seq_putc': 10, 'get_close_on_exec': 13, 'dev_fwnode': 6, 'pick_next_task_stop': 22, 'arch_timer_shutdown_virt': 6, 'update_curr_stop': 1, 'cmp_ex_sort': 9, 'fwnode_property_read_string': 8, 'cpudl_set_freecpu': 8, 'percpu_ref_noop_confirm_switch': 1, 'cpu_subsys_match': 2, 'sys_vhangup': 2, 'boot_cpu_state_init': 12, 'invalid_mkclean_vma': 5, 'fdt_bus_default_map': 40, 'no_blink': 2, 'proc_dointvec_ms_jiffies': 2, 'memblock_allow_resize': 4, 'arch_early_irq_init': 2, 'umount_check': 3, 'inc_node_state': 54, 'f__radix_tree_lookup': 41, 'rhashtable_walk_enter': 24, 'clk_composite_set_parent': 14, 'set_task_cpu': 21, 'clk_enable_unlock.part.7': 10, 'init_user_reserve': 12, 'f': 8, 'empty_dir_getattr': 8, 'switched_from_rt': 23, 'lazy_max_pages': 14, 'setup_nr_cpu_ids': 11, 'f__show_regs': 15, 'of_dma_deconfigure': 1, 'gcd': 36, 'f__srcu_read_unlock': 12, 'wq_worker_waking_up': 16, 'tick_broadcast_init': 5, 'alarmtimer_resume': 2, 'calibrate_delay_is_known': 2, 'clk_gpio_gate_is_enabled': 2, 'fwnode_property_get_reference_args': 14, 'set_cpus_allowed_common': 12, 'rcu_batches_completed': 3, 'sd_degenerate': 25, 'f__anon_vma_interval_tree_subtree_search': 29, 'strnchr': 17, 'task_will_free_mem': 58, 'arch_timer_set_next_event_phys': 11, 'f__clean_dcache_area_pou': 14, 'arch_timer_get_rate': 3, 'find_vmap_area': 31, 'put_prev_task_stop': 10, 'pm_qos_read_value': 2, 'f__dummy_map_sg': 2, 'arch_probe_nr_irqs': 2, 'its_build_movi_cmd': 24, 'f__bitmap_equal': 33, 'f__dummy_mapping_error': 2, 'timecounter_read': 26, 'arch_timer_handler_virt_mem': 16, 'arch_cpu_idle_enter': 1, 'f__hyp_set_vectors': 4, 'iommu_is_span_boundary': 11, 'prep_compound_page': 25, 'ns_to_timespec64': 23, 'f__sw_hweight16': 13, 'tick_is_broadcast_device': 8, 'gup_fast_permitted': 5, 'ntp_update_frequency': 25, 'dirty_background_ratio_handler': 13, 'task_active_pid_ns': 8, 'fdt_string': 5, 'nsecs_to_jiffies64': 7, 'mutex_trylock': 25, 'f__mnt_is_readonly': 8, 'kthread_data': 3, 'single_next': 5, 'f__ctzsi2': 4, 'arch_dynirq_lower_bound': 1, 'workingset_activation': 10, 'poll_initwait': 9, 'arch_vma_name': 2, 'proc_douintvec': 2, 'merge': 43, 'el2_setup': 87, 'sg_miter_stop': 23, 'arch_counter_get_cntpct': 3, 'vm_get_page_prot': 5, 'resource_alignment': 14, 'hrtimers_prepare_cpu': 17, 'fwnode_graph_get_remote_endpoint': 12, 'its_irq_compose_msi_msg': 21, 'pagevec_remove_exceptionals': 18, 'of_bus_isa_count_cells': 7, 'memscan': 17, 'f__next_reserved_mem_region': 25, 'init_cpu_present': 4, 'drop_nlink': 12, 'f__get_task_comm': 22, 'klist_add_head': 30, 'cpu_stop_init_done': 15, 'dump_mem_limit': 2, 'account_system_index_time': 11, 'f__round_jiffies': 25, 'get_rr_interval_idle': 2, 'f__anon_vma_interval_tree_augment_rotate': 21, 'rcu_cblist_init': 3, 'klist_node_attached': 4, 'sys_getgid': 2, 'sparse_decode_mem_map': 3, 'devm_kmalloc_release': 1, 'simple_transaction_set': 7, 'drain_zonestat': 25, 'set_cpu_boot_mode_flag': 9, 'cpu_load_update_active': 27, 'put_dec_full8': 28, 'bad_inode_set_acl': 2, 'test_and_change_bit': 14, 'generic_permission': 44, 'errseq_sample': 17, 'proc_dointvec_userhz_jiffies': 2, 'irq_chip_ack_parent': 9, 'irq_chip_unmask_parent': 9, 'mod_zone_page_state': 51, 'of_print_phandle_args': 1, 'preserve_boot_args': 8, 'invalid_migration_vma': 8, 'iomem_map_sanity_check': 61, 'of_dev_node_match': 4, 'bad_inode_unlink': 2, 'rcu_early_boot_tests': 1, 'add_range': 10, 'update_fast_timekeeper': 29, 'open_softirq': 4, 'device_dma_supported': 4, 'dma_init_reserved_memory': 20, 'f__dummy_unmap_page': 1, 'drv_attr_store': 12, 'f__getparam_dl': 12, 'f__dummy_sync_single': 1, 'irq_chip_pm_get': 2, 'pud_clear_bad': 15, 'alloc_rt_sched_group': 2, 'srcu_online_cpu': 8, 'devm_irq_match': 11, 'partition_irq_get_irqchip_state': 28, 'of_get_flat_dt_root': 2, 'cap_ptrace_access_check': 4, 'bad_inode_mknod': 2, 'kobj_ns_type_registered': 23, 'test_and_clear_bit': 14, 'gic_cpu_config': 27, 'devm_kmalloc_match': 3, 'nosmp': 8, 'rcu_gp_is_expedited': 13, 'valid_user_regs': 17, 'kernel_active_single_step': 4, 'dummy_clock_read': 3, 'attach_pid': 15, 'ktime_get_real_seconds': 3, 'task_prio': 3, 'do_set_cpus_allowed': 79, 'f__kfifo_dma_out_finish_r': 14, 'psci_affinity_info': 12, 'read_persistent_clock64': 11, 'cap_task_setioprio': 5, 'kobj_ns_drop': 34, 'percpu_counter_add_batch': 42, 'dump_cpu_hwcaps': 2, 'kmem_cache_init_late': 1, 'rcu_segcblist_init': 5, 'anon_set_page_dirty': 2, 'prio_changed_stop': 1, 'rcu_segcblist_merge': 77, 'smp_send_reschedule': 15, 'workingset_eviction': 18, 'f__kthread_init_worker': 10, 'can_nice': 4, 'f__check_eq': 2, 'swiotlb_print_info': 1, 'cpu_enable_trap_ctr_access': 5, 'class_child_ns_type': 3, 'is_vma_temporary_stack': 8, 'swap_setup': 12, 'cap_mmap_file': 2, 'node_dirty_ok': 85, 'fwnode_property_read_int_array': 46, 'wq_update_unbound_numa': 1, 'setup_elf_hwcaps': 28, 'crc32_generic_shift': 44, 'simple_nosetlease': 2, 'clk_hw_set_rate_range': 5, 'arm64_skip_faulting_instruction': 10, 'ktime_get_raw_fast_ns': 36, 'aarch64_insn_gen_hint': 4, 'kthread_freezable_should_stop': 7, 'cap_capget': 10, 'ktime_get_mono_fast_ns': 36, 'f__finish_swait': 12, 'bitmap_from_u32array': 38, 'arch_timer_set_next_event_phys_mem': 10, 'fsstack_copy_inode_size': 5, 'msi_domain_ops_set_desc': 2, 'pid_task': 12, 'memblock_set_current_limit': 3, 'bus_attr_store': 12, 'attribute_container_classdev_to_container': 2, 'init_cfs_rq': 6, 'gfp_pfmemalloc_allowed': 27, 'irq_set_default_host': 3, 'arch_cpu_idle_dead': 1, 'find_user': 33, 'clk_hw_is_enabled': 16, 'dma_deconfigure': 5, 'swiotlb_set_mem_attributes': 1, 'enqueue_task_stop': 10, 'f__insert_inode_hash': 48, 'try_wait_for_completion': 34, 'gen_pool_size': 13, 'prepare_to_wait_exclusive': 30, 'clockevents_handle_noop': 1, 'setup_kmalloc_cache_index_table': 24, 'clk_gpio_gate_enable': 2, 'sg_next': 10, 'f__pi___dma_flush_area': 14, 'iterate_mounts': 33, 'dmam_pool_match': 4, 'f__inc_node_state': 38, 'ktime_get_seconds': 3, 'io_schedule_prepare': 6, 'sched_clock_init': 4, 'dev_attr_show': 10, 'radix_tree_tag_set': 48, 'cpu_psci_cpu_boot': 15, 'page_anon_vma': 10, 'irq_chip_set_affinity_parent': 12, 'completion_done': 17, 'privileged_wrt_inode_uidgid': 2, 'calculate_normal_threshold': 26, 'next_online_pgdat': 2, 'c_next': 5, 'unregister_undef_hook': 23, 'inc_node_page_state': 57, 'clk_nodrv_disable_unprepare': 1, 'f__kfifo_len_r': 11, '_fdt_blocks_misordered': 25, 'rcu_batches_completed_sched': 3, 'gic_eoi_irq': 6, 'next_zone': 6, 'get_mm_exe_file': 32, 'rmem_dma_device_release': 3, 'usemap_size': 2, 'bad_inode_rename2': 2, 'radix_tree_tag_get': 46, 'mark_oom_victim': 42, 'p4d_clear_bad': 1, 'memblock_mem_size': 24, 'percpu_alloc_setup': 4, 'iort_pmsi_get_dev_id': 2, 'fpsimd_save_state': 21, 'rcu_sync_dtor': 35, 'generic_file_open': 10, 'arch_timer_evtstrm_available': 16, 'put_unused_fd': 18, 'anon_transport_dummy_function': 2, 'f__attach_mnt': 25, 'f__cpu_clear_user_page': 5, 'ktime_get': 34, 'cmp_range': 7, 'srcu_offline_cpu': 7, 'online_fair_sched_group': 1, 'exit_rcu': 1, 'grub_reclaim': 17, 'set_bit': 11, 'can_vma_merge_before': 35, 'aarch64_insn_is_branch_imm': 16, 'unmask_threaded_irq': 20, 'set_dma_reserve': 3, 'calibration_delay_done': 1, 'inode_add_bytes': 28, 'task_user_regset_view': 4, 'core_kernel_text': 26, 'arch_cpu_idle': 6, 'f__checkparam_dl': 17, 'early_platform_cleanup': 19, 'f__check_vc': 4, 'f__sw_hweight32': 13, 'mapping_tagged': 6, 'fget_raw': 6, 'driver_probe_done': 7, 'fortify_panic': 1, 'prio_changed_idle': 1, 'set_create_files_as': 7, 'swiotlb_nr_tbl': 3, 'strcpy': 6, 'console_init': 15, 'fpsimd_flush_task_state': 3, 'alloc_fair_sched_group': 2, 'to_ratio': 10, 'get_rr_interval_stop': 2, 'swiotlb_size_or_default': 7, 'irq_domain_xlate_onecell': 8, 'device_remove_file': 1, 'esr_get_class_string': 6, 'power_supply_match_device_node': 8, 'msi_domain_deactivate': 12, 'SyS_personality': 7, '_raw_spin_trylock': 12, 'psci_tos_resident_on': 5, 'f__init_single_page.isra.16': 15, 'node_memmap_size_bytes': 36, 'f__srcu_read_lock': 14, 'siphash_2u64': 128, 'dma_pool_free': 45, 'of_phandle_iterator_args': 17, 'its_build_vmapp_cmd': 54, 'f__lookup_mnt': 26, 'inode_sb_list_add': 22, 'arch_counter_read_cc': 7, 'bus_sort_breadthfirst': 80, 'gic_eoimode1_eoi_irq_1': 11, 'mktime64': 38, 'sys_clock_adjtime': 2, 'do_no_restart_syscall': 2, 'device_remove_bin_file': 1, 'bad_inode_tmpfile': 2, 'crc32_le': 86, 'ksoftirqd_should_run': 9, 'bin2hex': 16, 'gic_unmask_irq': 11, 'f__mnt_want_write_file': 11, 'cpu_psci_cpu_prepare': 6, 'cpu_do_idle': 3, 'proc_doulongvec_ms_jiffies_minmax': 2, 'hrtimers_init': 19, 'gic_eoimode1_mask_irq': 17, 'lookup_resource': 39, 'rcu_bh_qs': 8, 'gen_pool_for_each_chunk': 24, 'f__sg_page_iter_start': 4, 'bitmap_to_u32array': 35, 'clk_core_get_boundaries': 33, 'tick_broadcast': 8}
# 'CBZ_64_compbranch','CBNZ_64_compbranch','TBZ_only_testbranch', 'TBNZ_only_testbranch'
verified_inst_list = [ 'CBZ_64_compbranch','CBNZ_64_compbranch','ORR_64_log_imm', 'EOR_64_log_imm', 'ANDS_64S_log_imm', 'AND_64_log_imm','ADD_64_addsub_imm', 'ADDS_64S_addsub_imm', 'SUB_64_addsub_imm', 'SUBS_64S_addsub_imm' , 'MOVN_64_movewide', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'BR_64_branch_reg', 'RET_64R_branch_reg', 'ERET_64E_branch_reg', 'B_only_branch_imm', 'BL_only_branch_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'ADR_only_pcreladdr', 'ADRP_only_pcreladdr', 'ADD_64_addsub_shift', 'ADDS_64_addsub_shift', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'AND_64_log_shift', 'BIC_64_log_shift', 'ORR_64_log_shift', 'ORN_64_log_shift', 'EOR_64_log_shift', 'EON_64_log_shift', 'ANDS_64_log_shift', 'BICS_64_log_shift', 'B_only_condbranch' ]
# 
# Extended list for stat clucaltion for SOSP if we did more inst
verified_inst_list_ext = ['ADD_64_addsub_imm', 'ADDS_64S_addsub_imm', 'SUB_64_addsub_imm', 'SUBS_64S_addsub_imm', 'AND_64_log_imm', 'ORR_64_log_imm', 'EOR_64_log_imm', 'ANDS_64S_log_imm', 'MOVN_64_movewide', 'MOVZ_64_movewide', 'MOVK_64_movewide', 'BR_64_branch_reg', 'RET_64R_branch_reg', 'ERET_64E_branch_reg', 'B_only_branch_imm', 'BL_only_branch_imm', 'STR_64_ldst_pos', 'LDR_64_ldst_pos', 'ADR_only_pcreladdr', 'ADRP_only_pcreladdr', 'ADD_64_addsub_shift', 'ADDS_64_addsub_shift', 'SUB_64_addsub_shift', 'SUBS_64_addsub_shift', 'AND_64_log_shift', 'BIC_64_log_shift', 'ORR_64_log_shift', 'ORN_64_log_shift', 'EOR_64_log_shift', 'EON_64_log_shift', 'ANDS_64_log_shift', 'BICS_64_log_shift', 'B_only_condbranch', 'CBZ_64_compbranch', 'CBNZ_64_compbranch', 'SBFM_64M_bitfield' , 'BFM_64M_bitfield','UBFM_64M_bitfield','STR_64_ldst_regoff','LDR_64_ldst_regoff','TBZ_only_testbranch', 'TBNZ_only_testbranch']



# prints list of functions that are verified by checking their individual inst against a verified list of inst
def print_formalized_functions():
	bytecnt =0
	print("Printing verified functions list")	
	l=[]
	m={}
	for k,v in fnc_inst_dict.iteritems():
		cnt = 0	
		formalized=0	
		for inst in v:
			cnt+=1	
			if "32"  in inst and k not in l:
				l.append(k)
			if inst not in verified_inst_list:
					formalized = -1
					break
		if formalized == 0 and cnt == len(v):
			formalized = 1
			if k not in loops:
				m[k] = v
	for i,j in m.iteritems():
		print i #+ "\t"+ str(fnc_inst_cnt_dict[i])
		#print j
		bytecnt+= fnc_inst_cnt_dict[i]
	print bytecnt
	#print "Total functions verified based on 'verified_inst_list':" + str(len(m))
	print m
	print len(m)
	#for k in m:
	#	print k


def print_matched_fnc( matched_fnc):
	print ("\n\nTotal nos of  functions matching for given input classes:" + str(len(matched_fnc)))
	total_cnt = 0	
	for i in matched_fnc:
		print (i) 
		#+ "\t loc:" + str(fnc_inst_cnt_dict [i]))
		total_cnt+=fnc_inst_cnt_dict [i]
	print ("Total count for all functions:" + str(total_cnt))
	
	print ("\n\n Total looping functions in the matching set are")
	print (set(matched_fnc).intersection(loops))


def print_partially_matched_fnc (partially_matched_fnc):
	print ("\n\nPartially matched functions  for given input classes:" + str(len(partially_matched_fnc)))
	u_list = []

	# u_list provides information on total how many classes are in the n-1 category
	for k,v in partially_matched_fnc.iteritems():
		#print k + ":" + str(v)
		if v not in u_list:
			u_list.append(v)
	print (str (u_list))
			

if __name__ == '__main__':
	print_formalized_functions()
	i = 999
	while i:
		print ("\n\t*** Menu ***")
		print ("1> Calculate intersection set")
		print ("2> Calculate coverage by entering class names")
		print ("3> Exit")
		choice = raw_input ("Enter choice(1 or 2 or 3)::")

		# Calculates the number of ASL classes between any 2 zircon functions
		if choice == "1":
			fn1 = raw_input("Enter first function name:")
			fn2 = raw_input("Enter second function name:")
			cl1 = fnc_inst_class_dict[fn1]
			cl2 = fnc_inst_class_dict[fn2]
			print ("\n\n\n\t *** Class analysis ***")
			if cl1 is not None:
				print ("\nIntersection set for classes:" + str(set(cl1).intersection(cl2)))
				print ("Length of intersection set:" + str (len ((set(cl1).intersection(cl2)))))
				print ("\nDifference set for classes (s1-s2):" + str(set(cl1).difference(cl2)))
				print ("Length of difference set:" + str (len ((set(cl1).difference(cl2)))))
				print ("\nDifference set for classes (s2-s1):" + str(set(cl2).difference(cl1)))
				print ("Length of difference set:" + str (len ((set(cl2).difference(cl1)))))
			else:
				print ("Invalid class name")
			cl3 = fnc_inst_dict[fn1]
			cl4 = fnc_inst_dict[fn2]
			print ("\n\n\n\t*** Instruction analysis ***")
			if cl3 is not None:
				print ("\nIntersection set for instructions:" + str(set(cl3).intersection(cl4)))
				print ("Length of intersection set:" + str (len ((set(cl3).intersection(cl4)))))
				print ("\nDifference set for instructions (s1-s2):" + str(set(cl3).difference(cl4)))
				print ("Length of difference set:" + str (len ((set(cl3).difference(cl4)))))
				print ("\nDifference set for instructions (s2-s1):" + str(set(cl4).difference(cl3)))
				print ("Length of difference set:" + str (len ((set(cl4).difference(cl3)))))
			else:
				print ("invalid class name")
		# Logic to find how many fnc can be implemented by entering class names as inputs
		elif choice == "2":
			
			# Data structures for holding the results / inputs
			matched_fnc = []
			partial_matched_fnc = {}	# Dictionary instead of a list to hold the fnc name and the missed class
			classname_list = []
			
			# Print all the ASL classes used by zircon and thir stats for the 499 terminal fnc
			print ("Printing class names list")
			for item, val in menu_dict.iteritems():
				print (str(item) + "::" + str(val))
			num = raw_input("Enter how many class names:")
			

			# Input class names from the user
			for x in range (int(num)):
				nos = raw_input ("Enter class nos:")
				# Get the correct class name by looking up in the menu_dict
				classname_list.append (menu_dict[nos][0])

			# Loop through all the terminal functions in zircon
			# key is the name of a fnc in zircon, value is the list of ASL classes used by that function
			for key, value in fnc_inst_class_dict.iteritems():
				match_cnt = 0

				# Loop through all the classes input by the user and check if all the class input by the user match with the classes for a function
				for input_class in classname_list:
					if input_class in value:
						match_cnt+=1


				# Fully matched fnc				
				if match_cnt == len (value):
					matched_fnc.append(key)	

				# Partially matched fnc
				if match_cnt == len(value) -1:
					diff = set (value).difference(classname_list)
					partial_matched_fnc[key] = list (diff)

			# Output the results (how many fnc matched totally and paertially for input ASL classes) for analysis
			print_matched_fnc(matched_fnc)			
			print_partially_matched_fnc(partial_matched_fnc)
			
		else:
			print ("Exiting program")
			exit(0)
				
			
		again = raw_input ("\nEnter again:")
		if again == "y" or again == "Y" or again == "yes":
			i = 999
		else:
			i = -1
		 	

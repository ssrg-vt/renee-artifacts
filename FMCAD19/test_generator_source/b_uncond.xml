<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2017 ARM Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by ARM and the party that ARM delivered this document to. -->

<instructionsection id="B_uncond" title="B -- A64" type="instruction">
  <docvars>
    <docvar key="branch-offset" value="br26" />
    <docvar key="instr-class" value="general" />
    <docvar key="isa" value="A64" />
    <docvar key="mnemonic" value="B" />
  </docvars>
  <heading>B</heading>
  <desc>
    <brief>
      <para>Branch</para>
    </brief>
    <authored>
      <para>Branch causes an unconditional branch to a label at a PC-relative offset, with a hint that this is not a subroutine call or return.</para>
    </authored>
  </desc>
  <alias_list howmany="0"></alias_list>
  <classes>
    <iclass name="26-bit signed PC-relative branch offset" oneof="1" id="B_only_branch_imm" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="branch-offset" value="br26" />
        <docvar key="instr-class" value="general" />
        <docvar key="isa" value="A64" />
        <docvar key="mnemonic" value="B" />
      </docvars>
      <iclassintro count="1"></iclassintro>
      <regdiagram form="32" psname="aarch64/instrs/branch/unconditional/immediate" tworows="1">
        <box hibit="31" name="op" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="30" width="5" settings="5">
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="25" width="26" name="imm26" usename="1">
          <c colspan="26"></c>
        </box>
      </regdiagram>
      <encoding name="B_only_branch_imm" oneofinclass="1" oneof="1" label="26-bit signed PC-relative branch offset">
        <docvars>
          <docvar key="branch-offset" value="br26" />
          <docvar key="instr-class" value="general" />
          <docvar key="isa" value="A64" />
          <docvar key="mnemonic" value="B" />
        </docvars>
        <asmtemplate><text>B  </text><a link="label" hover="Label to be unconditionally branched to (field imm26)">&lt;label&gt;</a></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="aarch64/instrs/branch/unconditional/immediate" mylink="aarch64.instrs.branch.unconditional.immediate" enclabels="" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode"><a link="BranchType" file="shared_pseudocode.xml" hover="enumeration BranchType {BranchType_CALL, BranchType_ERET, BranchType_DBGEXIT,&#13; BranchType_RET, BranchType_JMP, BranchType_EXCEPTION,&#13; BranchType_UNKNOWN}">BranchType</a> branch_type = if op == '1' then <a link="BranchType_CALL" file="shared_pseudocode.xml" hover="enumeration BranchType {BranchType_CALL, BranchType_ERET, BranchType_DBGEXIT,&#13; BranchType_RET, BranchType_JMP, BranchType_EXCEPTION,&#13; BranchType_UNKNOWN}">BranchType_CALL</a> else <a link="BranchType_JMP" file="shared_pseudocode.xml" hover="enumeration BranchType {BranchType_CALL, BranchType_ERET, BranchType_DBGEXIT,&#13; BranchType_RET, BranchType_JMP, BranchType_EXCEPTION,&#13; BranchType_UNKNOWN}">BranchType_JMP</a>;
bits(64) offset = <a link="impl-shared.SignExtend.2" file="shared_pseudocode.xml" hover="function: bits(N) SignExtend(bits(M) x, integer N)">SignExtend</a>(imm26:'00', 64);</pstext>
        </ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="B_only_branch_imm" symboldefcount="1">
      <symbol link="label">&lt;label&gt;</symbol>
      <account encodedin="imm26">
        <intro>
          <para>Is the program label to be unconditionally branched to. Its offset from the address of this instruction, in the range +/-128MB, is encoded as "imm26" times 4.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="aarch64/instrs/branch/unconditional/immediate" mylink="commonps" enclabels="" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute">if branch_type == <a link="BranchType_CALL" file="shared_pseudocode.xml" hover="enumeration BranchType {BranchType_CALL, BranchType_ERET, BranchType_DBGEXIT,&#13; BranchType_RET, BranchType_JMP, BranchType_EXCEPTION,&#13; BranchType_UNKNOWN}">BranchType_CALL</a> then <a link="impl-aarch64.X.write.1" file="shared_pseudocode.xml" hover="accessor: X[integer n] = bits(width) value">X</a>[30] = <a link="impl-aarch64.PC.read.0" file="shared_pseudocode.xml" hover="accessor: bits(64) PC[]">PC</a>[] + 4;

<a link="impl-shared.BranchTo.2" file="shared_pseudocode.xml" hover="function: BranchTo(bits(N) target, BranchType branch_type)">BranchTo</a>(<a link="impl-aarch64.PC.read.0" file="shared_pseudocode.xml" hover="accessor: bits(64) PC[]">PC</a>[] + offset, branch_type);</pstext>
    </ps>
  </ps_section>
</instructionsection>

b_cond[ (IMPORTING arm_state) p : s ] : THEORY

	BEGIN

 IMPORTING  SignExtend, bts[32], bt[32], bitvectors@bv_adder, ConditionHolds, Basic_ASL_Types,
             BranchTo 
 
	Diag : bvec[32]
	addr : nat
	
        next : bvec[64]
	
	fail : bvec[64]
	
	%Next :below(exp2(64))

	diag : Type+ = [# Fixed1 : bvec[7], o1 : bvec[1], imm19 : bvec[19], o0 : bvec[1], cond_ : bvec[4] , length : {n : nat|n = 32} #]
	D : diag
	v : diag = D with [ Fixed1:= bts(Diag, 25, 31 ) , o1 := bt(Diag, 24 ) , imm19:= bts(Diag, 5, 23 ) ,o0:= bt(Diag, 4 ) ,cond_:= bts(Diag, 0, 3 ) , length:= 32 ]

%|- diag_TCC* : PROOF (inst 1 "(# Fixed1:= lambda(i:below(7)):false, o1:= lambda(i:below(1)):false, imm19:= lambda(i:below(19)):false, o0:= lambda(i:below(1)): false, cond_:= lambda(i:below(4)):false, length:= 32 #)") QED


 %ASL constants declarations


offset : bvec[64] = SignExtend(21 ,64 , bv[2](0b00) o v`imm19 )% check order

condition : bvec[4] = v`cond_ 


 %Operational

post : s =    if ConditionHolds[ p ](condition) then

                  BranchTo(p)(bv_adder[64]( p`PC`b, offset, false ), next , BranchType_JMP )`po
		  
              else p with [ `PC`b:= fail , `PC`i:= SInt(64)(fail)  ] 
	      endif

% Check the use of false in adder, only if the entire mem is full (rare thus neglected by the assumption enough mem in Zericon)

END b_cond

